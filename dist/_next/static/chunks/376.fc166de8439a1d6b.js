(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[376],{3454:function(t,e,s){"use strict";var i,r;t.exports=(null==(i=s.g.process)?void 0:i.env)&&"object"==typeof(null==(r=s.g.process)?void 0:r.env)?s.g.process:s(7663)},131:function(t,e,s){"use strict";s.r(e),s.d(e,{default:function(){return K}});var i=s(5893),r=s(7294),a=s(2260);class h extends a.Scene{preload(){this.load.image("background","assets/bg.png")}create(){this.scene.start("Preloader")}constructor(){super("Boot")}}class n{static centerX(){return n.screenWidth/2}static centerY(){return n.screenHeight/2}static shuffle(t){let e=t.length;for(;0!=e;){let s=Math.floor(Math.random()*e);e--,[t[e],t[s]]=[t[s],t[e]]}return t}constructor(){}}n.screenWidth=1080,n.screenHeight=1920;let o=new a.Events.EventEmitter;class c extends Phaser.GameObjects.Container{static preload(t){t.load.spritesheet("greenButtons","assets/adventure/components/greenButtons.png",{frameWidth:400,frameHeight:200})}onDown(){this.buttonSprite.setFrame(2),this.buttonText.y=this.textOffsetDown,this.isInitClick=!0}onUp(){this.buttonSprite.setFrame(0),this.buttonText.y=this.textOffsetUp,this.isInitClick&&this.onPressedCallback&&this.onPressedCallback(),this.isInitClick=!1}onOut(){this.buttonSprite.setFrame(0),this.buttonText.y=this.textOffsetUp,this.isInitClick=!1}onHover(){this.buttonSprite.setFrame(1),this.buttonText.y=this.textOffsetUp}onPressed(t){this.onPressedCallback=t}constructor(t,e=0,s=0,i=""){if(!t){console.log("missing scene");return}super(t,e,s,[]),this.textOffsetUp=-25,this.textOffsetDown=-15,this.isInitClick=!1,this.buttonSprite=t.make.sprite({x:0,y:0,key:"greenButtons",add:!0}),this.buttonText=t.make.text({x:0,y:this.textOffsetUp,text:i,origin:{x:.5,y:.5},style:{fontSize:"64px",fontFamily:"Arial",color:"#ffffff",align:"center"}}),this.add(this.buttonSprite),this.add(this.buttonText),t.add.existing(this),this.buttonSprite.setInteractive(),this.buttonSprite.on("pointerdown",this.onDown,this),this.buttonSprite.on("pointerup",this.onUp,this),this.buttonSprite.on("pointerover",this.onHover,this),this.buttonSprite.on("pointerout",this.onOut,this)}}class l extends a.Scene{create(t){this.camera=this.cameras.main,this.camera.setBackgroundColor(15132390),this.gameOverText=this.add.text(n.screenWidth/2,n.screenHeight/2-200,"Game Over",{fontFamily:"Arial Black",fontSize:64,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5).setDepth(100);let e="???";"win"==t.status&&(e="Level Completed!!!"),"lose"==t.status&&(e="Try Again!!!"),this.gameOverText=this.add.text(n.screenWidth/2,n.screenHeight/2,e,{fontFamily:"Arial Black",fontSize:64,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5).setDepth(100),this.button=new c(this,n.screenWidth/2,n.screenHeight/2+200,"Restart"),this.button.onPressed(()=>{this.changeScene()}),o.emit("current-scene-ready",this)}changeScene(){this.scene.start("MainMenu")}constructor(){super("GameOver")}}let d=[{key:"move",title:"Move",description:"Move to next position.",spriteKey:"cardMove",actionText:"Go",requireToComplete:!1,onPress:t=>{t.openModalResult()},onResult:t=>{void 0!=t&&void 0!=t.gameManager&&t.complete(()=>{t.gameManager.nextStep()})}},{key:"chest",title:"Chest",description:"+ 50 Coins.",spriteKey:"cardChest",actionText:"Get",requireToComplete:!1,onPress:t=>{t.openModalResult()},onResult:t=>{void 0!=t&&void 0!=t.gameManager&&(t.gameManager.addCoin(50),t.complete())}},{key:"battle",title:"Mr. Worm",description:"Defeat Mr. Worm",spriteKey:"cardWorm",actionText:"Fight",requireToComplete:!0,onPress:t=>{t.openModalResult()},onResult:t=>{void 0!=t&&void 0!=t.gameManager&&t.gameManager.setBattleSlotNumber(t.slotNumber)}},{key:"heal",title:"Potion",description:"Heal 1 health",spriteKey:"cardHeal",actionText:"Use",requireToComplete:!1,onPress:t=>{t.openModalResult()},onResult:t=>{void 0!=t&&void 0!=t.gameManager&&(t.gameManager.heal(),t.complete())}},{key:"rock",title:"Rock",description:"It' just a rock. Nothing Special.",spriteKey:"cardRock",actionText:"Check",requireToComplete:!1,onPress:t=>{t.openModalResult()},onResult:t=>{void 0!=t&&void 0!=t.gameManager&&t.complete()}},{key:"end",title:"End",description:"Level ending.",spriteKey:"cardEnd",actionText:"Yay!",requireToComplete:!1,onPress:t=>{t.openModalResult()},onResult:t=>{void 0!=t&&void 0!=t.gameManager&&(t.gameManager.setEnd(),t.complete())}}];class g{static findCard(t){return d.find(e=>e.key==t)}}class u extends Phaser.GameObjects.Container{static preload(t){t.load.spritesheet("closeButton","assets/adventure/components/SpritesheetButtonMenuCross.png",{frameWidth:256,frameHeight:256})}onDown(){this.buttonSprite.setFrame(2),this.isInitClick=!0}onUp(){this.buttonSprite.setFrame(0),this.isInitClick&&this.onPressedCallback&&this.onPressedCallback(),this.isInitClick=!1}onOut(){this.buttonSprite.setFrame(0),this.isInitClick=!1}onHover(){this.buttonSprite.setFrame(1)}onPressed(t){this.onPressedCallback=t}constructor(t,e=0,s=0){if(!t){console.log("missing scene");return}super(t,e,s,[]),this.isInitClick=!1,this.buttonSprite=t.make.sprite({x:0,y:0,key:"closeButton",add:!0}),this.add(this.buttonSprite),t.add.existing(this),this.buttonSprite.setInteractive(),this.buttonSprite.on("pointerdown",this.onDown,this),this.buttonSprite.on("pointerup",this.onUp,this),this.buttonSprite.on("pointerover",this.onHover,this),this.buttonSprite.on("pointerout",this.onOut,this)}}class p extends Phaser.Scene{static preload(t){}renderSuccessResult(){}renderErrorResult(){}close(){this.scene.remove(this.sceneKey)}constructor(t,e,s){var i;super(e),this.parent=t,this.sceneKey=e,t.scene.add(e,this,!0),this.backdrop=this.add.rectangle(n.screenWidth/2,n.screenHeight/2,n.screenWidth,n.screenHeight,0,.5),this.container=this.add.container(n.screenWidth/2,n.screenHeight/2),this.panel=this.add.rectangle(0,0,n.screenWidth-200,1200,15132390),this.container.add(this.panel),s.cardData&&(this.title=this.add.text(0,-400,s.cardData.title,{font:"bold 60px Arial",color:"#00000",align:"center"}),this.title.setOrigin(.5,.5),this.container.add(this.title),this.description=this.add.text(0,150,s.cardData.description,{font:"40px Arial",color:"#00000",align:"center"}),this.description.setOrigin(.5,.5),this.container.add(this.description),this.sprite=this.add.sprite(0,-100,s.cardData.spriteKey),this.sprite.scale=1.2,this.container.add(this.sprite)),this.closeButton=new u(this,350,-500),this.closeButton.buttonSprite.displayHeight=150,this.closeButton.buttonSprite.displayWidth=150,this.closeButton.onPressed(()=>{this.close()}),this.container.add(this.closeButton),this.button=new c(this,n.screenWidth/2,n.screenHeight/2+400,null===(i=s.cardData)||void 0===i?void 0:i.actionText),this.button.onPressed(()=>{s&&s.cardData&&s.cardData.onResult&&s.cardData.onResult(s),this.close()})}}class m extends a.GameObjects.Container{static preload(t){t.load.image("cardChest","assets/adventure/game/card/cardChest.png"),t.load.image("cardHeal","assets/adventure/game/card/cardHeal.png"),t.load.image("cardWorm","assets/adventure/game/card/cardWorm.png"),t.load.image("cardEnd","assets/adventure/game/card/cardEnd.png"),t.load.image("cardRock","assets/adventure/game/card/cardRock.png"),t.load.image("cardMove","assets/adventure/game/card/cardMove.png")}clean(){this.rect.destroy(),this.button.destroy(),this.title.destroy(),this.sprite.destroy(),this.gameManager.clearCardKey(this.slotNumber)}openModalResult(){this.scene&&this.cardData?new p(this.scene,"sceneModalCard",this):this.complete()}animIn(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.y=this.oriY-400,this.alpha=0,this.setVisible(!0),this.scene.tweens.add({targets:this,y:this.oriY,duration:250,alpha:1,ease:"Power1"}).on("complete",()=>{this.canInput=!0,this.slotNumber==this.gameManager.completedBattleSlotNumber&&(console.log("Complete Battle > "+this.gameManager.completedBattleSlotNumber),this.gameManager.completedBattleSlotNumber=0,this.complete()),t&&t()})}complete(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.canInput=!1,this.scene.tweens.add({targets:this,duration:250,alpha:0,ease:"Linear"}).on("complete",()=>{this.clean(),t&&t()})}constructor(t,e,s,i,r,a){if(super(t,e,s),this.width=300,this.height=500,this.slotNumber=a,this.gameManager=r,this.oriX=e,this.oriY=s,this.canInput=!1,console.log("Render Card > "+a),this.cardData=g.findCard(i),void 0==this.cardData){console.error("Unable to get Card Data for key > "+i);return}this.rect=t.add.rectangle(0,0,this.width,this.height,13882323),this.rect.setStrokeStyle(5,0),this.title=t.make.text({x:0,y:-(this.height/2-50),text:this.cardData.title,origin:{x:.5,y:.5},style:{fontSize:"40px",fontFamily:"Arial",color:"#00000",align:"center"}}),this.sprite=t.make.sprite({x:0,y:-50,key:this.cardData.spriteKey,add:!0}),this.sprite.displayWidth=120,this.sprite.displayHeight=120,this.button=new c(t,0,this.height/2-80,"Open"),this.button.scale=.5,this.button.onPressed(()=>{var t;(null===(t=this.cardData)||void 0===t?void 0:t.onPress)&&this.canInput&&this.cardData.onPress(this)}),this.add(this.rect),this.add(this.title),this.add(this.sprite),this.add(this.button),t.add.existing(this)}}class b{heal(){let t=this.currentHp+1;t>=0&&t<=this.maxHp&&(this.currentHp=t),this.scene.events.emit("player-update")}damage(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=this.currentHp-t;e<0&&(e=0),e>this.maxHp&&(e=this.maxHp),this.currentHp=e,this.scene.events.emit("player-update")}nextStep(){let t=this.currentStep+1;t<0&&(t=0),t>this.maxStep&&(t=this.maxStep),this.currentStep=t,this.scene.events.emit("player-update"),this.scene.events.emit("new-step")}addCoin(t){this.coin+=t,this.scene.events.emit("player-update")}getHpString(){return"Hitpoints: "+this.currentHp+"/"+this.maxHp}getStepString(){return"Distance: "+this.currentStep+"/"+this.maxStep}getCoinString(){return"Coin: "+this.coin}generateCardKeys(){if(this.currentStep==this.maxStep)this.cardKey1="",this.cardKey2="end",this.cardKey3="";else if(0==this.currentStep)this.cardKey1="",this.cardKey2="move",this.cardKey3="";else{let t=["chest","heal","battle","rock"];1==this.currentStep&&(t=["chest","heal","rock"],(t=n.shuffle(t)).unshift("battle"),t=t.slice(0,3)),t=n.shuffle(t),this.cardKey1=t[0],this.cardKey2=t[1],this.cardKey3=t[2]}}getCardKey(t){return 1==t?this.cardKey1:2==t?this.cardKey2:3==t?this.cardKey3:""}clearCardKey(t){1==t&&(this.cardKey1=""),2==t&&(this.cardKey2=""),3==t&&(this.cardKey3=""),this.checkCanNext()&&"move"!=this.cardKey1&&"move"!=this.cardKey2&&"move"!=this.cardKey3&&(1==t&&(this.cardKey1="move"),2==t&&(this.cardKey2="move"),3==t&&(this.cardKey3="move")),console.log("CardKeys > "+this.cardKey1+","+this.cardKey2+","+this.cardKey3),this.scene.events.emit("card-update")}saveData(){let t={hp:this.currentHp,coin:this.coin,step:this.currentStep,cardKey1:this.cardKey1,cardKey2:this.cardKey2,cardKey3:this.cardKey3,battleSlotNumber:this.battleSlotNumber,completedBattleSlotNumber:this.completedBattleSlotNumber};this.scene.registry.setFreeze(!1),this.scene.registry.set("play",JSON.stringify(t)),this.scene.registry.setFreeze(!0)}loadData(){if(this.scene.registry.setFreeze(!1),this.scene.registry.has("play")){let t=JSON.parse(this.scene.registry.get("play"));this.coin=t.coin,this.currentHp=t.hp,this.currentStep=t.step,this.cardKey1=t.cardKey1,this.cardKey2=t.cardKey2,this.cardKey3=t.cardKey3,this.battleSlotNumber=t.battleSlotNumber,this.completedBattleSlotNumber=t.completedBattleSlotNumber}this.scene.registry.setFreeze(!0),this.scene.events.emit("player-update"),this.scene.events.emit("card-update")}clearData(){this.scene.registry.reset()}checkCanNext(){return"battle"!=this.cardKey1&&"battle"!=this.cardKey2&&"battle"!=this.cardKey3}checkGameStatus(){let t="ongoing";return 0==this.currentHp&&(t="lose"),this.isEnd&&(t="win"),t}setBattleSlotNumber(t){"battle"==this.getCardKey(t)&&(this.battleSlotNumber=t,this.scene.events.emit("start-battle"))}setCompletedBattleSlotNumber(t){"battle"==this.getCardKey(t)&&(this.completedBattleSlotNumber=t)}setEnd(){this.isEnd=!0,this.scene.events.emit("player-update")}constructor(t){this.maxStep=5,this.maxHp=3,this.currentStep=0,this.currentHp=3,this.coin=0,this.scene=t,this.cardKey1="",this.cardKey2="",this.cardKey3="",this.isEnd=!1,this.battleSlotNumber=0,this.completedBattleSlotNumber=0}}class y extends Phaser.GameObjects.Container{static preload(t){}onDown(){this.buttonBox.fillColor=13369344,this.isInitClick=!0}onUp(){this.buttonBox.fillColor=16711680,this.isInitClick&&this.onPressedCallback&&this.onPressedCallback(),this.isInitClick=!1}onOut(){this.buttonBox.fillColor=16711680,this.isInitClick=!1}onHover(){this.buttonBox.fillColor=16737894}onPressed(t){this.onPressedCallback=t}constructor(t,e=0,s=0,i=""){if(!t){console.log("missing scene");return}super(t,e,s,[]),this.isInitClick=!1,this.buttonBox=t.add.rectangle(0,0,400,150,16711680),this.buttonText=t.make.text({x:0,y:0,text:i,origin:{x:.5,y:.5},style:{fontSize:"64px",fontFamily:"Arial",color:"#ffffff",align:"center"}}),this.add(this.buttonBox),this.add(this.buttonText),t.add.existing(this),this.buttonBox.setInteractive(),this.buttonBox.on("pointerdown",this.onDown,this),this.buttonBox.on("pointerup",this.onUp,this),this.buttonBox.on("pointerover",this.onHover,this),this.buttonBox.on("pointerout",this.onOut,this)}}class S extends Phaser.GameObjects.Container{static preload(t){}onDown(){this.isDisabled||(this.buttonSprite.setScale(1),this.isInitClick=!0)}onUp(){this.isDisabled||(this.buttonSprite.setScale(1),this.isInitClick&&this.onPressedCallback&&this.onPressedCallback(),this.isInitClick=!1)}onOut(){this.isDisabled||(this.buttonSprite.setScale(1),this.isInitClick=!1)}onHover(){this.isDisabled||this.buttonSprite.setScale(1.1)}onPressed(t){this.onPressedCallback=t}setDisabled(t){this.isDisabled=t,this.buttonSprite&&(this.isDisabled?this.buttonSprite.tint=16711680:this.buttonSprite.tint=16777215)}constructor(t,e=0,s=0,i){if(!t){console.log("missing scene");return}super(t,e,s,[]),this.isInitClick=!1,this.isDisabled=!1,this.buttonSprite=t.make.sprite({x:0,y:0,key:i,add:!0}),this.add(this.buttonSprite),t.add.existing(this),this.buttonSprite.setInteractive(),this.buttonSprite.on("pointerdown",this.onDown,this),this.buttonSprite.on("pointerup",this.onUp,this),this.buttonSprite.on("pointerover",this.onHover,this),this.buttonSprite.on("pointerout",this.onOut,this)}}class f{static preload(t){t.load.image("health","assets/adventure/game/health.png"),t.load.image("healthNone","assets/adventure/game/healthNone.png")}renderHealth(t,e){this.health&&this.health.length>0&&this.health.forEach(t=>{t.destroy()}),this.health=[];let s=-(100*(e-1)/2);for(var i=0;i<e;i++)if(i<t){let t=this.scene.add.sprite(s+100*i,0,"health");this.health.push(t),this.container.add(t)}else{let t=this.scene.add.sprite(s+100*i,0,"healthNone");this.health.push(t),this.container.add(t)}}constructor(t,e,s){this.scene=t,this.centerX=e,this.centerY=s,this.container=t.add.container(e,s)}}class x{static preload(t){t.load.image("endFlagSmall","assets/adventure/game/endFlagSmall.png")}updateProgressValue(t){let e=t;e>this.max?e=this.max:e<0&&(e=0),this.current=e,console.log("progress > "+this.current),this.updateProgressBar()}updateProgressBar(){let t=(this.width-2*this.padding)*(this.current/this.max),e=this.height-2*this.padding;this.progressBar.fillStyle(16776960,1),this.progressBar.fillCircle(this.startX-this.radius/2,this.startY+this.height/2,this.radius-this.padding),this.progressBar.fillRect(this.startX+this.padding,this.startY+this.padding,t,e)}resetProgressBar(){this.current=0,this.progressBar.clear(),this.updateProgressBar()}constructor(t,e,s,i){this.width=n.screenWidth-140,this.height=20,this.radius=20,this.padding=5,this.scene=t,this.current=0,this.max=i,this.startX=e-this.width/2,this.startY=s-this.height/2,this.endX=this.startX+this.width,this.progressBox=this.scene.add.graphics(),this.progressBox.fillStyle(2236962,1),this.progressBox.fillRect(this.startX,this.startY,this.width,this.height),this.progressBox.fillCircle(this.startX-this.radius/2,this.startY+this.height/2,this.radius),this.progressBar=this.scene.add.graphics(),this.flag=this.scene.add.sprite(this.endX+this.radius/2,this.startY+this.height/2,"endFlagSmall"),this.flag.displayHeight=80,this.flag.displayWidth=80,this.updateProgressBar()}}class v extends a.Scene{create(t){let e=!1;t&&t.isContinue&&(e=!0,this.scene.settings.data={}),this.camera=this.cameras.main,this.camera.setBackgroundColor(15132390),this.gameManager=new b(this),this.cards=[null,null,null],e&&this.gameManager.loadData(),this.renderDebug&&this.renderDebugRegenerate(),this.events.once("game-entry",()=>{this.initUI(),this.events.emit("game-start")}),this.events.once("game-start",()=>{e?this.renderCards():this.events.emit("new-step")}),this.events.addListener("new-step",()=>{this.gameManager.generateCardKeys(),this.renderCards()}),this.events.addListener("player-update",()=>{this.updateUI(),this.checkWinCondition()}),this.events.addListener("card-update",()=>{this.renderCards()}),this.events.addListener("start-battle",()=>{this.gotoBattleScene()}),o.emit("current-scene-ready",this),this.events.emit("game-entry")}renderDebugSaveLoad(){let t=new y(this,n.screenWidth-150,n.screenHeight-200,"Save");t.scale=.5,this.add.existing(t),t.onPressed(()=>{this.gameManager.saveData()});let e=new y(this,n.screenWidth-150,n.screenHeight-100,"Load");e.scale=.5,this.add.existing(e),e.onPressed(()=>{this.gameManager.loadData()})}renderDebugDamage(){let t=new y(this,150,n.screenHeight-100,"-1 Hp");t.scale=.5,this.add.existing(t),t.onPressed(()=>{this.gameManager.damage()})}renderDebugHeal(){let t=new y(this,150,n.screenHeight-200,"+1 Hp");t.scale=.5,this.add.existing(t),t.onPressed(()=>{this.gameManager.heal()})}renderDebugRegenerate(){let t=new y(this,150,n.screenHeight-300,"Skip");t.scale=.5,this.add.existing(t),t.onPressed(()=>{this.gameManager.nextStep()})}initUI(){this.stepText=this.add.text(n.screenWidth/2,50,this.gameManager.getStepString(),{fontSize:40,color:"black"}),this.stepText.setOrigin(.5,.5),this.coinText=this.add.text(n.screenWidth/2,n.screenHeight-260,this.gameManager.getCoinString(),{fontSize:40,color:"black"}),this.coinText.setOrigin(.5,.5),this.playerHealthBar=new f(this,n.screenWidth/2,n.screenHeight-400),this.updateHealth(),this.renderPlayerAvatar(),this.progressionBar=new x(this,n.screenWidth/2,100,this.gameManager.maxStep),this.updateProgress()}updateUI(){this.stepText&&this.stepText.setText(this.gameManager.getStepString()),this.coinText&&this.coinText.setText(this.gameManager.getCoinString()),this.hpText&&this.hpText.setText(this.gameManager.getHpString()),this.updateProgress(),this.updateHealth()}updateProgress(){this.progressionBar.updateProgressValue(this.gameManager.currentStep)}updateHealth(){this.playerHealthBar.renderHealth(this.gameManager.currentHp,this.gameManager.maxHp)}renderPlayerAvatar(){this.player=this.add.sprite(200,n.screenHeight/2+100,"player")}renderNextButton(){this.nextHint=this.add.text(n.screenWidth-200,n.screenHeight/2+200,"Go",{fontSize:40,color:"black"}).setOrigin(.5),this.nextButton=new S(this,n.screenWidth-200,n.screenHeight/2+100,"next"),this.nextButton.onPressed(()=>{this.gameManager.nextStep()})}renderCards(){this.renderCard(0),this.renderCard(1),this.renderCard(2)}renderCard(t){var e,s;this.resetCard(t);let i=[200,n.screenWidth/2,n.screenWidth-200],r=n.screenHeight/3;(!this.cards[t]||null==this.cards[t])&&this.gameManager.getCardKey(t+1)&&(this.cards[t]=new m(this,i[t],r,this.gameManager.getCardKey(t+1),this.gameManager,t+1)),null===(e=this.cards[t])||void 0===e||e.setVisible(!1),null===(s=this.cards[t])||void 0===s||s.animIn()}resetCard(t){var e,s;let i=null===(e=this.cards[t])||void 0===e?void 0:e.cardData;i&&i.key!=this.gameManager.getCardKey(t+1)&&(null===(s=this.cards[t])||void 0===s||s.destroy(),this.cards[t]=null)}checkWinCondition(){"ongoing"!=this.gameManager.checkGameStatus()&&this.gotoGameOverScene()}gotoGameOverScene(){this.clean(),this.gameManager.clearData(),this.scene.start("GameOver",{status:this.gameManager.checkGameStatus()})}gotoBattleScene(){this.clean(),this.gameManager.saveData(),this.scene.start("Battle")}clean(){this.events.removeListener("game-entry"),this.events.removeListener("game-start"),this.events.removeListener("new-step"),this.events.removeListener("player-update"),this.events.removeListener("card-update"),this.events.removeListener("start-battle"),this.cameras.resetAll()}constructor(){super("Game"),this.renderDebug=!0}}class C extends a.Scene{create(){this.background=this.add.image(n.screenWidth/2,n.screenHeight/2,"mainMenuBg"),this.button=new c(this,n.screenWidth/2,n.screenHeight/2,"Start"),this.button.onPressed(()=>{this.changeScene()}),this.title=this.add.text(n.screenWidth/2,n.screenHeight/4,"Hamochi Adventure",{fontFamily:"Arial Black",fontSize:60,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5).setDepth(100),o.emit("current-scene-ready",this)}changeScene(){this.scene.start("Game")}constructor(){super("MainMenu")}}class k{static preload(t){t.load.image("bulb","assets/adventure/game/bulb.png"),t.load.image("bulbBack","assets/adventure/game/bulbBack.png")}addValue(t){let e=this.current+t;e>this.target?e=this.target:e<0&&(e=0),this.current=e,this.updateProgressBar(),this.current==this.target&&this.scene.events.emit("player-attack"),this.scene.tweens.add({targets:[this.progressBox,this.progressBar],y:"+=10",duration:150,yoyo:!0,onComplete:()=>{}})}updateProgressBar(){let t=(this.width-2*this.padding)*(this.current/this.target),e=this.height-2*this.padding;this.progressBar.fillStyle(65280,1),this.progressBar.fillRect(this.startX+this.padding,this.startY+this.padding,t,e)}renderBulbButton(){this.bulbContainer=this.scene.add.container(n.screenWidth/2,n.screenHeight/2).setDepth(900),this.bulbBack=this.scene.add.sprite(0,0,"bulbBack"),this.bulb=this.scene.add.sprite(0,0,"bulb"),this.bulbContainer.add(this.bulbBack),this.bulbContainer.add(this.bulb),this.bulbBack.setInteractive(),this.bulbBack.on("pointerdown",()=>{this.resetProgressBar(),this.callbackBulbButton&&this.callbackBulbButton()},this),this.hideBulbButton()}showBulbButton(){this.bulbBack.setInteractive(),this.bulbContainer.setVisible(!0),this.bulbContainer.scale=1,this.bulbTween=this.scene.tweens.add({targets:this.bulbContainer,scale:1.1,repeat:-1,yoyo:!0,duration:300})}hideBulbButton(){this.bulbBack.disableInteractive(),this.bulbContainer.setVisible(!1),this.bulbTween&&this.scene.tweens.remove(this.bulbTween)}resetProgressBar(){this.current=0,this.progressBar.clear(),this.updateProgressBar()}constructor(t,e,s,i=20){this.current=0,this.width=400,this.height=50,this.padding=10,this.scene=t,this.target=i,this.x=e,this.y=s,this.startX=e-this.width/2,this.startY=s-this.height/2,this.progressBox=this.scene.add.graphics(),this.progressBox.fillStyle(2236962,.8),this.progressBox.fillRect(this.startX,this.startY,this.width,this.height),this.progressBar=this.scene.add.graphics(),this.updateProgressBar(),this.renderBulbButton()}}class B extends Phaser.GameObjects.Container{static preload(t){}onDown(){this.buttonBox.fillColor=16777215,this.isInitClick=!0}onUp(){this.buttonBox.fillColor=16777215,this.isInitClick&&this.onPressedCallback&&this.onPressedCallback(this),this.isInitClick=!1}onOut(){this.buttonBox.fillColor=16777215,this.isInitClick=!1}onHover(){this.buttonBox.fillColor=16777215}onPressed(t){this.onPressedCallback=t}showCorrectState(){this.buttonBox.disableInteractive(),this.isSelected&&(this.buttonBox.fillColor=65280)}showWrongState(){this.buttonBox.disableInteractive(),this.isSelected&&(this.buttonBox.fillColor=16711680),this.isAnswer&&this.renderAnswerTag()}renderAnswerTag(){let t=this.scene.add.circle(this.boxWidth/2-20,0,30,16711680),e=this.scene.add.text(this.boxWidth/2-20,0,"A",{fontSize:40}).setOrigin(.5);this.add(t),this.add(e)}constructor(t,e=0,s=0,i,r,a,h){if(!t){console.log("missing scene");return}super(t,e,s,[]),this.isSelected=!1,this.isInitClick=!1,this.boxWidth=i,this.boxHeight=r,this.isAnswer=h,this.buttonBox=t.add.rectangle(0,0,i,r,16777215),this.buttonText=t.make.text({x:0,y:0,text:a,origin:{x:.5,y:.5},style:{fontSize:"64px",fontFamily:"Arial",color:"#000000",align:"center"}}),this.add(this.buttonBox),this.add(this.buttonText),t.add.existing(this),this.buttonBox.setInteractive(),this.buttonBox.on("pointerdown",this.onDown,this),this.buttonBox.on("pointerup",this.onUp,this),this.buttonBox.on("pointerover",this.onHover,this),this.buttonBox.on("pointerout",this.onOut,this)}}let w=[{name:"Apple",isAnswer:!0},{name:"Orange",isAnswer:!1},{name:"Pear",isAnswer:!1},{name:"Lemon",isAnswer:!1}];class M extends Phaser.Scene{static preload(t){t.load.image("questionApple","assets/adventure/game/question/apple.png")}renderChoices(){this.choiceA&&this.choiceA.destroy(),this.choiceB&&this.choiceB.destroy(),this.choiceC&&this.choiceC.destroy(),this.choiceD&&this.choiceD.destroy();let t=n.shuffle(w);this.choiceA=this.renderChoiceButton(this.choiceX1,this.choiceY1,t[0]),this.choiceB=this.renderChoiceButton(this.choiceX2,this.choiceY1,t[1]),this.choiceC=this.renderChoiceButton(this.choiceX1,this.choiceY2,t[2]),this.choiceD=this.renderChoiceButton(this.choiceX2,this.choiceY2,t[3])}renderChoiceButton(t,e,s){let i=new B(this,t,e,this.choiceWidth,this.choiceHeight,s.name,s.isAnswer);return i.onPressedCallback=t=>{t.isSelected=!0,this.updateChoiceButtons(t.isAnswer)},this.container.add(i),i}updateChoiceButtons(t){t?(this.status="correct",this.statusText.setText("Correct"),this.statusText.setColor("green"),this.choiceA&&this.choiceA.showCorrectState(),this.choiceB&&this.choiceB.showCorrectState(),this.choiceC&&this.choiceC.showCorrectState(),this.choiceD&&this.choiceD.showCorrectState()):(this.status="wrong",this.statusText.setText("Wrong"),this.statusText.setColor("red"),this.choiceA&&this.choiceA.showWrongState(),this.choiceB&&this.choiceB.showWrongState(),this.choiceC&&this.choiceC.showWrongState(),this.choiceD&&this.choiceD.showWrongState()),this.okButton.setVisible(!0),this.statusText.setVisible(!0)}startQuestion(){this.reset(),this.renderChoices(),this.scene.setVisible(!0)}endQuestion(){this.reset(),this.scene.setVisible(!1)}reset(){this.status="pending",this.okButton.setVisible(!1),this.statusText.setText("-"),this.statusText.setVisible(!1)}constructor(t,e){super(e),this.parent=t,this.sceneKey=e,t.scene.add(e,this,!0),this.backdrop=this.add.rectangle(n.screenWidth/2,n.screenHeight/2,n.screenWidth,n.screenHeight,0,.5),this.container=this.add.container(n.screenWidth/2,n.screenHeight/2),this.panel=this.add.rectangle(0,0,n.screenWidth-50,n.screenHeight-50,15132390),this.container.add(this.panel),this.sprite=this.add.sprite(0,-250,"questionApple"),this.container.add(this.sprite);let s=n.screenWidth-50;this.choiceWidth=s/2-50,this.choiceHeight=100,this.choiceX1=-(this.choiceWidth/2+25),this.choiceX2=this.choiceWidth/2+25,this.choiceY1=400,this.choiceY2=this.choiceY1+25+this.choiceHeight,this.okButton=new c(this,this.choiceX2,this.choiceY2+200,"OK").setScale(.8),this.okButton.onPressed(()=>{"correct"==this.status?this.callbackCorrect&&this.callbackCorrect():this.callbackWrong&&this.callbackWrong(),this.endQuestion()}),this.okButton.setVisible(!1),this.container.add(this.okButton),this.statusText=this.add.text(this.choiceX1,this.choiceY2+200,"Status",{fontSize:60,color:"#000000"}).setOrigin(.5),this.statusText.setVisible(!1),this.container.add(this.statusText),this.scene.setVisible(!1)}}class H extends a.Scene{init(){}preload(){c.preload(this),m.preload(this),u.preload(this),k.preload(this),M.preload(this),x.preload(this),f.preload(this),this.load.setPath("assets"),this.load.image("mainMenuBg","/adventure/mainMenu/bg.png"),this.load.image("next","/adventure/game/next.png"),this.load.image("player","/adventure/game/player.png"),this.load.image("blue","/adventure/game/gem/blue.png"),this.load.image("green","/adventure/game/gem/green.png"),this.load.image("orange","/adventure/game/gem/orange.png"),this.load.image("red","/adventure/game/gem/red.png")}create(){this.scene.start("MainMenu")}constructor(){super("Preloader")}}class A{onCountDown(){this.isPaused||this.addValue(1)}addValue(t){let e=this.current+t;e>this.target?e=this.target:e<0&&(e=0),this.current=e,this.renderProgressBar(),this.current==this.target&&(this.scene.events.emit("opponent-attack"),this.pause())}pause(){this.isPaused=!0}resume(){this.isPaused=!1}renderProgressBar(){let t=(this.width-2*this.padding)*(this.current/this.target),e=this.height-2*this.padding;this.progressBar.fillStyle(65280,1),this.progressBar.fillRect(this.startX+this.padding,this.startY+this.padding,t,e)}resetProgressBar(){this.current=0,this.progressBar.clear(),this.renderProgressBar()}constructor(t,e,s,i=5){this.current=0,this.width=400,this.height=50,this.padding=10,this.scene=t,this.target=i,this.startX=e-this.width/2,this.startY=s-this.height/2,this.progressBox=this.scene.add.graphics(),this.progressBox.fillStyle(2236962,.8),this.progressBox.fillRect(this.startX,this.startY,this.width,this.height),this.progressBar=this.scene.add.graphics(),this.renderProgressBar(),this.timedEvent=this.scene.time.addEvent({delay:1e3,callback:this.onCountDown,callbackScope:this,loop:!0}),this.pause()}}class T{renderHealth(){this.healthBar.renderHealth(this.currentHp,this.maxHp)}renderAttackBar(){this.attackBar=new A(this.scene,n.screenWidth/2,450,this.attackTime),this.attackBar.resume()}damage(t){let e=this.currentHp-t;e>=0&&e<=this.maxHp?this.currentHp=e:e<0?this.currentHp=0:e>this.maxHp&&(this.currentHp=this.maxHp),console.log(this.currentHp),this.renderHealth(),this.scene.events.emit("opponent-update")}resetAttack(){this.attackBar.resetProgressBar()}stopAttack(){this.attackBar.pause()}resumeAttack(){this.scene.time.delayedCall(1e3,()=>{this.attackBar.resume()},[],this)}constructor(t,e){this.maxHp=2,this.attackTime=15,this.scene=t,this.card=e,this.currentHp=this.maxHp,this.avatar=this.scene.add.sprite(n.centerX(),200,e.spriteKey),this.healthBar=new f(this.scene,n.centerX(),350),this.healthBar.container.scale=.8,this.renderHealth(),this.renderAttackBar()}}class P{drawField(){this.gameArray=[],this.poolArray=[],this.inputArray=[],this.gemGroup=this.scene.add.group();for(let t=0;t<this.fieldSizeY;t++){this.gameArray[t]=[],this.inputArray[t]=[];for(let e=0;e<this.fieldSizeX;e++){let s=this.randomColor(),i=this.startX+(this.gemSize*e+this.gemSize/2),r=this.startY+(this.gemSize*t+this.gemSize/2),a=this.scene.add.sprite(i,r,s);this.gemGroup.add(a);do{let s=this.randomColor();a.setTexture(s),this.gameArray[t][e]={gemColor:s,gemSprite:a,isEmpty:!1}}while(this.isMatch(t,e))}}}isMatch(t,e){return this.isHorizontalMatch(t,e)||this.isVerticalMatch(t,e)}isHorizontalMatch(t,e){return this.gemAt(t,e).gemColor==this.gemAt(t,e-1).gemColor&&this.gemAt(t,e).gemColor==this.gemAt(t,e-2).gemColor}isVerticalMatch(t,e){return this.gemAt(t,e).gemColor==this.gemAt(t-1,e).gemColor&&this.gemAt(t,e).gemColor==this.gemAt(t-2,e).gemColor}gemAt(t,e){return t<0||t>=this.fieldSizeY||e<0||e>=this.fieldSizeX?-1:this.gameArray[t][e]}gemSelect(t){if(this.canPick){this.dragging=!0;let e=Math.floor((t.y-this.startY)/this.gemSize),s=Math.floor((t.x-this.startX)/this.gemSize),i=this.gemAt(e,s);-1!=i&&(null==this.selectedGem?(i.gemSprite.setScale(1.2),i.gemSprite.setDepth(1),this.selectedGem=i):this.areTheSame(i,this.selectedGem)?(this.selectedGem.gemSprite.setScale(1),this.selectedGem=null):this.areNext(i,this.selectedGem)?(this.selectedGem.gemSprite.setScale(1),this.swapGems(this.selectedGem,i,!0)):(this.selectedGem.gemSprite.setScale(1),i.gemSprite.setScale(1.2),this.selectedGem=i))}}startSwipe(t){if(this.dragging&&null!=this.selectedGem){let e=t.downX-t.x,s=t.downY-t.y,i=0,r=0;if(e>this.gemSize/2&&Math.abs(s)<this.gemSize/4&&(r=-1),e<-this.gemSize/2&&Math.abs(s)<this.gemSize/4&&(r=1),s>this.gemSize/2&&Math.abs(e)<this.gemSize/4&&(i=-1),s<-this.gemSize/2&&Math.abs(e)<this.gemSize/4&&(i=1),i+r!=0){let t=this.gemAt(this.getGemRow(this.selectedGem)+i,this.getGemCol(this.selectedGem)+r);-1!=t&&(this.selectedGem.gemSprite.setScale(1),this.swapGems(this.selectedGem,t,!0),this.dragging=!1)}}}stopSwipe(){this.dragging=!1}areTheSame(t,e){return this.getGemRow(t)==this.getGemRow(e)&&this.getGemCol(t)==this.getGemCol(e)}getGemRow(t){return Math.floor((t.gemSprite.y-this.startY)/this.gemSize)}getGemCol(t){return Math.floor((t.gemSprite.x-this.startX)/this.gemSize)}areNext(t,e){return Math.abs(this.getGemRow(t)-this.getGemRow(e))+Math.abs(this.getGemCol(t)-this.getGemCol(e))==1}swapGems(t,e,s){this.swappingGems=2,this.canPick=!1;let i=t.gemColor,r=t.gemSprite,a=e.gemColor,h=e.gemSprite,n=this.getGemRow(t),o=this.getGemCol(t),c=this.getGemRow(e),l=this.getGemCol(e);this.gameArray[n][o].gemColor=a,this.gameArray[n][o].gemSprite=h,this.gameArray[c][l].gemColor=i,this.gameArray[c][l].gemSprite=r,this.tweenGem(t,e,s),this.tweenGem(e,t,s)}tweenGem(t,e,s){let i=this.getGemRow(t),r=this.getGemCol(t);this.scene.tweens.add({targets:this.gameArray[i][r].gemSprite,x:this.startX+(r*this.gemSize+this.gemSize/2),y:this.startY+(i*this.gemSize+this.gemSize/2),duration:this.swapSpeed,callbackScope:this,onComplete:function(){this.swappingGems--,0==this.swappingGems&&(!this.matchInBoard()&&s?this.swapGems(t,e,!1):this.matchInBoard()?this.handleMatches():(this.canPick=!0,this.selectedGem=null))}})}matchInBoard(){for(let t=0;t<this.fieldSizeY;t++)for(let e=0;e<this.fieldSizeX;e++)if(this.isMatch(t,e))return!0;return!1}handleMatches(){this.removeMap=[];for(let t=0;t<this.fieldSizeY;t++){this.removeMap[t]=[];for(let e=0;e<this.fieldSizeX;e++)this.removeMap[t].push(0)}this.markMatches("horizontal"),this.markMatches("vertical"),this.destroyGems()}markMatches(t){let e="horizontal"==t?this.fieldSizeY:this.fieldSizeX,s="horizontal"==t?this.fieldSizeX:this.fieldSizeY;for(let i=0;i<e;i++){let e=1,r=-1,a=0,h=0;for(let n=0;n<s;n++)if((h="horizontal"==t?this.gemAt(i,n).gemColor:this.gemAt(n,i).gemColor)==r&&e++,h!=r||n==s-1){if(e>=3)for(let s=0;s<e;s++)"horizontal"==t?this.removeMap[i][a+s]++:this.removeMap[a+s][i]++;a=n,e=1,r=h}}}destroyGems(){let t=0;for(let e=0;e<this.fieldSizeY;e++)for(let s=0;s<this.fieldSizeX;s++)this.removeMap[e][s]>0&&(t++,this.scene.tweens.add({targets:this.gameArray[e][s].gemSprite,alpha:.5,duration:this.destroySpeed,callbackScope:this,onComplete:function(){t--,this.gameArray[e][s].gemSprite.visible=!1,this.poolArray.push(this.gameArray[e][s].gemSprite),this.addScore(1,this.gameArray[e][s].gemSprite.x,this.gameArray[e][s].gemSprite.y),0==t&&(this.makeGemsFall(),this.replenishField())}}),this.gameArray[e][s].isEmpty=!0)}makeGemsFall(){for(let t=this.fieldSizeY-2;t>=0;t--)for(let e=0;e<this.fieldSizeX;e++)if(!this.gameArray[t][e].isEmpty){let s=this.holesBelow(t,e);s>0&&(this.scene.tweens.add({targets:this.gameArray[t][e].gemSprite,y:this.gameArray[t][e].gemSprite.y+s*this.gemSize,duration:this.fallSpeed*s}),this.gameArray[t+s][e]={gemSprite:this.gameArray[t][e].gemSprite,gemColor:this.gameArray[t][e].gemColor,isEmpty:!1},this.gameArray[t][e].isEmpty=!0)}}holesBelow(t,e){let s=0;for(let i=t+1;i<this.fieldSizeY;i++)this.gameArray[i][e].isEmpty&&s++;return s}replenishField(){let t=0;for(let e=0;e<this.fieldSizeX;e++){let s=this.holesInCol(e);if(s>0)for(let i=0;i<s;i++){t++;let r=this.randomColor();this.gameArray[i][e].gemColor=r,this.gameArray[i][e].gemSprite=this.poolArray.pop(),this.gameArray[i][e].gemSprite.setTexture(r),this.gameArray[i][e].gemSprite.visible=!!this.isShow,this.gameArray[i][e].gemSprite.x=this.startX+(this.gemSize*e+this.gemSize/2),this.gameArray[i][e].gemSprite.y=this.startY+(this.gemSize/2-(s-i)*this.gemSize),this.gameArray[i][e].gemSprite.alpha=0,this.gameArray[i][e].isEmpty=!1,this.scene.tweens.add({targets:this.gameArray[i][e].gemSprite,y:this.startY+(this.gemSize*i+this.gemSize/2),alpha:1,duration:this.fallSpeed*s,callbackScope:this,onComplete:function(){0==--t&&(this.matchInBoard()?this.scene.time.addEvent({delay:250,callback:this.handleMatches()}):(this.canPick=!0,this.selectedGem=null))}})}}}holesInCol(t){var e=0;for(let s=0;s<this.fieldSizeY;s++)this.gameArray[s][t].isEmpty&&e++;return e}randomColor(){return this.gemColors[Phaser.Math.Between(0,this.gemColors.length-1)]}addScore(t,e,s){this.score+=t,this.scoreText&&this.scoreText.setText("Score: "+this.score),this.isShow&&this.moveScoreToTarget(e,s,()=>{this.callbackScore&&this.callbackScore(t)})}show(){this.gemGroup.setVisible(!0),this.isShow=!0}hide(){this.gemGroup.setVisible(!1),this.isShow=!1}setTarget(t,e){this.targetX=t,this.targetY=e}moveScoreToTarget(t,e,s){let i=this.scene.add.circle(t,e,20,65280).setDepth(100);this.scene.tweens.add({targets:i,x:this.targetX,y:this.targetY,duration:300,callbackScope:this,onComplete:function(){i.destroy(),s&&s()}})}constructor(t,e,s){this.startX=0,this.startY=0,this.fieldSize=6,this.fieldSizeX=7,this.fieldSizeY=6,this.gemSize=128,this.swapSpeed=200,this.fallSpeed=100,this.destroySpeed=200,this.gemColors=["blue","green","orange","red"],this.canPick=!0,this.dragging=!1,this.gameArray=[],this.poolArray=[],this.inputArray=[],this.score=0,this.isShow=!0,this.scene=t,this.startX=e-this.fieldSizeX*this.gemSize/2,this.startY=s-this.fieldSizeY*this.gemSize/2,this.drawField(),this.scene.input.on("pointerdown",this.gemSelect,this),this.scene.input.on("pointermove",this.startSwipe,this),this.scene.input.on("pointerup",this.stopSwipe,this)}}class W extends a.Scene{create(t){this.isDone=!1,this.modalQuestion=new M(this,"ModalQuestion"),this.modalQuestion.callbackCorrect=()=>{console.log("callbackCorrect"),this.playerAttack(!0)},this.modalQuestion.callbackWrong=()=>{console.log("callbackWrong"),this.playerAttack(!1)},this.camera=this.cameras.main,this.camera.setBackgroundColor(15132390),this.gameManager=new b(this),this.gameManager.loadData(),this.centerMessage=this.add.text(n.screenWidth/2,n.screenHeight/2-150,"",{font:"bold 60px Arial",color:"#00000",align:"center"}).setOrigin(.5).setVisible(!1);let e=this.gameManager.getCardKey(this.gameManager.battleSlotNumber),s=g.findCard(e);if(void 0==s){console.log("Unable to find Card Data"),this.simulateWin();return}this.opponent=new T(this,s),this.player=this.add.sprite(n.screenWidth/2,n.screenHeight-200,"player"),this.playerHealthBar=new f(this,n.screenWidth/2,n.screenHeight-350),this.renderHealth(),this.playerAttackBar=new k(this,n.screenWidth/2,n.screenHeight-450,20),this.playerAttackBar.callbackBulbButton=()=>{this.playerAttackBar.hideBulbButton(),this.modalQuestion.startQuestion()},this.match=new P(this,n.screenWidth/2,n.screenHeight/2-50),this.match.setTarget(this.player.x,this.player.y),this.match.callbackScore=t=>{this.playerAttackBar.addValue(t)},this.events.addListener("player-update",()=>{this.renderHealth(),this.checkWinLoseCondition()}),this.events.addListener("opponent-update",()=>{this.checkWinLoseCondition()}),this.events.addListener("player-attack",()=>{this.opponent.stopAttack(),this.match.hide(),this.playerAttackBar.showBulbButton()}),this.events.addListener("opponent-attack",()=>{this.opponent.stopAttack(),this.match.hide(),this.opponentAttack()}),this.events.addListener("continue",()=>{this.centerMessage.setVisible(!1),this.isDone||(this.match.show(),this.opponent.resumeAttack())}),this.events.addListener("battle-end",()=>{this.isDone=!0,this.match.hide(),this.opponent.stopAttack()});let i=new y(this,150,n.screenHeight-100,"Set Win");i.scale=.5,this.add.existing(i),i.onPressed(()=>{this.simulateWin()});let r=new y(this,150,n.screenHeight-200,"Set Lose");r.scale=.5,this.add.existing(r),r.onPressed(()=>{this.simulateLose()});let a=new y(this,n.screenWidth-150,n.screenHeight-200,"Attack");a.scale=.5,this.add.existing(a),a.onPressed(()=>{this.opponent.stopAttack(),this.match.hide(),this.playerAttack(!0)}),o.emit("current-scene-ready",this)}renderHealth(){this.playerHealthBar.renderHealth(this.gameManager.currentHp,this.gameManager.maxHp)}playerAttack(t){this.centerMessage.setText("Player Attacking!"),this.centerMessage.setVisible(!0),this.time.delayedCall(1e3,()=>{t?(this.centerMessage.setText("Mr. Worm HP -1"),this.opponent.damage(1)):this.centerMessage.setText("Attack failed!!!")},[],this),this.time.delayedCall(2e3,()=>{this.events.emit("continue")},[],this)}opponentAttack(){this.centerMessage.setText("Mr. Worm Attacking!"),this.centerMessage.setVisible(!0),this.time.delayedCall(1e3,()=>{this.centerMessage.setText("Player HP -1"),this.gameManager.damage(),this.opponent.resetAttack()},[],this),this.time.delayedCall(2e3,()=>{this.events.emit("continue")},[],this)}simulateWin(){this.processWin()}simulateLose(){this.gameManager.damage(),this.gameManager.damage(),this.gameManager.damage()}checkWinLoseCondition(){!this.isDone&&(this.gameManager.currentHp<=0&&this.processLose(),this.opponent.currentHp<=0&&this.processWin())}processWin(){this.events.emit("battle-end"),this.time.delayedCall(1e3,()=>{this.renderEnding("win")},[],this)}processLose(){this.events.emit("battle-end"),this.time.delayedCall(1e3,()=>{this.renderEnding("lose")},[],this)}renderEnding(t){let e="Invalid Status...";"win"==t&&(e="Mr. Worm fainted."),"lose"==t&&(e="You fainted!"),this.add.text(n.screenWidth/2,n.screenHeight/2-150,e,{font:"bold 60px Arial",color:"#00000",align:"center"}).setOrigin(.5,.5),new c(this,n.screenWidth/2,n.screenHeight/2+200,"OK").onPressed(()=>{"win"==t&&this.handleWin(),"lose"==t&&this.handleLose()})}handleWin(){this.clean(),this.gameManager.setCompletedBattleSlotNumber(this.gameManager.battleSlotNumber),this.gameManager.setBattleSlotNumber(0),this.gameManager.saveData(),this.scene.start("Game",{isContinue:!0})}handleLose(){this.clean(),this.gameManager.clearData(),this.scene.start("GameOver",{status:this.gameManager.checkGameStatus()})}clean(){this.events.removeListener("player-update"),this.events.removeListener("opponent-update"),this.events.removeListener("player-attack"),this.events.removeListener("opponent-attack"),this.events.removeListener("continue"),this.events.removeListener("battle-end"),this.cameras.resetAll(),this.scene.remove("ModalQuestion")}constructor(){super("Battle")}}let D={type:a.AUTO,width:1080,height:1920,parent:"game-container",backgroundColor:3817549,scene:[h,H,C,v,W,l],scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.ENVELOP}};var z=t=>new a.Game({...D,parent:t});let G=(0,r.forwardRef)(function(t,e){let{currentActiveScene:s}=t,a=(0,r.useRef)(null);return(0,r.useLayoutEffect)(()=>(null===a.current&&(a.current=z("game-container"),"function"==typeof e?e({game:a.current,scene:null}):e&&(e.current={game:a.current,scene:null})),()=>{a.current&&(a.current.destroy(!0),null!==a.current&&(a.current=null))}),[e]),(0,r.useEffect)(()=>(o.on("current-scene-ready",t=>{s&&"function"==typeof s&&s(t),"function"==typeof e?e({game:a.current,scene:t}):e&&(e.current={game:a.current,scene:t})}),()=>{o.removeListener("current-scene-ready")}),[s,e]),(0,i.jsx)("div",{id:"game-container"})});var K=function(){let t=(0,r.useRef)(null);return(0,i.jsx)("div",{id:"app",children:(0,i.jsx)(G,{ref:t,currentActiveScene:t=>{}})})}},7663:function(t){!function(){var e={229:function(t){var e,s,i,r=t.exports={};function a(){throw Error("setTimeout has not been defined")}function h(){throw Error("clearTimeout has not been defined")}function n(t){if(e===setTimeout)return setTimeout(t,0);if((e===a||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(s){try{return e.call(null,t,0)}catch(s){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:a}catch(t){e=a}try{s="function"==typeof clearTimeout?clearTimeout:h}catch(t){s=h}}();var o=[],c=!1,l=-1;function d(){c&&i&&(c=!1,i.length?o=i.concat(o):l=-1,o.length&&g())}function g(){if(!c){var t=n(d);c=!0;for(var e=o.length;e;){for(i=o,o=[];++l<e;)i&&i[l].run();l=-1,e=o.length}i=null,c=!1,function(t){if(s===clearTimeout)return clearTimeout(t);if((s===h||!s)&&clearTimeout)return s=clearTimeout,clearTimeout(t);try{s(t)}catch(e){try{return s.call(null,t)}catch(e){return s.call(this,t)}}}(t)}}function u(t,e){this.fun=t,this.array=e}function p(){}r.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)e[s-1]=arguments[s];o.push(new u(t,e)),1!==o.length||c||n(g)},u.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=p,r.addListener=p,r.once=p,r.off=p,r.removeListener=p,r.removeAllListeners=p,r.emit=p,r.prependListener=p,r.prependOnceListener=p,r.listeners=function(t){return[]},r.binding=function(t){throw Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw Error("process.chdir is not supported")},r.umask=function(){return 0}}},s={};function i(t){var r=s[t];if(void 0!==r)return r.exports;var a=s[t]={exports:{}},h=!0;try{e[t](a,a.exports,i),h=!1}finally{h&&delete s[t]}return a.exports}i.ab="//";var r=i(229);t.exports=r}()}}]);