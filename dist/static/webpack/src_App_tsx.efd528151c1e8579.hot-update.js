"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/GameManager.ts":
/*!********************************************!*\
  !*** ./src/game/components/GameManager.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GameManager; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n\nclass GameManager {\n    heal() {\n        let newHp = this.currentHp + 1;\n        if (newHp >= 0 && newHp <= this.maxHp) {\n            this.currentHp = newHp;\n        }\n        this.scene.events.emit(\"player-update\");\n    }\n    damage() {\n        let value = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n        let newHp = this.currentHp - value;\n        if (newHp < 0) newHp = 0;\n        if (newHp > this.maxHp) newHp = this.maxHp;\n        this.currentHp = newHp;\n        this.scene.events.emit(\"player-update\");\n    }\n    nextStep() {\n        let newStep = this.currentStep + 1;\n        if (newStep < 0) newStep = 0;\n        if (newStep > this.maxStep) newStep = this.maxStep;\n        this.currentStep = newStep;\n        this.scene.events.emit(\"player-update\");\n        this.scene.events.emit(\"new-step\");\n    }\n    addCoin(value) {\n        this.coin += value;\n        this.scene.events.emit(\"player-update\");\n    }\n    getHpString() {\n        return \"Hitpoints: \" + this.currentHp + \"/\" + this.maxHp;\n    }\n    getStepString() {\n        return \"Distance: \" + this.currentStep + \"/\" + this.maxStep;\n    }\n    getCoinString() {\n        return \"Coin: \" + this.coin;\n    }\n    generateCardKeys() {\n        if (this.currentStep == this.maxStep) {\n            this.cardKey1 = \"\";\n            this.cardKey2 = \"end\";\n            this.cardKey3 = \"\";\n        } else if (this.currentStep == 0) {\n            this.cardKey1 = \"\";\n            this.cardKey2 = \"move\";\n            this.cardKey3 = \"\";\n        } else {\n            let keys = [\n                \"chest\",\n                \"heal\",\n                \"battle\",\n                \"rock\"\n            ];\n            if (this.currentStep == 1) {\n                keys = [\n                    \"chest\",\n                    \"heal\",\n                    \"rock\"\n                ];\n                keys = _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shuffle(keys);\n                keys.unshift(\"battle\");\n            }\n            keys = _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shuffle(keys);\n            this.cardKey1 = keys[0];\n            this.cardKey2 = keys[1];\n            this.cardKey3 = keys[2];\n        }\n    }\n    getCardKey(slotNumber) {\n        if (slotNumber == 1) return this.cardKey1;\n        if (slotNumber == 2) return this.cardKey2;\n        if (slotNumber == 3) return this.cardKey3;\n        return \"\";\n    }\n    clearCardKey(slotKey) {\n        if (slotKey == 1) {\n            this.cardKey1 = \"\";\n        }\n        if (slotKey == 2) {\n            this.cardKey2 = \"\";\n        }\n        if (slotKey == 3) {\n            this.cardKey3 = \"\";\n        }\n        if (this.checkCanNext()) {\n            // If no move card\n            if (this.cardKey1 != \"move\" && this.cardKey2 != \"move\" && this.cardKey3 != \"move\") {\n                if (slotKey == 1) {\n                    this.cardKey1 = \"move\";\n                }\n                if (slotKey == 2) {\n                    this.cardKey2 = \"move\";\n                }\n                if (slotKey == 3) {\n                    this.cardKey3 = \"move\";\n                }\n            }\n        }\n        console.log(\"CardKeys > \" + this.cardKey1 + \",\" + this.cardKey2 + \",\" + this.cardKey3);\n        this.scene.events.emit(\"card-update\") // Update Next\n        ;\n    }\n    saveData() {\n        let saveData = {\n            hp: this.currentHp,\n            coin: this.coin,\n            step: this.currentStep,\n            cardKey1: this.cardKey1,\n            cardKey2: this.cardKey2,\n            cardKey3: this.cardKey3,\n            battleSlotNumber: this.battleSlotNumber,\n            completedBattleSlotNumber: this.completedBattleSlotNumber\n        };\n        this.scene.registry.setFreeze(false);\n        this.scene.registry.set(\"play\", JSON.stringify(saveData));\n        this.scene.registry.setFreeze(true);\n    }\n    loadData() {\n        this.scene.registry.setFreeze(false);\n        if (this.scene.registry.has(\"play\")) {\n            let loadData = JSON.parse(this.scene.registry.get(\"play\"));\n            this.coin = loadData.coin;\n            this.currentHp = loadData.hp;\n            this.currentStep = loadData.step;\n            this.cardKey1 = loadData.cardKey1;\n            this.cardKey2 = loadData.cardKey2;\n            this.cardKey3 = loadData.cardKey3;\n            this.battleSlotNumber = loadData.battleSlotNumber;\n            this.completedBattleSlotNumber = loadData.completedBattleSlotNumber;\n        }\n        this.scene.registry.setFreeze(true);\n        this.scene.events.emit(\"player-update\");\n        this.scene.events.emit(\"card-update\");\n    }\n    clearData() {\n        this.scene.registry.reset();\n    }\n    checkCanNext() {\n        // Can Next if only no battle \n        if (this.cardKey1 == \"battle\") return false;\n        if (this.cardKey2 == \"battle\") return false;\n        if (this.cardKey3 == \"battle\") return false;\n        return true;\n    }\n    checkGameStatus() {\n        let status = \"ongoing\";\n        if (this.currentHp == 0) {\n            status = \"lose\";\n        }\n        // if( this.currentStep == this.maxStep ){\n        //     status = 'win';\n        // }\n        if (this.isEnd) {\n            status = \"win\";\n        }\n        return status;\n    }\n    setBattleSlotNumber(slotNumber) {\n        if (this.getCardKey(slotNumber) == \"battle\") {\n            this.battleSlotNumber = slotNumber;\n            this.scene.events.emit(\"start-battle\");\n        }\n    }\n    setCompletedBattleSlotNumber(slotNumber) {\n        if (this.getCardKey(slotNumber) == \"battle\") {\n            this.completedBattleSlotNumber = slotNumber;\n        }\n    }\n    setEnd() {\n        this.isEnd = true;\n        this.scene.events.emit(\"player-update\");\n    }\n    constructor(scene){\n        this.maxStep = 5;\n        this.maxHp = 3;\n        //\n        this.currentStep = 0;\n        this.currentHp = 3;\n        this.coin = 0;\n        this.scene = scene;\n        this.cardKey1 = \"\";\n        this.cardKey2 = \"\";\n        this.cardKey3 = \"\";\n        this.isEnd = false;\n        this.battleSlotNumber = 0;\n        this.completedBattleSlotNumber = 0;\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/components/GameManager.ts\n"));

/***/ })

});