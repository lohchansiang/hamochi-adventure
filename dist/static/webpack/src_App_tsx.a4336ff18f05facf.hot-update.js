"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/SaveManager.ts":
/*!********************************************!*\
  !*** ./src/game/components/SaveManager.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SaveManager; }\n/* harmony export */ });\nclass SaveManager {\n    resetSaveData() {\n        localStorage.removeItem(\"savedVocabs\");\n    }\n    demoSaveData() {\n        let demoData = {\n            blueprints: [\n                \"apple\",\n                \"orange\"\n            ],\n            owned: [\n                \"banana\"\n            ]\n        };\n    }\n    demoGetString() {\n        return localStorage.getItem(\"savedVocabs\");\n    }\n    saveDataToStorage() {\n    // \n    }\n    loadDataFromStorage() {}\n    constructor(scene){\n        this.scene = scene;\n        // Initiate Data Container\n        this.saveVocabs = {\n            blueprints: [],\n            owned: []\n        };\n    // Initiate: should be loading saved data on load\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL1NhdmVNYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFvQmUsTUFBTUE7SUFpQmpCQyxnQkFBZTtRQUNYQyxhQUFhQyxVQUFVLENBQUM7SUFDNUI7SUFFQUMsZUFBYztRQUNWLElBQUlDLFdBQVc7WUFDWEMsWUFBWTtnQkFBQztnQkFBUTthQUFTO1lBQzlCQyxPQUFPO2dCQUFDO2FBQVM7UUFDckI7SUFDSjtJQUVBQyxnQkFBMkI7UUFDdkIsT0FBT04sYUFBYU8sT0FBTyxDQUFDO0lBQ2hDO0lBRUFDLG9CQUFtQjtJQUNmLEdBQUc7SUFDUDtJQUVBQyxzQkFBcUIsQ0FFckI7SUFqQ0FDLFlBQVlDLEtBQVcsQ0FBQztRQUNwQixJQUFJLENBQUNBLEtBQUssR0FBR0E7UUFFYiwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDQyxVQUFVLEdBQUc7WUFDZFIsWUFBWSxFQUFFO1lBQ2RDLE9BQU8sRUFBRTtRQUNiO0lBRUEsaURBQWlEO0lBQ3JEO0FBd0JKO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2dhbWUvY29tcG9uZW50cy9TYXZlTWFuYWdlci50cz8xNTEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjZW5lIH0gZnJvbSBcInBoYXNlclwiXG5cbi8vIERhdGEgU3RydWN0dXJlXG4vLyBDb250YWluZXIgPiBQbGF5ZXIgRGF0YSwgVm9jYWJzIERhdGFcbi8vIFBsYXllciBEYXRhID4gSGVhbHRoLCBDb2luXG5cblxuLyogVm9jYWJzIERhdGFcbiAgICBTdHJ1Y3R1cmVcbiAgICB7XG4gICAgICAgIGJsdWVwcmludHM6IHN0cmluZ1tdLFxuICAgICAgICBvd25lZDogc3RyaW5nW10sXG4gICAgfVxuKi9cblxudHlwZSBTYXZlVm9jYWJzID0ge1xuICAgIGJsdWVwcmludHM6IHN0cmluZ1tdLFxuICAgIG93bmVkOiBzdHJpbmdbXVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTYXZlTWFuYWdlcntcblxuICAgIHNjZW5lOiBTY2VuZVxuICAgIHNhdmVWb2NhYnM6IFNhdmVWb2NhYnNcblxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOlNjZW5lKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG5cbiAgICAgICAgLy8gSW5pdGlhdGUgRGF0YSBDb250YWluZXJcbiAgICAgICAgdGhpcy5zYXZlVm9jYWJzID0ge1xuICAgICAgICAgICAgYmx1ZXByaW50czogW10sXG4gICAgICAgICAgICBvd25lZDogW11cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEluaXRpYXRlOiBzaG91bGQgYmUgbG9hZGluZyBzYXZlZCBkYXRhIG9uIGxvYWRcbiAgICB9XG4gICAgXG4gICAgcmVzZXRTYXZlRGF0YSgpe1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnc2F2ZWRWb2NhYnMnKTtcbiAgICB9XG5cbiAgICBkZW1vU2F2ZURhdGEoKXtcbiAgICAgICAgbGV0IGRlbW9EYXRhID0ge1xuICAgICAgICAgICAgYmx1ZXByaW50czogWydhcHBsZScsJ29yYW5nZSddLFxuICAgICAgICAgICAgb3duZWQ6IFsnYmFuYW5hJ11cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRlbW9HZXRTdHJpbmcoKTpzdHJpbmd8bnVsbHtcbiAgICAgICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzYXZlZFZvY2FicycpO1xuICAgIH1cblxuICAgIHNhdmVEYXRhVG9TdG9yYWdlKCl7XG4gICAgICAgIC8vIFxuICAgIH1cblxuICAgIGxvYWREYXRhRnJvbVN0b3JhZ2UoKXtcbiAgICAgICAgXG4gICAgfVxufSJdLCJuYW1lcyI6WyJTYXZlTWFuYWdlciIsInJlc2V0U2F2ZURhdGEiLCJsb2NhbFN0b3JhZ2UiLCJyZW1vdmVJdGVtIiwiZGVtb1NhdmVEYXRhIiwiZGVtb0RhdGEiLCJibHVlcHJpbnRzIiwib3duZWQiLCJkZW1vR2V0U3RyaW5nIiwiZ2V0SXRlbSIsInNhdmVEYXRhVG9TdG9yYWdlIiwibG9hZERhdGFGcm9tU3RvcmFnZSIsImNvbnN0cnVjdG9yIiwic2NlbmUiLCJzYXZlVm9jYWJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/components/SaveManager.ts\n"));

/***/ })

});