"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/HammerBar.ts":
/*!****************************************************!*\
  !*** ./src/game/components/CardMaker/HammerBar.ts ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HammerBar; }\n/* harmony export */ });\nclass HammerBar {\n    static preload(scene) {}\n    renderHammer() {\n        if (this.sprites && this.sprites.length > 0) {\n            this.sprites.forEach((h)=>{\n                h.destroy();\n            });\n        }\n        this.sprites = [];\n        const gap = 150;\n        const totalWidth = gap * (this.manager.maxFailChance - 1);\n        let startX = -(totalWidth / 2);\n        let startY = 0;\n        for(var i = 0; i < this.manager.maxFailChance; i++){\n            if (i < this.manager.currentFailChance) {\n                let sprite = this.scene.add.sprite(startX + gap * i, startY, \"hammer\");\n                sprite.setScale(0.5);\n                sprite.rotation = Phaser.Math.DegToRad(45);\n                this.sprites.push(sprite);\n                this.container.add(sprite);\n            } else {\n                let sprite = this.scene.add.sprite(startX + gap * i, startY, \"hammerBroke\");\n                let cross = this.scene.add.sprite(startX + gap * i, startY, \"iconCross\");\n                cross.setTint(0xff0000);\n                sprite.setScale(0.5);\n                sprite.rotation = Phaser.Math.DegToRad(45);\n                cross.setDisplaySize(50, 50);\n                cross.x += sprite.displayWidth / 3;\n                cross.y += sprite.displayHeight / 3;\n                this.sprites.push(sprite);\n                this.container.add(sprite);\n                this.sprites.push(cross);\n                this.container.add(cross);\n            }\n        }\n    }\n    constructor(scene, x, y){\n        this.scene = scene;\n        this.manager = scene.manager;\n        this.centerX = x;\n        this.centerY = y;\n        this.container = scene.add.container(x, y);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9IYW1tZXJCYXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUllLE1BQU1BO0lBRWpCLE9BQU9DLFFBQVNDLEtBQW1CLEVBQUUsQ0FFckM7SUFvQkFDLGVBQWM7UUFDVixJQUFJLElBQUksQ0FBQ0MsT0FBTyxJQUFJLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLEdBQUcsR0FBRztZQUN6QyxJQUFJLENBQUNELE9BQU8sQ0FBQ0UsT0FBTyxDQUFDLENBQUNDO2dCQUNsQkEsRUFBRUMsT0FBTztZQUNiO1FBQ0o7UUFFQSxJQUFJLENBQUNKLE9BQU8sR0FBRyxFQUFFO1FBRWpCLE1BQU1LLE1BQWE7UUFDbkIsTUFBTUMsYUFBb0JELE1BQU0sS0FBSSxDQUFDRSxPQUFPLENBQUNDLGFBQWEsR0FBQztRQUMzRCxJQUFJQyxTQUFnQixDQUFHSCxDQUFBQSxhQUFXO1FBQ2xDLElBQUlJLFNBQWdCO1FBQ3BCLElBQUksSUFBSUMsSUFBRSxHQUFFQSxJQUFFLElBQUksQ0FBQ0osT0FBTyxDQUFDQyxhQUFhLEVBQUNHLElBQUk7WUFDekMsSUFBSUEsSUFBSSxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssaUJBQWlCLEVBQUU7Z0JBQ3BDLElBQUlDLFNBQTRCLElBQUksQ0FBQ2YsS0FBSyxDQUFDZ0IsR0FBRyxDQUFDRCxNQUFNLENBQUNKLFNBQVFKLE1BQUlNLEdBQUdELFFBQU87Z0JBRTVFRyxPQUFPRSxRQUFRLENBQUM7Z0JBQ2hCRixPQUFPRyxRQUFRLEdBQUdDLE9BQU9DLElBQUksQ0FBQ0MsUUFBUSxDQUFDO2dCQUV2QyxJQUFJLENBQUNuQixPQUFPLENBQUNvQixJQUFJLENBQUNQO2dCQUNsQixJQUFJLENBQUNRLFNBQVMsQ0FBQ1AsR0FBRyxDQUFDRDtZQUN2QixPQUFLO2dCQUNELElBQUlBLFNBQTRCLElBQUksQ0FBQ2YsS0FBSyxDQUFDZ0IsR0FBRyxDQUFDRCxNQUFNLENBQUNKLFNBQVFKLE1BQUlNLEdBQUdELFFBQU87Z0JBQzVFLElBQUlZLFFBQTRCLElBQUksQ0FBQ3hCLEtBQUssQ0FBQ2dCLEdBQUcsQ0FBQ0QsTUFBTSxDQUFDSixTQUFRSixNQUFJTSxHQUFHRCxRQUFPO2dCQUM1RVksTUFBTUMsT0FBTyxDQUFDO2dCQUVkVixPQUFPRSxRQUFRLENBQUM7Z0JBQ2hCRixPQUFPRyxRQUFRLEdBQUdDLE9BQU9DLElBQUksQ0FBQ0MsUUFBUSxDQUFDO2dCQUN2Q0csTUFBTUUsY0FBYyxDQUFDLElBQUc7Z0JBQ3hCRixNQUFNRyxDQUFDLElBQUlaLE9BQU9hLFlBQVksR0FBQztnQkFDL0JKLE1BQU1LLENBQUMsSUFBSWQsT0FBT2UsYUFBYSxHQUFDO2dCQUVoQyxJQUFJLENBQUM1QixPQUFPLENBQUNvQixJQUFJLENBQUNQO2dCQUNsQixJQUFJLENBQUNRLFNBQVMsQ0FBQ1AsR0FBRyxDQUFDRDtnQkFFbkIsSUFBSSxDQUFDYixPQUFPLENBQUNvQixJQUFJLENBQUNFO2dCQUNsQixJQUFJLENBQUNELFNBQVMsQ0FBQ1AsR0FBRyxDQUFDUTtZQUN2QjtRQUNKO0lBQ0o7SUFqREFPLFlBQWEvQixLQUFlLEVBQUUyQixDQUFRLEVBQUVFLENBQVEsQ0FBRTtRQUM5QyxJQUFJLENBQUM3QixLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDUyxPQUFPLEdBQUdULE1BQU1TLE9BQU87UUFDNUIsSUFBSSxDQUFDdUIsT0FBTyxHQUFHTDtRQUNmLElBQUksQ0FBQ00sT0FBTyxHQUFHSjtRQUVmLElBQUksQ0FBQ04sU0FBUyxHQUFHdkIsTUFBTWdCLEdBQUcsQ0FBQ08sU0FBUyxDQUFDSSxHQUFFRTtJQUMzQztBQTJDSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2NvbXBvbmVudHMvQ2FyZE1ha2VyL0hhbW1lckJhci50cz80MjJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhcmRNYWtlciB9IGZyb20gXCJAL2dhbWUvc2NlbmVzL0NhcmRNYWtlclwiXG5pbXBvcnQgeyBHYW1lT2JqZWN0cyB9IGZyb20gXCJwaGFzZXJcIlxuaW1wb3J0IENhcmRNYWtlck1hbmFnZXIgZnJvbSBcIi4vQ2FyZE1ha2VyTWFuYWdlclwiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhhbW1lckJhcntcblxuICAgIHN0YXRpYyBwcmVsb2FkKCBzY2VuZTogUGhhc2VyLlNjZW5lICl7XG4gICAgICAgIFxuICAgIH1cblxuICAgIHNjZW5lOiBDYXJkTWFrZXJcbiAgICBtYW5hZ2VyOiBDYXJkTWFrZXJNYW5hZ2VyXG4gICAgLy9cbiAgICBzcHJpdGVzOiBHYW1lT2JqZWN0cy5TcHJpdGVbXSBcbiAgICBjZW50ZXJYOiBudW1iZXJcbiAgICBjZW50ZXJZOiBudW1iZXJcbiAgICAvL1xuICAgIGNvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgXG4gICAgY29uc3RydWN0b3IoIHNjZW5lOkNhcmRNYWtlciwgeDpudW1iZXIsIHk6bnVtYmVyICl7XG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgICAgICB0aGlzLm1hbmFnZXIgPSBzY2VuZS5tYW5hZ2VyXG4gICAgICAgIHRoaXMuY2VudGVyWCA9IHhcbiAgICAgICAgdGhpcy5jZW50ZXJZID0geVxuXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuICAgIH1cblxuICAgIHJlbmRlckhhbW1lcigpe1xuICAgICAgICBpZiggdGhpcy5zcHJpdGVzICYmIHRoaXMuc3ByaXRlcy5sZW5ndGggPiAwICl7XG4gICAgICAgICAgICB0aGlzLnNwcml0ZXMuZm9yRWFjaCgoaDpHYW1lT2JqZWN0cy5TcHJpdGUpPT57XG4gICAgICAgICAgICAgICAgaC5kZXN0cm95KClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNwcml0ZXMgPSBbXVxuXG4gICAgICAgIGNvbnN0IGdhcDpudW1iZXIgPSAxNTA7XG4gICAgICAgIGNvbnN0IHRvdGFsV2lkdGg6bnVtYmVyID0gZ2FwKiAodGhpcy5tYW5hZ2VyLm1heEZhaWxDaGFuY2UtMSlcbiAgICAgICAgbGV0IHN0YXJ0WDpudW1iZXIgPSAtICh0b3RhbFdpZHRoLzIpOyBcbiAgICAgICAgbGV0IHN0YXJ0WTpudW1iZXIgPSAwOyBcbiAgICAgICAgZm9yKHZhciBpPTA7aTx0aGlzLm1hbmFnZXIubWF4RmFpbENoYW5jZTtpKyspe1xuICAgICAgICAgICAgaWYoIGkgPCB0aGlzLm1hbmFnZXIuY3VycmVudEZhaWxDaGFuY2UgKXtcbiAgICAgICAgICAgICAgICBsZXQgc3ByaXRlOkdhbWVPYmplY3RzLlNwcml0ZSA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZShzdGFydFgrKGdhcCppKSxzdGFydFksJ2hhbW1lcicpO1xuXG4gICAgICAgICAgICAgICAgc3ByaXRlLnNldFNjYWxlKDAuNSk7XG4gICAgICAgICAgICAgICAgc3ByaXRlLnJvdGF0aW9uID0gUGhhc2VyLk1hdGguRGVnVG9SYWQoNDUpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5zcHJpdGVzLnB1c2goc3ByaXRlKVxuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmFkZChzcHJpdGUpXG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBsZXQgc3ByaXRlOkdhbWVPYmplY3RzLlNwcml0ZSA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZShzdGFydFgrKGdhcCppKSxzdGFydFksJ2hhbW1lckJyb2tlJyk7XG4gICAgICAgICAgICAgICAgbGV0IGNyb3NzOiBHYW1lT2JqZWN0cy5TcHJpdGUgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoc3RhcnRYKyhnYXAqaSksc3RhcnRZLCdpY29uQ3Jvc3MnKTtcbiAgICAgICAgICAgICAgICBjcm9zcy5zZXRUaW50KDB4ZmYwMDAwKTtcblxuICAgICAgICAgICAgICAgIHNwcml0ZS5zZXRTY2FsZSgwLjUpO1xuICAgICAgICAgICAgICAgIHNwcml0ZS5yb3RhdGlvbiA9IFBoYXNlci5NYXRoLkRlZ1RvUmFkKDQ1KTtcbiAgICAgICAgICAgICAgICBjcm9zcy5zZXREaXNwbGF5U2l6ZSg1MCw1MCk7XG4gICAgICAgICAgICAgICAgY3Jvc3MueCArPSBzcHJpdGUuZGlzcGxheVdpZHRoLzNcbiAgICAgICAgICAgICAgICBjcm9zcy55ICs9IHNwcml0ZS5kaXNwbGF5SGVpZ2h0LzNcblxuICAgICAgICAgICAgICAgIHRoaXMuc3ByaXRlcy5wdXNoKHNwcml0ZSlcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQoc3ByaXRlKVxuXG4gICAgICAgICAgICAgICAgdGhpcy5zcHJpdGVzLnB1c2goY3Jvc3MpXG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKGNyb3NzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6WyJIYW1tZXJCYXIiLCJwcmVsb2FkIiwic2NlbmUiLCJyZW5kZXJIYW1tZXIiLCJzcHJpdGVzIiwibGVuZ3RoIiwiZm9yRWFjaCIsImgiLCJkZXN0cm95IiwiZ2FwIiwidG90YWxXaWR0aCIsIm1hbmFnZXIiLCJtYXhGYWlsQ2hhbmNlIiwic3RhcnRYIiwic3RhcnRZIiwiaSIsImN1cnJlbnRGYWlsQ2hhbmNlIiwic3ByaXRlIiwiYWRkIiwic2V0U2NhbGUiLCJyb3RhdGlvbiIsIlBoYXNlciIsIk1hdGgiLCJEZWdUb1JhZCIsInB1c2giLCJjb250YWluZXIiLCJjcm9zcyIsInNldFRpbnQiLCJzZXREaXNwbGF5U2l6ZSIsIngiLCJkaXNwbGF5V2lkdGgiLCJ5IiwiZGlzcGxheUhlaWdodCIsImNvbnN0cnVjdG9yIiwiY2VudGVyWCIsImNlbnRlclkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/HammerBar.ts\n"));

/***/ })

});