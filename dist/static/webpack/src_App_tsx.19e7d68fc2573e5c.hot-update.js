"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeMaterialText.ts":
/*!************************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeMaterialText.ts ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ForgeMaterialText; }\n/* harmony export */ });\nclass ForgeMaterialText {\n    static preload(scene) {}\n    //\n    constructor(scene, x, y, vocab){\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.vocab = vocab;\n        this.container = scene.add.container(x, y);\n        let size = 250;\n        this.outerBase = scene.add.nineslice(0, 0, \"panelWhite\", 0, 800, 200, 50, 50, 50, 50);\n        this.outerBase.setTint(0xFFFFFF);\n        this.innerBase = scene.add.nineslice(0, 0, \"panelWhite\", 0, size - 30, size - 30, 50, 50, 50, 50);\n        this.innerBase.setTint(scene.manager.colorImage);\n        this.container.add(this.outerBase);\n        this.container.add(this.innerBase);\n        this.rect = scene.add.rectangle(0, 0, size, size, scene.manager.colorText);\n        this.text = scene.add.text(0, 0, vocab.name, {\n            fontSize: \"32px\",\n            color: \"black\",\n            fontStyle: \"bold\",\n            fontFamily: \"Arial\",\n            wordWrap: {\n                width: size - 20,\n                useAdvancedWrap: true\n            }\n        }).setOrigin(0.5);\n        this.container.add(this.rect);\n        this.container.add(this.text);\n        this.container.setSize(size, size);\n        this.container.setInteractive({\n            draggable: true\n        });\n        // this.scene.input.enableDebug(this.container,0x00ff00);\n        this.scene.input.setDraggable(this.container);\n        this.container.setData(\"type\", \"ForgeMaterialText\");\n        this.container.setData(\"key\", vocab.key);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZU1hdGVyaWFsVGV4dC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBS2UsTUFBTUE7SUFFakIsT0FBT0MsUUFBU0MsS0FBWSxFQUFFLENBRTlCO0lBWUEsRUFBRTtJQUVGQyxZQUFhRCxLQUFlLEVBQUVFLENBQVMsRUFBRUMsQ0FBUyxFQUFFQyxLQUFXLENBQUU7UUFDN0QsSUFBSSxDQUFDSixLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDSyxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDSSxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDQyxLQUFLLEdBQUdBO1FBRWIsSUFBSSxDQUFDRyxTQUFTLEdBQUdQLE1BQU1RLEdBQUcsQ0FBQ0QsU0FBUyxDQUFDTCxHQUFFQztRQUV2QyxJQUFJTSxPQUFjO1FBRWxCLElBQUksQ0FBQ0MsU0FBUyxHQUFHVixNQUFNUSxHQUFHLENBQUNHLFNBQVMsQ0FBQyxHQUFFLEdBQUUsY0FBYSxHQUFFLEtBQUksS0FBSSxJQUFHLElBQUcsSUFBRztRQUN6RSxJQUFJLENBQUNELFNBQVMsQ0FBQ0UsT0FBTyxDQUFDO1FBRXZCLElBQUksQ0FBQ0MsU0FBUyxHQUFHYixNQUFNUSxHQUFHLENBQUNHLFNBQVMsQ0FBQyxHQUFFLEdBQUUsY0FBYSxHQUFFRixPQUFLLElBQUdBLE9BQUssSUFBRyxJQUFHLElBQUcsSUFBRztRQUNqRixJQUFJLENBQUNJLFNBQVMsQ0FBQ0QsT0FBTyxDQUFDWixNQUFNYyxPQUFPLENBQUNDLFVBQVU7UUFFL0MsSUFBSSxDQUFDUixTQUFTLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNFLFNBQVM7UUFDakMsSUFBSSxDQUFDSCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNLLFNBQVM7UUFFakMsSUFBSSxDQUFDRyxJQUFJLEdBQUdoQixNQUFNUSxHQUFHLENBQUNTLFNBQVMsQ0FBQyxHQUFFLEdBQUVSLE1BQUtBLE1BQUtULE1BQU1jLE9BQU8sQ0FBQ0ksU0FBUztRQUVyRSxJQUFJLENBQUNDLElBQUksR0FBR25CLE1BQU1RLEdBQUcsQ0FBQ1csSUFBSSxDQUFDLEdBQUUsR0FBRWYsTUFBTWdCLElBQUksRUFBQztZQUNOQyxVQUFTO1lBQ1RDLE9BQU07WUFDTkMsV0FBVTtZQUNWQyxZQUFXO1lBQ1hDLFVBQVU7Z0JBQUVDLE9BQU9qQixPQUFLO2dCQUFJa0IsaUJBQWlCO1lBQUs7UUFDdEQsR0FBR0MsU0FBUyxDQUFDO1FBRTdDLElBQUksQ0FBQ3JCLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ1EsSUFBSTtRQUM1QixJQUFJLENBQUNULFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ1csSUFBSTtRQUU1QixJQUFJLENBQUNaLFNBQVMsQ0FBQ3NCLE9BQU8sQ0FBQ3BCLE1BQUtBO1FBQzVCLElBQUksQ0FBQ0YsU0FBUyxDQUFDdUIsY0FBYyxDQUFDO1lBQUNDLFdBQVc7UUFBSTtRQUU5Qyx5REFBeUQ7UUFDekQsSUFBSSxDQUFDL0IsS0FBSyxDQUFDZ0MsS0FBSyxDQUFDQyxZQUFZLENBQUMsSUFBSSxDQUFDMUIsU0FBUztRQUU1QyxJQUFJLENBQUNBLFNBQVMsQ0FBQzJCLE9BQU8sQ0FBQyxRQUFPO1FBQzlCLElBQUksQ0FBQzNCLFNBQVMsQ0FBQzJCLE9BQU8sQ0FBQyxPQUFNOUIsTUFBTStCLEdBQUc7SUFDMUM7QUFDSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2NvbXBvbmVudHMvQ2FyZE1ha2VyL0ZvcmdlTWF0ZXJpYWxUZXh0LnRzP2I2OGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FyZE1ha2VyIH0gZnJvbSBcIkAvZ2FtZS9zY2VuZXMvQ2FyZE1ha2VyXCJcbmltcG9ydCBHYW1lTGliIGZyb20gXCJAL2xpYi9HYW1lTGliXCJcbmltcG9ydCB7IFZvY2FiIH0gZnJvbSBcIkAvbGliL3JlcG9zL0RlY2tSZXBvXCJcbmltcG9ydCB7IEdhbWVPYmplY3RzLCBTY2VuZSB9IGZyb20gXCJwaGFzZXJcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JnZU1hdGVyaWFsVGV4dHtcblxuICAgIHN0YXRpYyBwcmVsb2FkKCBzY2VuZTogU2NlbmUgKXtcblxuICAgIH1cblxuICAgIHNjZW5lOiBDYXJkTWFrZXJcbiAgICBvcmlYOiBudW1iZXJcbiAgICBvcmlZOiBudW1iZXJcbiAgICB2b2NhYjogVm9jYWIgXG4gICAgLy9cbiAgICBjb250YWluZXI6IEdhbWVPYmplY3RzLkNvbnRhaW5lclxuICAgIG91dGVyQmFzZTogR2FtZU9iamVjdHMuTmluZVNsaWNlXG4gICAgaW5uZXJCYXNlOiBHYW1lT2JqZWN0cy5OaW5lU2xpY2VcbiAgICByZWN0OiBHYW1lT2JqZWN0cy5SZWN0YW5nbGVcbiAgICB0ZXh0OiBHYW1lT2JqZWN0cy5UZXh0XG4gICAgLy9cblxuICAgIGNvbnN0cnVjdG9yKCBzY2VuZTpDYXJkTWFrZXIsIHg6IG51bWJlciwgeTogbnVtYmVyLCB2b2NhYjpWb2NhYiApe1xuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmVcbiAgICAgICAgdGhpcy5vcmlYID0geFxuICAgICAgICB0aGlzLm9yaVkgPSB5XG4gICAgICAgIHRoaXMudm9jYWIgPSB2b2NhYlxuXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuICAgICAgICBcbiAgICAgICAgbGV0IHNpemU6bnVtYmVyID0gMjUwO1xuXG4gICAgICAgIHRoaXMub3V0ZXJCYXNlID0gc2NlbmUuYWRkLm5pbmVzbGljZSgwLDAsJ3BhbmVsV2hpdGUnLDAsODAwLDIwMCw1MCw1MCw1MCw1MCk7XG4gICAgICAgIHRoaXMub3V0ZXJCYXNlLnNldFRpbnQoMHhGRkZGRkYpO1xuXG4gICAgICAgIHRoaXMuaW5uZXJCYXNlID0gc2NlbmUuYWRkLm5pbmVzbGljZSgwLDAsJ3BhbmVsV2hpdGUnLDAsc2l6ZS0zMCxzaXplLTMwLDUwLDUwLDUwLDUwKTtcbiAgICAgICAgdGhpcy5pbm5lckJhc2Uuc2V0VGludChzY2VuZS5tYW5hZ2VyLmNvbG9ySW1hZ2UpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLm91dGVyQmFzZSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmlubmVyQmFzZSk7XG5cbiAgICAgICAgdGhpcy5yZWN0ID0gc2NlbmUuYWRkLnJlY3RhbmdsZSgwLDAsc2l6ZSxzaXplLHNjZW5lLm1hbmFnZXIuY29sb3JUZXh0KTtcblxuICAgICAgICB0aGlzLnRleHQgPSBzY2VuZS5hZGQudGV4dCgwLDAsdm9jYWIubmFtZSx7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTonMzJweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOidibGFjaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTdHlsZTonYm9sZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRGYW1pbHk6J0FyaWFsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd29yZFdyYXA6IHsgd2lkdGg6IHNpemUtMjAsIHVzZUFkdmFuY2VkV3JhcDogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLnNldE9yaWdpbigwLjUpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnJlY3QpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy50ZXh0KTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldFNpemUoc2l6ZSxzaXplKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuc2V0SW50ZXJhY3RpdmUoe2RyYWdnYWJsZTogdHJ1ZX0pO1xuXG4gICAgICAgIC8vIHRoaXMuc2NlbmUuaW5wdXQuZW5hYmxlRGVidWcodGhpcy5jb250YWluZXIsMHgwMGZmMDApO1xuICAgICAgICB0aGlzLnNjZW5lLmlucHV0LnNldERyYWdnYWJsZSh0aGlzLmNvbnRhaW5lcik7XG5cbiAgICAgICAgdGhpcy5jb250YWluZXIuc2V0RGF0YSgndHlwZScsJ0ZvcmdlTWF0ZXJpYWxUZXh0Jyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldERhdGEoJ2tleScsdm9jYWIua2V5KTtcbiAgICB9XG59Il0sIm5hbWVzIjpbIkZvcmdlTWF0ZXJpYWxUZXh0IiwicHJlbG9hZCIsInNjZW5lIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInZvY2FiIiwib3JpWCIsIm9yaVkiLCJjb250YWluZXIiLCJhZGQiLCJzaXplIiwib3V0ZXJCYXNlIiwibmluZXNsaWNlIiwic2V0VGludCIsImlubmVyQmFzZSIsIm1hbmFnZXIiLCJjb2xvckltYWdlIiwicmVjdCIsInJlY3RhbmdsZSIsImNvbG9yVGV4dCIsInRleHQiLCJuYW1lIiwiZm9udFNpemUiLCJjb2xvciIsImZvbnRTdHlsZSIsImZvbnRGYW1pbHkiLCJ3b3JkV3JhcCIsIndpZHRoIiwidXNlQWR2YW5jZWRXcmFwIiwic2V0T3JpZ2luIiwic2V0U2l6ZSIsInNldEludGVyYWN0aXZlIiwiZHJhZ2dhYmxlIiwiaW5wdXQiLCJzZXREcmFnZ2FibGUiLCJzZXREYXRhIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeMaterialText.ts\n"));

/***/ })

});