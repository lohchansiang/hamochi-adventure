"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppAdventure_tsx",{

/***/ "./src/adventure/components/Avatar/AvatarRenderer.ts":
/*!***********************************************************!*\
  !*** ./src/adventure/components/Avatar/AvatarRenderer.ts ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AvatarRenderer; }\n/* harmony export */ });\n/* harmony import */ var _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AvatarEnum */ \"./src/adventure/components/Avatar/AvatarEnum.ts\");\n/* harmony import */ var _adventure_repos_CharacterRepo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/adventure/repos/CharacterRepo */ \"./src/adventure/repos/CharacterRepo.ts\");\n/* harmony import */ var _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/adventure/repos/AvatarTextureRepo */ \"./src/adventure/repos/AvatarTextureRepo.ts\");\n/* harmony import */ var _AvatarMaskRenderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AvatarMaskRenderer */ \"./src/adventure/components/Avatar/AvatarMaskRenderer.ts\");\n\n\n\n\nclass AvatarRenderer {\n    static preload(scene) {\n    //\n    }\n    renderAvatar(characterKey) {\n        // Get Avatar Data\n        this.charData = _adventure_repos_CharacterRepo__WEBPACK_IMPORTED_MODULE_1__.CharacterRepo.getCharacterData(characterKey);\n        if (this.charData && this.charData.avatar) {\n            let bodyBaseTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.bodyBase);\n            let bodyStrokeTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.bodyStroke);\n            let mouthTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.mouth);\n            let eyeTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.eye);\n            this.base = this.scene.add.sprite(0, 0, bodyBaseTexture).setTint(this.charData.avatar.bodyColor).setOrigin(0.5, 1);\n            this.baseStroke = this.scene.add.sprite(0, 0, bodyStrokeTexture).setOrigin(0.5, 1);\n            this.mouth = this.scene.add.sprite(0, 0, mouthTexture).setOrigin(0.5, 1);\n            this.eye = this.scene.add.sprite(0, 0, eyeTexture).setOrigin(0.5, 1);\n            this.avatarContainer.add(this.base);\n            this.avatarContainer.add(this.baseStroke);\n            this.avatarContainer.add(this.mouth);\n            this.avatarContainer.add(this.eye);\n            if (this.charData.avatar.hair.length > 0) {\n                let hairTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.hair[0]);\n                this.hair = this.scene.add.sprite(0, 0, hairTexture).setOrigin(0.5, 1);\n                this.avatarContainer.add(this.hair);\n                if (this.charData.avatar.hairColor != undefined) {}\n            }\n            let bodyCheekTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.cheek);\n            let bodyShadowTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.shadow);\n            this.cheek = this.scene.add.sprite(0, 0, bodyCheekTexture).setOrigin(0.5, 1);\n            this.shadow = this.scene.add.sprite(0, 0, bodyShadowTexture).setOrigin(0.5, 1);\n            this.avatarContainer.add(this.cheek);\n            this.groupFace = this.scene.add.group();\n            this.groupFace.add(this.eye);\n            this.groupFace.add(this.mouth);\n            this.container.add(this.shadow);\n            this.container.sendToBack(this.shadow);\n            this.avatarMask = new _AvatarMaskRenderer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, this);\n            this.avatarContainer.add(this.avatarMask.getContainer());\n            this.container.setScale(0.4);\n            this.prepareAnims();\n            this.setAvatarState(_AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.IDLE);\n        }\n    }\n    prepareAnims() {\n        // Blink Animation\n        if (this.charData) {\n            let eyeTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.eye);\n            let eyeBlinkTexture = _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(this.charData.avatar.eyeBlink);\n            this.eye.anims.create({\n                key: \"blink\",\n                frames: [\n                    {\n                        key: eyeTexture\n                    },\n                    {\n                        key: eyeBlinkTexture\n                    }\n                ],\n                duration: 500,\n                repeat: -1,\n                repeatDelay: 5000,\n                yoyo: true\n            });\n        }\n        // Hair Animation, if have\n        if (this.charData && this.charData.avatar && this.charData.avatar.hair && this.charData.avatar.hair.length > 1) {\n            // Prepare Frames\n            let frames = [];\n            this.charData.avatar.hair.forEach((textureKey)=>{\n                frames.push({\n                    key: _adventure_repos_AvatarTextureRepo__WEBPACK_IMPORTED_MODULE_2__.AvatarTextureRepo.getTextureKey(textureKey)\n                });\n            });\n            this.hair.anims.create({\n                key: \"animHair\",\n                frames: frames,\n                duration: 500,\n                repeat: -1,\n                repeatDelay: 5000,\n                yoyo: true\n            });\n        }\n        // Idle Tween\n        this.tweenIdle = this.scene.tweens.add({\n            targets: this.avatarContainer,\n            scaleY: 0.95,\n            ease: \"Linear\",\n            duration: 1500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.avatarContainer.scale = 1;\n            }\n        });\n        this.tweenIdle.pause();\n        // Idle Shadow Tween\n        this.tweenIdleShadow = this.scene.tweens.add({\n            targets: this.shadow,\n            scaleX: 0.98,\n            ease: \"Linear\",\n            duration: 1500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.shadow.scale = 1;\n            }\n        });\n        this.tweenIdleShadow.pause();\n        // Idle Tween\n        this.tweenWalk = this.scene.tweens.add({\n            targets: this.avatarContainer,\n            scaleY: 1.10,\n            scaleX: 0.90,\n            ease: \"Cubic\",\n            duration: 500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.avatarContainer.scale = 1;\n            }\n        });\n        this.tweenWalk.pause();\n        // Idle Walk Tween\n        this.tweenWalkShadow = this.scene.tweens.add({\n            targets: this.shadow,\n            scaleX: 0.9,\n            ease: \"Cubic\",\n            duration: 500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.shadow.scale = 1;\n            }\n        });\n        this.tweenWalkShadow.pause();\n    }\n    setAvatarState(newState) {\n        if (newState == this.currentAvatarState) return;\n        this.stopCurrentState();\n        switch(newState){\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.IDLE:\n                this.tweenIdle.play();\n                this.tweenIdleShadow.play();\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.WALK:\n                this.tweenWalk.play();\n                this.tweenWalkShadow.play();\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.JUMP:\n                // Jump Tween, Run Once\n                this.tweenJump = this.scene.tweens.chain({\n                    targets: this.avatarContainer,\n                    tweens: [\n                        {\n                            scaleX: 1.1,\n                            scaleY: 0.9,\n                            ease: \"Cubic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                this.avatarContainer.scale = 1;\n                                this.eye.setTexture(\"avatarEye1\");\n                                this.tweenJumpShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 1.1,\n                                    ease: \"Linear\",\n                                    duration: 200,\n                                    onStart: ()=>{\n                                        this.shadow.scale = 1;\n                                    }\n                                });\n                            }\n                        },\n                        {\n                            scaleX: 0.85,\n                            scaleY: 1.10,\n                            ease: \"Cubic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                this.avatarContainer.scale = 1;\n                                this.eye.setTexture(\"avatarEye0\");\n                                if (this.tweenJumpShadow) {\n                                    this.tweenJumpShadow.stop();\n                                }\n                                this.tweenJumpShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 0.85,\n                                    ease: \"Linear\",\n                                    duration: 200\n                                });\n                            }\n                        }\n                    ]\n                });\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.MIDAIR:\n                this.avatarContainer.scaleX = 0.85;\n                this.avatarContainer.scaleY = 1.10;\n                this.shadow.scaleX = 0.85;\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.FALL:\n                // Fall Tween, Run Once\n                this.tweenFall = this.scene.tweens.chain({\n                    targets: this.avatarContainer,\n                    tweens: [\n                        {\n                            scaleX: 1.10,\n                            scaleY: 0.85,\n                            ease: \"Cubic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                this.avatarContainer.scaleX = 0.85;\n                                this.avatarContainer.scaleY = 1.10;\n                                this.tweenFallShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 1.1,\n                                    ease: \"Linear\",\n                                    duration: 200,\n                                    onStart: ()=>{\n                                        this.shadow.scale = 1;\n                                    }\n                                });\n                            }\n                        },\n                        {\n                            scaleX: 1,\n                            scaleY: 1,\n                            ease: \"Elastic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                if (this.tweenFallShadow) {\n                                    this.tweenFallShadow.stop();\n                                }\n                                this.tweenFallShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 1,\n                                    ease: \"Linear\",\n                                    duration: 200\n                                });\n                            }\n                        }\n                    ]\n                });\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.HURT:\n                this.avatarMask.setEmojiMask(_AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarMask.PAIN);\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.FAINT:\n                this.avatarMask.setEmojiMask(_AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarMask.DIZZY);\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.ATTACK:\n                this.avatarMask.setEmojiMask(_AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarMask.SHOUT);\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.PUSH:\n                this.avatarContainer.scaleX = 1.10;\n                this.avatarContainer.scaleY = 0.85;\n                this.shadow.scaleX = 1.10;\n                this.avatarMask.setEmojiMask(_AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarMask.NERVOUS);\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.HIDDEN:\n                this.scene.tweens.add({\n                    targets: [\n                        this.avatarContainer,\n                        this.shadow\n                    ],\n                    alpha: 0,\n                    ease: \"Linear\",\n                    duration: 500,\n                    onStart: ()=>{\n                        this.avatarContainer.alpha = 1;\n                        this.shadow.alpha = 1;\n                    }\n                });\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.APPEAR:\n                this.scene.tweens.add({\n                    targets: [\n                        this.avatarContainer,\n                        this.shadow\n                    ],\n                    alpha: 1,\n                    ease: \"Linear\",\n                    duration: 500,\n                    onStart: ()=>{\n                        this.avatarContainer.alpha = 0;\n                        this.shadow.alpha = 0;\n                    }\n                });\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            default:\n                break;\n        }\n    }\n    stopCurrentState() {\n        switch(this.currentAvatarState){\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.IDLE:\n                //\n                this.tweenIdle.restart();\n                this.tweenIdle.pause();\n                this.tweenIdleShadow.restart();\n                this.tweenIdleShadow.pause();\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.WALK:\n                //\n                this.tweenWalk.restart();\n                this.tweenWalk.pause();\n                this.tweenWalkShadow.restart();\n                this.tweenWalkShadow.pause();\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.JUMP:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.MIDAIR:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.FALL:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.HURT:\n                this.avatarMask.clearEmojiMask();\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.FAINT:\n                this.avatarMask.clearEmojiMask();\n                this.avatarContainer.scale = 1;\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.ATTACK:\n                this.avatarMask.clearEmojiMask();\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.PUSH:\n                this.avatarContainer.scale = 1;\n                this.shadow.scaleX = 1;\n                this.avatarMask.clearEmojiMask();\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.HIDDEN:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            case _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.APPEAR:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _AvatarEnum__WEBPACK_IMPORTED_MODULE_0__.AvatarState.NONE;\n                break;\n            default:\n                break;\n        }\n    }\n    setDirection(direction) {\n        if (direction > 0) {\n            this.base.setFlipX(false);\n            this.baseStroke.setFlipX(false);\n            this.eye.setFlipX(false);\n            this.hair.setFlipX(false);\n            this.mouth.setFlipX(false);\n            this.cheek.setFlipX(false);\n            this.shadow.setFlipX(false);\n            this.avatarMask.setFlipX(false);\n        } else if (direction < 0) {\n            this.base.setFlipX(true);\n            this.baseStroke.setFlipX(true);\n            this.eye.setFlipX(true);\n            this.hair.setFlipX(true);\n            this.mouth.setFlipX(true);\n            this.cheek.setFlipX(true);\n            this.shadow.setFlipX(true);\n            this.avatarMask.setFlipX(true);\n        }\n    }\n    setEmojiMask(maskKey) {\n        this.avatarMask.setEmojiMask(maskKey);\n    }\n    hideFace() {\n        let faceKey = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"all\";\n        if (faceKey == \"eye\") {\n            this.eye.setVisible(false);\n        } else if (faceKey == \"mouth\") {\n            this.mouth.setVisible(false);\n        } else if (faceKey == \"all\") {\n            this.groupFace.setVisible(false);\n        }\n    }\n    showFace() {\n        this.groupFace.setVisible(true);\n    }\n    clean() {\n    //\n    }\n    setPositionX(x) {\n        this.container.x = x;\n    }\n    getContainer() {\n        return this.container;\n    }\n    constructor(scene, x, y){\n        this.width = 300;\n        this.height = 500;\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.container = this.scene.add.container(x, y);\n        this.avatarContainer = scene.add.container(0, 0);\n        this.container.add(this.avatarContainer);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/adventure/components/Avatar/AvatarRenderer.ts\n"));

/***/ })

});