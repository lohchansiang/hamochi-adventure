"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeMaterialImage.ts":
/*!*************************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeMaterialImage.ts ***!
  \*************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ForgeMaterialImage; }\n/* harmony export */ });\nclass ForgeMaterialImage {\n    static preload(scene) {}\n    //\n    constructor(scene, x, y, vocab){\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.vocab = vocab;\n        this.container = scene.add.container(x, y);\n        let size = 250;\n        this.strokeBase = scene.add.nineslice(0, 0, \"panelWhite\", 0, size, size, 50, 50, 50, 50);\n        this.strokeBase.setTint(0xFFFFFF);\n        this.outerBase = scene.add.nineslice(0, 0, \"panelWhite\", 0, size, size, 50, 50, 50, 50);\n        this.outerBase.setTint(0xFFFFFF);\n        this.innerBase = scene.add.nineslice(0, 0, \"panelWhite\", 0, size - 30, size - 30, 50, 50, 50, 50);\n        this.innerBase.setTint(scene.manager.colorImage);\n        this.container.add(this.outerBase);\n        this.container.add(this.innerBase);\n        // this.rect = scene.add.rectangle(0,0,size,size,scene.manager.colorImage);\n        this.image = scene.add.sprite(0, 0, vocab.textureKey);\n        this.image.setDisplaySize(size - 80, size - 80);\n        // this.container.add(this.rect);\n        this.container.add(this.image);\n        this.container.setSize(size, size);\n        this.container.setInteractive({\n            draggable: true\n        });\n        // this.scene.input.enableDebug(this.container,0x00ff00);\n        this.scene.input.setDraggable(this.container);\n        this.container.setData(\"type\", \"ForgeMaterialImage\");\n        this.container.setData(\"key\", vocab.key);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZU1hdGVyaWFsSW1hZ2UudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUtlLE1BQU1BO0lBRWpCLE9BQU9DLFFBQVNDLEtBQVksRUFBRSxDQUU5QjtJQWFBLEVBQUU7SUFFRkMsWUFBYUQsS0FBZSxFQUFFRSxDQUFTLEVBQUVDLENBQVMsRUFBRUMsS0FBVyxDQUFFO1FBQzdELElBQUksQ0FBQ0osS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0ssSUFBSSxHQUFHSDtRQUNaLElBQUksQ0FBQ0ksSUFBSSxHQUFHSDtRQUNaLElBQUksQ0FBQ0MsS0FBSyxHQUFHQTtRQUViLElBQUksQ0FBQ0csU0FBUyxHQUFHUCxNQUFNUSxHQUFHLENBQUNELFNBQVMsQ0FBQ0wsR0FBRUM7UUFFdkMsSUFBSU0sT0FBYztRQUNsQixJQUFJLENBQUNDLFVBQVUsR0FBR1YsTUFBTVEsR0FBRyxDQUFDRyxTQUFTLENBQUMsR0FBRSxHQUFFLGNBQWEsR0FBRUYsTUFBS0EsTUFBSyxJQUFHLElBQUcsSUFBRztRQUM1RSxJQUFJLENBQUNDLFVBQVUsQ0FBQ0UsT0FBTyxDQUFDO1FBRXhCLElBQUksQ0FBQ0MsU0FBUyxHQUFHYixNQUFNUSxHQUFHLENBQUNHLFNBQVMsQ0FBQyxHQUFFLEdBQUUsY0FBYSxHQUFFRixNQUFLQSxNQUFLLElBQUcsSUFBRyxJQUFHO1FBQzNFLElBQUksQ0FBQ0ksU0FBUyxDQUFDRCxPQUFPLENBQUM7UUFFdkIsSUFBSSxDQUFDRSxTQUFTLEdBQUdkLE1BQU1RLEdBQUcsQ0FBQ0csU0FBUyxDQUFDLEdBQUUsR0FBRSxjQUFhLEdBQUVGLE9BQUssSUFBR0EsT0FBSyxJQUFHLElBQUcsSUFBRyxJQUFHO1FBQ2pGLElBQUksQ0FBQ0ssU0FBUyxDQUFDRixPQUFPLENBQUNaLE1BQU1lLE9BQU8sQ0FBQ0MsVUFBVTtRQUkvQyxJQUFJLENBQUNULFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ0ssU0FBUztRQUNqQyxJQUFJLENBQUNOLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ00sU0FBUztRQUlqQywyRUFBMkU7UUFDM0UsSUFBSSxDQUFDRyxLQUFLLEdBQUdqQixNQUFNUSxHQUFHLENBQUNVLE1BQU0sQ0FBQyxHQUFFLEdBQUVkLE1BQU1lLFVBQVU7UUFDbEQsSUFBSSxDQUFDRixLQUFLLENBQUNHLGNBQWMsQ0FBQ1gsT0FBSyxJQUFHQSxPQUFLO1FBRXZDLGlDQUFpQztRQUNqQyxJQUFJLENBQUNGLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ1MsS0FBSztRQUU3QixJQUFJLENBQUNWLFNBQVMsQ0FBQ2MsT0FBTyxDQUFDWixNQUFLQTtRQUM1QixJQUFJLENBQUNGLFNBQVMsQ0FBQ2UsY0FBYyxDQUFDO1lBQUNDLFdBQVc7UUFBSTtRQUU5Qyx5REFBeUQ7UUFDekQsSUFBSSxDQUFDdkIsS0FBSyxDQUFDd0IsS0FBSyxDQUFDQyxZQUFZLENBQUMsSUFBSSxDQUFDbEIsU0FBUztRQUU1QyxJQUFJLENBQUNBLFNBQVMsQ0FBQ21CLE9BQU8sQ0FBQyxRQUFPO1FBQzlCLElBQUksQ0FBQ25CLFNBQVMsQ0FBQ21CLE9BQU8sQ0FBQyxPQUFNdEIsTUFBTXVCLEdBQUc7SUFDMUM7QUFDSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2NvbXBvbmVudHMvQ2FyZE1ha2VyL0ZvcmdlTWF0ZXJpYWxJbWFnZS50cz85ODJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhcmRNYWtlciB9IGZyb20gXCJAL2dhbWUvc2NlbmVzL0NhcmRNYWtlclwiXG5pbXBvcnQgR2FtZUxpYiBmcm9tIFwiQC9saWIvR2FtZUxpYlwiXG5pbXBvcnQgeyBWb2NhYiB9IGZyb20gXCJAL2xpYi9yZXBvcy9EZWNrUmVwb1wiXG5pbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUgfSBmcm9tIFwicGhhc2VyXCJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9yZ2VNYXRlcmlhbEltYWdle1xuXG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBTY2VuZSApe1xuXG4gICAgfVxuXG4gICAgc2NlbmU6IENhcmRNYWtlclxuICAgIG9yaVg6IG51bWJlclxuICAgIG9yaVk6IG51bWJlclxuICAgIHZvY2FiOiBWb2NhYiBcbiAgICAvL1xuICAgIGNvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgb3V0ZXJCYXNlOiBHYW1lT2JqZWN0cy5OaW5lU2xpY2VcbiAgICBpbm5lckJhc2U6IEdhbWVPYmplY3RzLk5pbmVTbGljZVxuICAgIHN0cm9rZUJhc2U6IEdhbWVPYmplY3RzLk5pbmVTbGljZVxuICAgIHJlY3Q6IEdhbWVPYmplY3RzLlJlY3RhbmdsZVxuICAgIGltYWdlOiBHYW1lT2JqZWN0cy5TcHJpdGVcbiAgICAvL1xuXG4gICAgY29uc3RydWN0b3IoIHNjZW5lOkNhcmRNYWtlciwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHZvY2FiOlZvY2FiICl7XG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgICAgICB0aGlzLm9yaVggPSB4XG4gICAgICAgIHRoaXMub3JpWSA9IHlcbiAgICAgICAgdGhpcy52b2NhYiA9IHZvY2FiXG5cbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBzY2VuZS5hZGQuY29udGFpbmVyKHgseSk7XG4gICAgICAgIFxuICAgICAgICBsZXQgc2l6ZTpudW1iZXIgPSAyNTA7XG4gICAgICAgIHRoaXMuc3Ryb2tlQmFzZSA9IHNjZW5lLmFkZC5uaW5lc2xpY2UoMCwwLCdwYW5lbFdoaXRlJywwLHNpemUsc2l6ZSw1MCw1MCw1MCw1MCk7XG4gICAgICAgIHRoaXMuc3Ryb2tlQmFzZS5zZXRUaW50KDB4RkZGRkZGKTtcblxuICAgICAgICB0aGlzLm91dGVyQmFzZSA9IHNjZW5lLmFkZC5uaW5lc2xpY2UoMCwwLCdwYW5lbFdoaXRlJywwLHNpemUsc2l6ZSw1MCw1MCw1MCw1MCk7XG4gICAgICAgIHRoaXMub3V0ZXJCYXNlLnNldFRpbnQoMHhGRkZGRkYpO1xuXG4gICAgICAgIHRoaXMuaW5uZXJCYXNlID0gc2NlbmUuYWRkLm5pbmVzbGljZSgwLDAsJ3BhbmVsV2hpdGUnLDAsc2l6ZS0zMCxzaXplLTMwLDUwLDUwLDUwLDUwKTtcbiAgICAgICAgdGhpcy5pbm5lckJhc2Uuc2V0VGludChzY2VuZS5tYW5hZ2VyLmNvbG9ySW1hZ2UpO1xuXG4gICAgICAgXG5cbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMub3V0ZXJCYXNlKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuaW5uZXJCYXNlKTtcblxuXG5cbiAgICAgICAgLy8gdGhpcy5yZWN0ID0gc2NlbmUuYWRkLnJlY3RhbmdsZSgwLDAsc2l6ZSxzaXplLHNjZW5lLm1hbmFnZXIuY29sb3JJbWFnZSk7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBzY2VuZS5hZGQuc3ByaXRlKDAsMCx2b2NhYi50ZXh0dXJlS2V5KTtcbiAgICAgICAgdGhpcy5pbWFnZS5zZXREaXNwbGF5U2l6ZShzaXplLTgwLHNpemUtODApO1xuXG4gICAgICAgIC8vIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnJlY3QpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5pbWFnZSk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRTaXplKHNpemUsc2l6ZSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldEludGVyYWN0aXZlKHtkcmFnZ2FibGU6IHRydWV9KTtcblxuICAgICAgICAvLyB0aGlzLnNjZW5lLmlucHV0LmVuYWJsZURlYnVnKHRoaXMuY29udGFpbmVyLDB4MDBmZjAwKTtcbiAgICAgICAgdGhpcy5zY2VuZS5pbnB1dC5zZXREcmFnZ2FibGUodGhpcy5jb250YWluZXIpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldERhdGEoJ3R5cGUnLCdGb3JnZU1hdGVyaWFsSW1hZ2UnKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuc2V0RGF0YSgna2V5Jyx2b2NhYi5rZXkpO1xuICAgIH1cbn0iXSwibmFtZXMiOlsiRm9yZ2VNYXRlcmlhbEltYWdlIiwicHJlbG9hZCIsInNjZW5lIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInZvY2FiIiwib3JpWCIsIm9yaVkiLCJjb250YWluZXIiLCJhZGQiLCJzaXplIiwic3Ryb2tlQmFzZSIsIm5pbmVzbGljZSIsInNldFRpbnQiLCJvdXRlckJhc2UiLCJpbm5lckJhc2UiLCJtYW5hZ2VyIiwiY29sb3JJbWFnZSIsImltYWdlIiwic3ByaXRlIiwidGV4dHVyZUtleSIsInNldERpc3BsYXlTaXplIiwic2V0U2l6ZSIsInNldEludGVyYWN0aXZlIiwiZHJhZ2dhYmxlIiwiaW5wdXQiLCJzZXREcmFnZ2FibGUiLCJzZXREYXRhIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeMaterialImage.ts\n"));

/***/ })

});