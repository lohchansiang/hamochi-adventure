"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeMainCircle.ts":
/*!**********************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeMainCircle.ts ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ForgeMainCircle; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PanelSelectCard/VocabCard */ \"./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts\");\n/* harmony import */ var _lib_components_SpriteButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/components/SpriteButton */ \"./src/lib/components/SpriteButton.ts\");\n\n\n\nclass ForgeMainCircle {\n    static preload(scene) {}\n    clearSelectedCard() {\n        // clear\n        if (this.selectedVocab) {\n            this.selectedVocab.clean();\n            this.selectedVocab = null;\n        }\n        this.noCardDisplay.setVisible(true);\n    }\n    renderSelectedCard(vocab) {\n        this.clearSelectedCard();\n        this.noCardDisplay.setVisible(false);\n        this.selectedVocab = new _PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, this.oriX, this.oriY, 250, _PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateHeight(250), vocab);\n    }\n    exitForge() {\n        this.buttonSelectCard.setVisible(true);\n    }\n    enterForge() {\n        this.buttonSelectCard.setVisible(false);\n        this.mainCircle.setInteractive(undefined, undefined, true);\n    }\n    constructor(scene, x, y){\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.container = scene.add.container(x, y);\n        const radius = 250;\n        const thickness = 15;\n        this.outerCircle = scene.add.circle(0, 0, radius, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelBg);\n        this.innerCircle = scene.add.circle(0, 0, radius - thickness, 0xffffff);\n        this.container.add(this.outerCircle);\n        this.container.add(this.innerCircle);\n        this.container.name = \"MainCircle\";\n        this.noCardDisplay = this.scene.add.text(0, 0, \"?\", {\n            fontSize: \"300px\",\n            fontFamily: \"Arial\",\n            color: \"#c0c0c0\"\n        }).setOrigin(0.5, 0.5).setVisible(false);\n        this.buttonSelectCard = new _lib_components_SpriteButton__WEBPACK_IMPORTED_MODULE_2__[\"default\"](scene, radius - thickness / 2, 0, \"buttonAdd\");\n        this.buttonSelectCard.onPressedCallback = ()=>{\n            this.scene.events.emit(\"open-panel\");\n        };\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZU1haW5DaXJjbGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNtQztBQUVnQjtBQUNLO0FBR3pDLE1BQU1HO0lBRWpCLE9BQU9DLFFBQVNDLEtBQVksRUFBRSxDQUU5QjtJQTJDQUMsb0JBQW1CO1FBQ2YsUUFBUTtRQUNSLElBQUksSUFBSSxDQUFDQyxhQUFhLEVBQUU7WUFDcEIsSUFBSSxDQUFDQSxhQUFhLENBQUNDLEtBQUs7WUFDeEIsSUFBSSxDQUFDRCxhQUFhLEdBQUc7UUFDekI7UUFFQSxJQUFJLENBQUNFLGFBQWEsQ0FBQ0MsVUFBVSxDQUFDO0lBQ2xDO0lBRUFDLG1CQUFvQkMsS0FBVyxFQUFFO1FBQzdCLElBQUksQ0FBQ04saUJBQWlCO1FBRXRCLElBQUksQ0FBQ0csYUFBYSxDQUFDQyxVQUFVLENBQUM7UUFDOUIsSUFBSSxDQUFDSCxhQUFhLEdBQUcsSUFBSU4sa0VBQVNBLENBQUMsSUFBSSxDQUFDSSxLQUFLLEVBQUMsSUFBSSxDQUFDUSxJQUFJLEVBQUMsSUFBSSxDQUFDQyxJQUFJLEVBQUMsS0FBSWIsa0ZBQXlCLENBQUMsTUFBS1c7SUFDekc7SUFFQUksWUFBVztRQUNQLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNQLFVBQVUsQ0FBQztJQUNyQztJQUVBUSxhQUFZO1FBQ1IsSUFBSSxDQUFDRCxnQkFBZ0IsQ0FBQ1AsVUFBVSxDQUFDO1FBQ2pDLElBQUksQ0FBQ1MsVUFBVSxDQUFDQyxjQUFjLENBQUNDLFdBQVVBLFdBQVU7SUFDdkQ7SUFyREFDLFlBQWFqQixLQUFlLEVBQUVrQixDQUFTLEVBQUVDLENBQVMsQ0FBRTtRQUNoRCxJQUFJLENBQUNuQixLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDUSxJQUFJLEdBQUdVO1FBQ1osSUFBSSxDQUFDVCxJQUFJLEdBQUdVO1FBRVosSUFBSSxDQUFDQyxTQUFTLEdBQUdwQixNQUFNcUIsR0FBRyxDQUFDRCxTQUFTLENBQUNGLEdBQUVDO1FBRXZDLE1BQU1HLFNBQWdCO1FBQ3RCLE1BQU1DLFlBQW1CO1FBQ3pCLElBQUksQ0FBQ0MsV0FBVyxHQUFHeEIsTUFBTXFCLEdBQUcsQ0FBQ0ksTUFBTSxDQUFDLEdBQUUsR0FBRUgsUUFBTzNCLGlFQUFvQjtRQUNuRSxJQUFJLENBQUNnQyxXQUFXLEdBQUczQixNQUFNcUIsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRSxHQUFFSCxTQUFPQyxXQUFVO1FBRXpELElBQUksQ0FBQ0gsU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDRyxXQUFXO1FBQ25DLElBQUksQ0FBQ0osU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDTSxXQUFXO1FBRW5DLElBQUksQ0FBQ1AsU0FBUyxDQUFDUSxJQUFJLEdBQUc7UUFFdEIsSUFBSSxDQUFDeEIsYUFBYSxHQUFHLElBQUksQ0FBQ0osS0FBSyxDQUFDcUIsR0FBRyxDQUFDUSxJQUFJLENBQUMsR0FBRSxHQUFFLEtBQUk7WUFDN0NDLFVBQVU7WUFDVkMsWUFBWTtZQUNaQyxPQUFPO1FBQ1gsR0FBR0MsU0FBUyxDQUFDLEtBQUksS0FBSzVCLFVBQVUsQ0FBQztRQUVqQyxJQUFJLENBQUNPLGdCQUFnQixHQUFHLElBQUlmLG9FQUFZQSxDQUFDRyxPQUFNc0IsU0FBT0MsWUFBVSxHQUFFLEdBQUU7UUFDcEUsSUFBSSxDQUFDWCxnQkFBZ0IsQ0FBQ3NCLGlCQUFpQixHQUFHO1lBQ3RDLElBQUksQ0FBQ2xDLEtBQUssQ0FBQ21DLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDO1FBQzNCO0lBQ0o7QUEyQko7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZU1haW5DaXJjbGUudHM/ODEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXJkTWFrZXIgfSBmcm9tIFwiQC9nYW1lL3NjZW5lcy9DYXJkTWFrZXJcIlxuaW1wb3J0IEdhbWVMaWIgZnJvbSBcIkAvbGliL0dhbWVMaWJcIlxuaW1wb3J0IHsgR2FtZU9iamVjdHMsIFNjZW5lIH0gZnJvbSBcInBoYXNlclwiXG5pbXBvcnQgVm9jYWJDYXJkIGZyb20gXCIuL1BhbmVsU2VsZWN0Q2FyZC9Wb2NhYkNhcmRcIlxuaW1wb3J0IFNwcml0ZUJ1dHRvbiBmcm9tIFwiQC9saWIvY29tcG9uZW50cy9TcHJpdGVCdXR0b25cIlxuaW1wb3J0IHsgVm9jYWIgfSBmcm9tIFwiQC9saWIvcmVwb3MvRGVja1JlcG9cIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JnZU1haW5DaXJjbGV7XG5cbiAgICBzdGF0aWMgcHJlbG9hZCggc2NlbmU6IFNjZW5lICl7XG5cbiAgICB9XG5cbiAgICBzY2VuZTogQ2FyZE1ha2VyXG4gICAgb3JpWDogbnVtYmVyXG4gICAgb3JpWTogbnVtYmVyXG4gICAgLy9cbiAgICBjb250YWluZXI6IEdhbWVPYmplY3RzLkNvbnRhaW5lclxuICAgIG91dGVyQ2lyY2xlOiBHYW1lT2JqZWN0cy5BcmNcbiAgICBpbm5lckNpcmNsZTogR2FtZU9iamVjdHMuQXJjXG4gICAgLy9cbiAgICBub0NhcmREaXNwbGF5OiBHYW1lT2JqZWN0cy5UZXh0XG4gICAgc2VsZWN0ZWRWb2NhYjogVm9jYWJDYXJkIHwgbnVsbFxuICAgIGJ1dHRvblNlbGVjdENhcmQ6IFNwcml0ZUJ1dHRvblxuXG4gICAgY29uc3RydWN0b3IoIHNjZW5lOkNhcmRNYWtlciwgeDogbnVtYmVyLCB5OiBudW1iZXIgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMub3JpWCA9IHhcbiAgICAgICAgdGhpcy5vcmlZID0geVxuXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgcmFkaXVzOm51bWJlciA9IDI1MDtcbiAgICAgICAgY29uc3QgdGhpY2tuZXNzOm51bWJlciA9IDE1O1xuICAgICAgICB0aGlzLm91dGVyQ2lyY2xlID0gc2NlbmUuYWRkLmNpcmNsZSgwLDAscmFkaXVzLEdhbWVMaWIuY29sb3JQYW5lbEJnKTtcbiAgICAgICAgdGhpcy5pbm5lckNpcmNsZSA9IHNjZW5lLmFkZC5jaXJjbGUoMCwwLHJhZGl1cy10aGlja25lc3MsMHhmZmZmZmYpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLm91dGVyQ2lyY2xlKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuaW5uZXJDaXJjbGUpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLm5hbWUgPSAnTWFpbkNpcmNsZSdcblxuICAgICAgICB0aGlzLm5vQ2FyZERpc3BsYXkgPSB0aGlzLnNjZW5lLmFkZC50ZXh0KDAsMCwnPycse1xuICAgICAgICAgICAgZm9udFNpemU6ICczMDBweCcsXG4gICAgICAgICAgICBmb250RmFtaWx5OiAnQXJpYWwnLFxuICAgICAgICAgICAgY29sb3I6ICcjYzBjMGMwJyxcbiAgICAgICAgfSkuc2V0T3JpZ2luKDAuNSwwLjUpLnNldFZpc2libGUoZmFsc2UpO1xuXG4gICAgICAgIHRoaXMuYnV0dG9uU2VsZWN0Q2FyZCA9IG5ldyBTcHJpdGVCdXR0b24oc2NlbmUscmFkaXVzLXRoaWNrbmVzcy8yLDAsJ2J1dHRvbkFkZCcpO1xuICAgICAgICB0aGlzLmJ1dHRvblNlbGVjdENhcmQub25QcmVzc2VkQ2FsbGJhY2sgPSAoKT0+e1xuICAgICAgICAgICAgdGhpcy5zY2VuZS5ldmVudHMuZW1pdCgnb3Blbi1wYW5lbCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2xlYXJTZWxlY3RlZENhcmQoKXtcbiAgICAgICAgLy8gY2xlYXJcbiAgICAgICAgaWYoIHRoaXMuc2VsZWN0ZWRWb2NhYiApe1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFZvY2FiLmNsZWFuKCk7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkVm9jYWIgPSBudWxsXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm5vQ2FyZERpc3BsYXkuc2V0VmlzaWJsZSh0cnVlKTtcbiAgICB9XG5cbiAgICByZW5kZXJTZWxlY3RlZENhcmQoIHZvY2FiOlZvY2FiICl7XG4gICAgICAgIHRoaXMuY2xlYXJTZWxlY3RlZENhcmQoKTtcblxuICAgICAgICB0aGlzLm5vQ2FyZERpc3BsYXkuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRWb2NhYiA9IG5ldyBWb2NhYkNhcmQodGhpcy5zY2VuZSx0aGlzLm9yaVgsdGhpcy5vcmlZLDI1MCxWb2NhYkNhcmQuY2FsY3VsYXRlSGVpZ2h0KDI1MCksdm9jYWIpO1xuICAgIH1cblxuICAgIGV4aXRGb3JnZSgpe1xuICAgICAgICB0aGlzLmJ1dHRvblNlbGVjdENhcmQuc2V0VmlzaWJsZSh0cnVlKTtcbiAgICB9XG5cbiAgICBlbnRlckZvcmdlKCl7XG4gICAgICAgIHRoaXMuYnV0dG9uU2VsZWN0Q2FyZC5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgdGhpcy5tYWluQ2lyY2xlLnNldEludGVyYWN0aXZlKHVuZGVmaW5lZCx1bmRlZmluZWQsdHJ1ZSk7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJHYW1lTGliIiwiVm9jYWJDYXJkIiwiU3ByaXRlQnV0dG9uIiwiRm9yZ2VNYWluQ2lyY2xlIiwicHJlbG9hZCIsInNjZW5lIiwiY2xlYXJTZWxlY3RlZENhcmQiLCJzZWxlY3RlZFZvY2FiIiwiY2xlYW4iLCJub0NhcmREaXNwbGF5Iiwic2V0VmlzaWJsZSIsInJlbmRlclNlbGVjdGVkQ2FyZCIsInZvY2FiIiwib3JpWCIsIm9yaVkiLCJjYWxjdWxhdGVIZWlnaHQiLCJleGl0Rm9yZ2UiLCJidXR0b25TZWxlY3RDYXJkIiwiZW50ZXJGb3JnZSIsIm1haW5DaXJjbGUiLCJzZXRJbnRlcmFjdGl2ZSIsInVuZGVmaW5lZCIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJjb250YWluZXIiLCJhZGQiLCJyYWRpdXMiLCJ0aGlja25lc3MiLCJvdXRlckNpcmNsZSIsImNpcmNsZSIsImNvbG9yUGFuZWxCZyIsImlubmVyQ2lyY2xlIiwibmFtZSIsInRleHQiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiLCJjb2xvciIsInNldE9yaWdpbiIsIm9uUHJlc3NlZENhbGxiYWNrIiwiZXZlbnRzIiwiZW1pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeMainCircle.ts\n"));

/***/ })

});