"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppLearn_tsx",{

/***/ "./src/learn/components/ManyLessQuestionRenderer.ts":
/*!**********************************************************!*\
  !*** ./src/learn/components/ManyLessQuestionRenderer.ts ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ManyLessQuestionRenderer; }\n/* harmony export */ });\n/* harmony import */ var _Box__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Box */ \"./src/learn/components/Box.ts\");\n/* harmony import */ var _AppleGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AppleGroup */ \"./src/learn/components/AppleGroup.ts\");\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/components/BasicButton */ \"./src/lib/components/BasicButton.ts\");\n\n\n\n\nclass ManyLessQuestionRenderer {\n    static preload(scene) {\n        _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"].preload(scene);\n        _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"].preload(scene);\n    }\n    reset() {\n        this.canAnswer = false;\n        this.leftButton.setDisabled(true);\n        this.rightButton.setDisabled(true);\n    }\n    setQuestion(question) {\n        this.reset();\n        this.question = question;\n        let leftChoice = this.question.choices[0];\n        let rightChoice = this.question.choices[1];\n        this.leftAppleGroup.renderApples(leftChoice.value);\n        this.rightAppleGroup.renderApples(rightChoice.value);\n        this.leftButton.buttonText.setText(leftChoice.text.zh);\n        this.rightButton.buttonText.setText(rightChoice.text.zh);\n        this.questionText.setText(this.question.question.zh);\n    }\n    showBoxes() {\n        let withAnim = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        this.container.setVisible(true);\n        if (withAnim) {\n            this.leftBox.getContainer().y += 1000;\n            this.rightBox.getContainer().y += 1000;\n            this.leftBox.show();\n            this.rightBox.show();\n            this.scene.tweens.add({\n                targets: [\n                    this.leftBox.getContainer(),\n                    this.rightBox.getContainer()\n                ],\n                y: this.boxOriginY,\n                duration: 500,\n                ease: \"Cubic\"\n            });\n        } else {\n            this.leftBox.show();\n            this.rightBox.show();\n            this.leftBox.getContainer().y = this.boxOriginY;\n            this.rightBox.getContainer().y = this.boxOriginY;\n        }\n    }\n    setupBoxInput() {\n        this.leftBox.onOpenCallback = ()=>{\n            // Generate Apple 5\n            this.leftAppleGroup.showByAnim(150);\n            if (this.leftBox.isOpen && this.rightBox.isOpen) {\n                if (this.onBoxOpenCallback) {\n                    this.onBoxOpenCallback();\n                }\n            }\n        };\n        this.rightBox.onOpenCallback = ()=>{\n            // Generate Apple 2\n            this.rightAppleGroup.showByAnim(150);\n            if (this.leftBox.isOpen && this.rightBox.isOpen) {\n                if (this.onBoxOpenCallback) {\n                    this.onBoxOpenCallback();\n                }\n            }\n        };\n        this.leftBox.enableInput();\n        this.rightBox.enableInput();\n    }\n    openBoxes() {\n        let withAnim = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        if (!this.leftBox.isOpen) {\n            this.leftBox.open();\n        }\n        if (!this.rightBox.isOpen) {\n            this.rightBox.open();\n        }\n        if (withAnim) {\n            this.leftAppleGroup.showByAnim(150);\n            this.rightAppleGroup.showByAnim(150);\n        } else {\n            this.leftAppleGroup.show();\n            this.rightAppleGroup.show();\n        }\n    }\n    showHints() {\n        this.leftAppleGroup.showHints();\n        this.rightAppleGroup.showHints();\n    }\n    showQuestion() {\n        this.questionText.setVisible(true);\n    }\n    showButtons() {\n        this.leftButton.setDisabled(false);\n        this.rightButton.setDisabled(false);\n        //\n        this.leftButton.setVisible(true);\n        this.rightButton.setVisible(true);\n        this.canAnswer = true;\n    }\n    checkAnswer(place) {\n        if (!this.canAnswer) return;\n        if (!this.question) return;\n        let leftChoice = this.question.choices[0];\n        let rightChoice = this.question.choices[1];\n        if (!leftChoice) return;\n        if (!rightChoice) return;\n        if (place == \"left\") {\n            if (leftChoice.isAnswer) {\n                if (this.onCorrectCallback) this.onCorrectCallback();\n            } else {\n                if (this.onWrongCallback) this.onWrongCallback();\n            }\n        } else if (place == \"right\") {\n            if (rightChoice.isAnswer) {\n                if (this.onCorrectCallback) this.onCorrectCallback();\n            } else {\n                if (this.onWrongCallback) this.onWrongCallback();\n            }\n        }\n        this.leftButton.setDisabled(true);\n        this.rightButton.setDisabled(true);\n    }\n    hideQuestion() {\n        this.container.setVisible(false);\n    }\n    defaultQuestion() {\n        return {\n            key: \"example\",\n            question: {\n                en: \"Which box has more apples?\",\n                zh: \"哪个盒子的苹果比较多？\",\n                ms: \"Kotak mana ada lebih epal?\"\n            },\n            choices: [\n                {\n                    value: 5,\n                    text: {\n                        en: \"Box A\",\n                        zh: \"盒子 A\",\n                        ms: \"Kotak A\"\n                    },\n                    isAnswer: true\n                },\n                {\n                    value: 2,\n                    text: {\n                        en: \"Box B\",\n                        zh: \"盒子 B\",\n                        ms: \"Kotak B\"\n                    },\n                    isAnswer: false\n                }\n            ]\n        };\n    }\n    constructor(scene, x, y){\n        this.appleOriginY = 100;\n        this.boxOriginY = 300;\n        this.questionOriginY = 500;\n        this.buttonOriginY = 650;\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n        this.container = this.scene.add.container(x, y);\n        this.leftBox = new _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.boxOriginY);\n        this.leftBox.setTag(\"A\");\n        this.container.add(this.leftBox.getContainer());\n        this.rightBox = new _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.boxOriginY);\n        this.rightBox.setTag(\"B\");\n        this.container.add(this.rightBox.getContainer());\n        this.leftAppleGroup = new _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.appleOriginY, 0);\n        this.container.add(this.leftAppleGroup.getContainer());\n        this.rightAppleGroup = new _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.appleOriginY, 0);\n        this.container.add(this.rightAppleGroup.getContainer());\n        this.leftButton = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.buttonOriginY, \"A\", \"md\");\n        this.container.add(this.leftButton);\n        this.rightButton = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.buttonOriginY, \"B\", \"md\");\n        this.container.add(this.rightButton);\n        this.leftButton.onPressedCallback = ()=>{\n            this.checkAnswer(\"left\");\n        };\n        this.rightButton.onPressedCallback = ()=>{\n            this.checkAnswer(\"right\");\n        };\n        this.questionText = this.scene.add.text(0, this.questionOriginY, \"Question\", {\n            color: \"black\",\n            fontSize: 40\n        }).setOrigin(0.5);\n        this.container.add(this.questionText);\n        this.container.setVisible(false);\n        this.leftBox.hide();\n        this.rightBox.hide();\n        this.leftAppleGroup.hide();\n        this.rightAppleGroup.hide();\n        this.leftButton.setVisible(false);\n        this.rightButton.setVisible(false);\n        this.questionText.setVisible(false);\n        this.setQuestion(this.defaultQuestion());\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGVhcm4vY29tcG9uZW50cy9NYW55TGVzc1F1ZXN0aW9uUmVuZGVyZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDd0I7QUFDYztBQUNGO0FBQ21CO0FBR3hDLE1BQU1JO0lBQ2pCLE9BQU9DLFFBQVNDLEtBQVksRUFBRTtRQUMxQkwsMkRBQWtCLENBQUNLO1FBQ25CTixvREFBVyxDQUFDTTtJQUNoQjtJQWlGQUMsUUFBTztRQUNILElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsVUFBVSxDQUFDQyxXQUFXLENBQUU7UUFDN0IsSUFBSSxDQUFDQyxXQUFXLENBQUNELFdBQVcsQ0FBRTtJQUNsQztJQUVBRSxZQUFZQyxRQUFrQixFQUFDO1FBQzNCLElBQUksQ0FBQ04sS0FBSztRQUNWLElBQUksQ0FBQ00sUUFBUSxHQUFHQTtRQUVoQixJQUFJQyxhQUFzQixJQUFJLENBQUNELFFBQVEsQ0FBQ0UsT0FBTyxDQUFDLEVBQUU7UUFDbEQsSUFBSUMsY0FBdUIsSUFBSSxDQUFDSCxRQUFRLENBQUNFLE9BQU8sQ0FBQyxFQUFFO1FBRW5ELElBQUksQ0FBQ0UsY0FBYyxDQUFDQyxZQUFZLENBQUNKLFdBQVdLLEtBQUs7UUFDakQsSUFBSSxDQUFDQyxlQUFlLENBQUNGLFlBQVksQ0FBQ0YsWUFBWUcsS0FBSztRQUVuRCxJQUFJLENBQUNWLFVBQVUsQ0FBQ1ksVUFBVSxDQUFDQyxPQUFPLENBQUNSLFdBQVdTLElBQUksQ0FBQ0MsRUFBRTtRQUNyRCxJQUFJLENBQUNiLFdBQVcsQ0FBQ1UsVUFBVSxDQUFDQyxPQUFPLENBQUNOLFlBQVlPLElBQUksQ0FBQ0MsRUFBRTtRQUV2RCxJQUFJLENBQUNDLFlBQVksQ0FBQ0gsT0FBTyxDQUFFLElBQUksQ0FBQ1QsUUFBUSxDQUFDQSxRQUFRLENBQUNXLEVBQUU7SUFDeEQ7SUFFQUUsWUFBc0M7WUFBM0JDLFdBQUFBLGlFQUFvQjtRQUMzQixJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsVUFBVSxDQUFDO1FB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Q0FBQ2IsSUFBSSxDQUFDLEdBQUUsSUFBSSxDQUFDMEMsZUFBZSxFQUFDLFlBQVc7WUFDdEVLLE9BQU87WUFDUEMsVUFBVTtRQUNkLEdBQUdDLFNBQVMsQ0FBQztRQUNiLElBQUksQ0FBQzVDLFNBQVMsQ0FBQ1EsR0FBRyxDQUFDLElBQUksQ0FBQ1gsWUFBWTtRQUVwQyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0MsVUFBVSxDQUFDO1FBQzFCLElBQUksQ0FBQ0MsT0FBTyxDQUFDMkMsSUFBSTtRQUNqQixJQUFJLENBQUN4QyxRQUFRLENBQUN3QyxJQUFJO1FBQ2xCLElBQUksQ0FBQ3hELGNBQWMsQ0FBQ3dELElBQUk7UUFDeEIsSUFBSSxDQUFDckQsZUFBZSxDQUFDcUQsSUFBSTtRQUN6QixJQUFJLENBQUNoRSxVQUFVLENBQUNvQixVQUFVLENBQUM7UUFDM0IsSUFBSSxDQUFDbEIsV0FBVyxDQUFDa0IsVUFBVSxDQUFDO1FBQzVCLElBQUksQ0FBQ0osWUFBWSxDQUFDSSxVQUFVLENBQUM7UUFFN0IsSUFBSSxDQUFDakIsV0FBVyxDQUFFLElBQUksQ0FBQzhDLGVBQWU7SUFDMUM7QUE0S0o7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGVhcm4vY29tcG9uZW50cy9NYW55TGVzc1F1ZXN0aW9uUmVuZGVyZXIudHM/ZjFjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUgfSBmcm9tIFwicGhhc2VyXCI7XG5pbXBvcnQgQm94IGZyb20gXCIuL0JveFwiO1xuaW1wb3J0IEFwcGxlR3JvdXAgZnJvbSBcIi4vQXBwbGVHcm91cFwiO1xuaW1wb3J0IEdhbWVMaWIgZnJvbSBcIkAvbGliL0dhbWVMaWJcIjtcbmltcG9ydCBCYXNpY0J1dHRvbiBmcm9tIFwiQC9saWIvY29tcG9uZW50cy9CYXNpY0J1dHRvblwiO1xuaW1wb3J0IHsgUUNob2ljZSwgUXVlc3Rpb24gfSBmcm9tIFwiLi9RdWVzdGlvbkdlbmVyYXRvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYW55TGVzc1F1ZXN0aW9uUmVuZGVyZXJ7XG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBTY2VuZSApe1xuICAgICAgICBBcHBsZUdyb3VwLnByZWxvYWQoc2NlbmUpO1xuICAgICAgICBCb3gucHJlbG9hZChzY2VuZSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzY2VuZTogU2NlbmVcbiAgICBwcml2YXRlIHg6bnVtYmVyXG4gICAgcHJpdmF0ZSB5Om51bWJlclxuICAgIHByaXZhdGUgcXVlc3Rpb246IFF1ZXN0aW9uXG4gICAgLy9cbiAgICBwcml2YXRlIGNvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgcHJpdmF0ZSBsZWZ0Qm94OiBCb3hcbiAgICBwcml2YXRlIHJpZ2h0Qm94OiBCb3hcbiAgICBsZWZ0QXBwbGVHcm91cDogQXBwbGVHcm91cFxuICAgIHJpZ2h0QXBwbGVHcm91cDogQXBwbGVHcm91cFxuICAgIHByaXZhdGUgYXBwbGVPcmlnaW5ZOiBudW1iZXIgPSAxMDBcbiAgICBwcml2YXRlIGJveE9yaWdpblk6IG51bWJlciA9IDMwMFxuICAgIHByaXZhdGUgcXVlc3Rpb25PcmlnaW5ZOiBudW1iZXIgPSA1MDBcbiAgICBwcml2YXRlIGJ1dHRvbk9yaWdpblk6IG51bWJlciA9IDY1MFxuICAgIHByaXZhdGUgbGVmdEJ1dHRvbjogQmFzaWNCdXR0b25cbiAgICBwcml2YXRlIHJpZ2h0QnV0dG9uOiBCYXNpY0J1dHRvblxuICAgIHByaXZhdGUgcXVlc3Rpb25UZXh0OiBHYW1lT2JqZWN0cy5UZXh0XG4gICAgcHJpdmF0ZSBmZWVkYmFjazogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgcHJpdmF0ZSBmZWVkYmFja0Fuc3dlcjogR2FtZU9iamVjdHMuVGV4dFxuXG4gICAgcHJpdmF0ZSBjYW5BbnN3ZXI6IGJvb2xlYW5cbiAgICAvL1xuICAgIG9uQm94T3BlbkNhbGxiYWNrOiAoKSA9PiB2b2lkXG4gICAgb25Db3JyZWN0Q2FsbGJhY2s6ICgpID0+IHZvaWRcbiAgICBvbldyb25nQ2FsbGJhY2s6ICgpID0+IHZvaWRcbiAgICBcbiAgICBjb25zdHJ1Y3RvcihzY2VuZTpTY2VuZSwgeDpudW1iZXIsIHk6bnVtYmVyKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMueCA9IHhcbiAgICAgICAgdGhpcy55ID0geVxuICAgICAgICBcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSB0aGlzLnNjZW5lLmFkZC5jb250YWluZXIoeCx5KTtcblxuICAgICAgICB0aGlzLmxlZnRCb3ggPSBuZXcgQm94KHRoaXMuc2NlbmUsIC1HYW1lTGliLnF1YXRlclgsIHRoaXMuYm94T3JpZ2luWSk7XG4gICAgICAgIHRoaXMubGVmdEJveC5zZXRUYWcoJ0EnKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMubGVmdEJveC5nZXRDb250YWluZXIoKSk7XG5cbiAgICAgICAgdGhpcy5yaWdodEJveCA9IG5ldyBCb3godGhpcy5zY2VuZSwgR2FtZUxpYi5xdWF0ZXJYLCB0aGlzLmJveE9yaWdpblkpO1xuICAgICAgICB0aGlzLnJpZ2h0Qm94LnNldFRhZygnQicpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5yaWdodEJveC5nZXRDb250YWluZXIoKSk7XG5cbiAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cCA9IG5ldyBBcHBsZUdyb3VwKHRoaXMuc2NlbmUsIC1HYW1lTGliLnF1YXRlclgsIHRoaXMuYXBwbGVPcmlnaW5ZLCAwKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMubGVmdEFwcGxlR3JvdXAuZ2V0Q29udGFpbmVyKCkpO1xuXG4gICAgICAgIHRoaXMucmlnaHRBcHBsZUdyb3VwID0gbmV3IEFwcGxlR3JvdXAodGhpcy5zY2VuZSwgR2FtZUxpYi5xdWF0ZXJYLCB0aGlzLmFwcGxlT3JpZ2luWSwgMCApO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5yaWdodEFwcGxlR3JvdXAuZ2V0Q29udGFpbmVyKCkpO1xuXG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbiA9IG5ldyBCYXNpY0J1dHRvbih0aGlzLnNjZW5lLCAtR2FtZUxpYi5xdWF0ZXJYLCB0aGlzLmJ1dHRvbk9yaWdpblksICdBJywgJ21kJyApO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5sZWZ0QnV0dG9uKTtcblxuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uID0gbmV3IEJhc2ljQnV0dG9uKHRoaXMuc2NlbmUsIEdhbWVMaWIucXVhdGVyWCwgdGhpcy5idXR0b25PcmlnaW5ZLCAnQicsICdtZCcgKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMucmlnaHRCdXR0b24pO1xuXG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5vblByZXNzZWRDYWxsYmFjayA9ICgpPT57XG4gICAgICAgICAgICB0aGlzLmNoZWNrQW5zd2VyKCAnbGVmdCcgKTtcbiAgICAgICAgfSBcbiAgICAgICAgXG4gICAgICAgIHRoaXMucmlnaHRCdXR0b24ub25QcmVzc2VkQ2FsbGJhY2sgPSAoKT0+e1xuICAgICAgICAgICAgdGhpcy5jaGVja0Fuc3dlciggJ3JpZ2h0JyApO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5xdWVzdGlvblRleHQgPSB0aGlzLnNjZW5lLmFkZC50ZXh0KDAsdGhpcy5xdWVzdGlvbk9yaWdpblksJ1F1ZXN0aW9uJyx7XG4gICAgICAgICAgICBjb2xvcjogJ2JsYWNrJyxcbiAgICAgICAgICAgIGZvbnRTaXplOiA0MFxuICAgICAgICB9KS5zZXRPcmlnaW4oMC41KTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMucXVlc3Rpb25UZXh0KTtcblxuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgdGhpcy5sZWZ0Qm94LmhpZGUoKTtcbiAgICAgICAgdGhpcy5yaWdodEJveC5oaWRlKCk7XG4gICAgICAgIHRoaXMubGVmdEFwcGxlR3JvdXAuaGlkZSgpO1xuICAgICAgICB0aGlzLnJpZ2h0QXBwbGVHcm91cC5oaWRlKCk7XG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgdGhpcy5yaWdodEJ1dHRvbi5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgdGhpcy5xdWVzdGlvblRleHQuc2V0VmlzaWJsZShmYWxzZSk7XG5cbiAgICAgICAgdGhpcy5zZXRRdWVzdGlvbiggdGhpcy5kZWZhdWx0UXVlc3Rpb24oKSApO1xuICAgIH1cblxuICAgIHJlc2V0KCl7XG4gICAgICAgIHRoaXMuY2FuQW5zd2VyID0gZmFsc2U7XG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5zZXREaXNhYmxlZCggdHJ1ZSApO1xuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uLnNldERpc2FibGVkKCB0cnVlICk7XG4gICAgfVxuXG4gICAgc2V0UXVlc3Rpb24ocXVlc3Rpb246IFF1ZXN0aW9uKXtcbiAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgICB0aGlzLnF1ZXN0aW9uID0gcXVlc3Rpb247XG5cbiAgICAgICAgbGV0IGxlZnRDaG9pY2U6IFFDaG9pY2UgPSB0aGlzLnF1ZXN0aW9uLmNob2ljZXNbMF07XG4gICAgICAgIGxldCByaWdodENob2ljZTogUUNob2ljZSA9IHRoaXMucXVlc3Rpb24uY2hvaWNlc1sxXTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMubGVmdEFwcGxlR3JvdXAucmVuZGVyQXBwbGVzKGxlZnRDaG9pY2UudmFsdWUpO1xuICAgICAgICB0aGlzLnJpZ2h0QXBwbGVHcm91cC5yZW5kZXJBcHBsZXMocmlnaHRDaG9pY2UudmFsdWUpO1xuXG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5idXR0b25UZXh0LnNldFRleHQobGVmdENob2ljZS50ZXh0LnpoKTtcbiAgICAgICAgdGhpcy5yaWdodEJ1dHRvbi5idXR0b25UZXh0LnNldFRleHQocmlnaHRDaG9pY2UudGV4dC56aCk7XG5cbiAgICAgICAgdGhpcy5xdWVzdGlvblRleHQuc2V0VGV4dCggdGhpcy5xdWVzdGlvbi5xdWVzdGlvbi56aCApO1xuICAgIH1cblxuICAgIHNob3dCb3hlcyggd2l0aEFuaW06IGJvb2xlYW4gPSBmYWxzZSApe1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRWaXNpYmxlKHRydWUpO1xuICAgICAgICBcbiAgICAgICAgaWYoIHdpdGhBbmltICl7XG4gICAgICAgICAgICB0aGlzLmxlZnRCb3guZ2V0Q29udGFpbmVyKCkueSArPSAxMDAwO1xuICAgICAgICAgICAgdGhpcy5yaWdodEJveC5nZXRDb250YWluZXIoKS55ICs9IDEwMDA7XG4gICAgICAgICAgICB0aGlzLmxlZnRCb3guc2hvdygpO1xuICAgICAgICAgICAgdGhpcy5yaWdodEJveC5zaG93KCk7XG5cbiAgICAgICAgICAgIHRoaXMuc2NlbmUudHdlZW5zLmFkZCh7XG4gICAgICAgICAgICAgICAgdGFyZ2V0czogW3RoaXMubGVmdEJveC5nZXRDb250YWluZXIoKSx0aGlzLnJpZ2h0Qm94LmdldENvbnRhaW5lcigpXSxcbiAgICAgICAgICAgICAgICB5OiB0aGlzLmJveE9yaWdpblksXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IDUwMCwgXG4gICAgICAgICAgICAgICAgZWFzZTogJ0N1YmljJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHRoaXMubGVmdEJveC5zaG93KCk7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0Qm94LnNob3coKTtcbiAgICAgICAgICAgIHRoaXMubGVmdEJveC5nZXRDb250YWluZXIoKS55ID0gdGhpcy5ib3hPcmlnaW5ZO1xuICAgICAgICAgICAgdGhpcy5yaWdodEJveC5nZXRDb250YWluZXIoKS55ID0gdGhpcy5ib3hPcmlnaW5ZO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0dXBCb3hJbnB1dCgpe1xuICAgICAgICB0aGlzLmxlZnRCb3gub25PcGVuQ2FsbGJhY2sgPSAoKT0+e1xuICAgICAgICAgICAgLy8gR2VuZXJhdGUgQXBwbGUgNVxuICAgICAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cC5zaG93QnlBbmltKDE1MCk7XG5cbiAgICAgICAgICAgIGlmKCB0aGlzLmxlZnRCb3guaXNPcGVuICYmIHRoaXMucmlnaHRCb3guaXNPcGVuICl7XG4gICAgICAgICAgICAgICAgaWYoIHRoaXMub25Cb3hPcGVuQ2FsbGJhY2sgKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkJveE9wZW5DYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5yaWdodEJveC5vbk9wZW5DYWxsYmFjayA9ICgpPT57XG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSBBcHBsZSAyXG4gICAgICAgICAgICB0aGlzLnJpZ2h0QXBwbGVHcm91cC5zaG93QnlBbmltKDE1MCk7XG5cbiAgICAgICAgICAgIGlmKCB0aGlzLmxlZnRCb3guaXNPcGVuICYmIHRoaXMucmlnaHRCb3guaXNPcGVuICl7XG4gICAgICAgICAgICAgICAgaWYoIHRoaXMub25Cb3hPcGVuQ2FsbGJhY2sgKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkJveE9wZW5DYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmxlZnRCb3guZW5hYmxlSW5wdXQoKTtcbiAgICAgICAgdGhpcy5yaWdodEJveC5lbmFibGVJbnB1dCgpO1xuICAgIH1cblxuICAgIG9wZW5Cb3hlcyggd2l0aEFuaW06IGJvb2xlYW4gPSBmYWxzZSApe1xuICAgICAgICBpZiggIXRoaXMubGVmdEJveC5pc09wZW4gKXtcbiAgICAgICAgICAgIHRoaXMubGVmdEJveC5vcGVuKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiggIXRoaXMucmlnaHRCb3guaXNPcGVuICl7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0Qm94Lm9wZW4oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCB3aXRoQW5pbSApe1xuICAgICAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cC5zaG93QnlBbmltKDE1MCk7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0QXBwbGVHcm91cC5zaG93QnlBbmltKDE1MCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cC5zaG93KCk7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0QXBwbGVHcm91cC5zaG93KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzaG93SGludHMoKXtcbiAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cC5zaG93SGludHMoKTtcbiAgICAgICAgdGhpcy5yaWdodEFwcGxlR3JvdXAuc2hvd0hpbnRzKCk7XG4gICAgfVxuICAgIFxuICAgIHNob3dRdWVzdGlvbigpe1xuICAgICAgICB0aGlzLnF1ZXN0aW9uVGV4dC5zZXRWaXNpYmxlKHRydWUpO1xuICAgIH1cblxuICAgIHNob3dCdXR0b25zKCl7XG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5zZXREaXNhYmxlZCggZmFsc2UgKTtcbiAgICAgICAgdGhpcy5yaWdodEJ1dHRvbi5zZXREaXNhYmxlZCggZmFsc2UgKTtcbiAgICAgICAgLy9cbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uLnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgIHRoaXMucmlnaHRCdXR0b24uc2V0VmlzaWJsZSh0cnVlKTtcblxuICAgICAgICB0aGlzLmNhbkFuc3dlciA9IHRydWU7XG4gICAgfVxuXG4gICAgY2hlY2tBbnN3ZXIoIHBsYWNlOiAnbGVmdCcgfCAncmlnaHQnICl7XG4gICAgICAgIGlmKCAhdGhpcy5jYW5BbnN3ZXIgKSByZXR1cm47XG4gICAgICAgIGlmKCAhdGhpcy5xdWVzdGlvbiApIHJldHVybjtcblxuICAgICAgICBsZXQgbGVmdENob2ljZTogUUNob2ljZSA9IHRoaXMucXVlc3Rpb24uY2hvaWNlc1swXTtcbiAgICAgICAgbGV0IHJpZ2h0Q2hvaWNlOiBRQ2hvaWNlID0gdGhpcy5xdWVzdGlvbi5jaG9pY2VzWzFdO1xuXG4gICAgICAgIGlmKCAhbGVmdENob2ljZSApIHJldHVybjtcbiAgICAgICAgaWYoICFyaWdodENob2ljZSApIHJldHVybjtcblxuICAgICAgICBpZiggcGxhY2UgPT0gJ2xlZnQnICl7XG4gICAgICAgICAgICBpZiggbGVmdENob2ljZS5pc0Fuc3dlciApe1xuICAgICAgICAgICAgICAgIGlmKCB0aGlzLm9uQ29ycmVjdENhbGxiYWNrICkgdGhpcy5vbkNvcnJlY3RDYWxsYmFjaygpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgaWYoIHRoaXMub25Xcm9uZ0NhbGxiYWNrICkgdGhpcy5vbldyb25nQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfWVsc2UgaWYoIHBsYWNlID09ICdyaWdodCcgKXtcbiAgICAgICAgICAgIGlmKCByaWdodENob2ljZS5pc0Fuc3dlciApe1xuICAgICAgICAgICAgICAgIGlmKCB0aGlzLm9uQ29ycmVjdENhbGxiYWNrICkgdGhpcy5vbkNvcnJlY3RDYWxsYmFjaygpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgaWYoIHRoaXMub25Xcm9uZ0NhbGxiYWNrICkgdGhpcy5vbldyb25nQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5zZXREaXNhYmxlZCggdHJ1ZSApO1xuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uLnNldERpc2FibGVkKCB0cnVlICk7XG4gICAgfVxuXG4gICAgaGlkZVF1ZXN0aW9uKCl7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldFZpc2libGUoZmFsc2UpO1xuICAgIH1cbiAgICBcbiAgICBkZWZhdWx0UXVlc3Rpb24oKTpRdWVzdGlvbntcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtleTogJ2V4YW1wbGUnLFxuICAgICAgICAgICAgcXVlc3Rpb246IHtcbiAgICAgICAgICAgICAgICBlbjogJ1doaWNoIGJveCBoYXMgbW9yZSBhcHBsZXM/JyxcbiAgICAgICAgICAgICAgICB6aDogJ+WTquS4quebkuWtkOeahOiLueaenOavlOi+g+Wkmu+8nycsXG4gICAgICAgICAgICAgICAgbXM6ICdLb3RhayBtYW5hIGFkYSBsZWJpaCBlcGFsPycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hvaWNlczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDUsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuOiAnQm94IEEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgemg6ICfnm5LlrZAgQScsXG4gICAgICAgICAgICAgICAgICAgICAgICBtczogJ0tvdGFrIEEnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBpc0Fuc3dlcjogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMixcbiAgICAgICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW46ICdCb3ggQicsXG4gICAgICAgICAgICAgICAgICAgICAgICB6aDogJ+ebkuWtkCBCJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1zOiAnS290YWsgQicsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGlzQW5zd2VyOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgIH1cbn0iXSwibmFtZXMiOlsiQm94IiwiQXBwbGVHcm91cCIsIkdhbWVMaWIiLCJCYXNpY0J1dHRvbiIsIk1hbnlMZXNzUXVlc3Rpb25SZW5kZXJlciIsInByZWxvYWQiLCJzY2VuZSIsInJlc2V0IiwiY2FuQW5zd2VyIiwibGVmdEJ1dHRvbiIsInNldERpc2FibGVkIiwicmlnaHRCdXR0b24iLCJzZXRRdWVzdGlvbiIsInF1ZXN0aW9uIiwibGVmdENob2ljZSIsImNob2ljZXMiLCJyaWdodENob2ljZSIsImxlZnRBcHBsZUdyb3VwIiwicmVuZGVyQXBwbGVzIiwidmFsdWUiLCJyaWdodEFwcGxlR3JvdXAiLCJidXR0b25UZXh0Iiwic2V0VGV4dCIsInRleHQiLCJ6aCIsInF1ZXN0aW9uVGV4dCIsInNob3dCb3hlcyIsIndpdGhBbmltIiwiY29udGFpbmVyIiwic2V0VmlzaWJsZSIsImxlZnRCb3giLCJnZXRDb250YWluZXIiLCJ5IiwicmlnaHRCb3giLCJzaG93IiwidHdlZW5zIiwiYWRkIiwidGFyZ2V0cyIsImJveE9yaWdpblkiLCJkdXJhdGlvbiIsImVhc2UiLCJzZXR1cEJveElucHV0Iiwib25PcGVuQ2FsbGJhY2siLCJzaG93QnlBbmltIiwiaXNPcGVuIiwib25Cb3hPcGVuQ2FsbGJhY2siLCJlbmFibGVJbnB1dCIsIm9wZW5Cb3hlcyIsIm9wZW4iLCJzaG93SGludHMiLCJzaG93UXVlc3Rpb24iLCJzaG93QnV0dG9ucyIsImNoZWNrQW5zd2VyIiwicGxhY2UiLCJpc0Fuc3dlciIsIm9uQ29ycmVjdENhbGxiYWNrIiwib25Xcm9uZ0NhbGxiYWNrIiwiaGlkZVF1ZXN0aW9uIiwiZGVmYXVsdFF1ZXN0aW9uIiwia2V5IiwiZW4iLCJtcyIsImNvbnN0cnVjdG9yIiwieCIsImFwcGxlT3JpZ2luWSIsInF1ZXN0aW9uT3JpZ2luWSIsImJ1dHRvbk9yaWdpblkiLCJxdWF0ZXJYIiwic2V0VGFnIiwib25QcmVzc2VkQ2FsbGJhY2siLCJjb2xvciIsImZvbnRTaXplIiwic2V0T3JpZ2luIiwiaGlkZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/learn/components/ManyLessQuestionRenderer.ts\n"));

/***/ })

});