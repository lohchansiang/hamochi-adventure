"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeMaterialText.ts":
/*!************************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeMaterialText.ts ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ForgeMaterialText; }\n/* harmony export */ });\nclass ForgeMaterialText {\n    static preload(scene) {}\n    //\n    constructor(scene, x, y, vocab){\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.vocab = vocab;\n        this.container = scene.add.container(x, y);\n        let size = 250;\n        this.rect = scene.add.rectangle(0, 0, size, size, scene.manager.colorText);\n        this.text = scene.add.text(0, 0, vocab.name, {\n            fontSize: \"32px\",\n            color: \"black\",\n            fontStyle: \"bold\",\n            fontFamily: \"Arial\",\n            wordWrap: {\n                width: size - 20,\n                useAdvancedWrap: true\n            }\n        }).setOrigin(0.5);\n        this.container.add(this.rect);\n        this.container.add(this.text);\n        this.container.setSize(size, size);\n        this.container.setInteractive({\n            draggable: true\n        });\n        // this.scene.input.enableDebug(this.container,0x00ff00);\n        this.scene.input.setDraggable(this.container);\n        this.container.setData(\"type\", \"ForgeMaterialText\");\n        this.container.setData(\"key\", vocab.key);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZU1hdGVyaWFsVGV4dC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBS2UsTUFBTUE7SUFFakIsT0FBT0MsUUFBU0MsS0FBWSxFQUFFLENBRTlCO0lBWUEsRUFBRTtJQUVGQyxZQUFhRCxLQUFlLEVBQUVFLENBQVMsRUFBRUMsQ0FBUyxFQUFFQyxLQUFXLENBQUU7UUFDN0QsSUFBSSxDQUFDSixLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDSyxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDSSxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDQyxLQUFLLEdBQUdBO1FBRWIsSUFBSSxDQUFDRyxTQUFTLEdBQUdQLE1BQU1RLEdBQUcsQ0FBQ0QsU0FBUyxDQUFDTCxHQUFFQztRQUV2QyxJQUFJTSxPQUFjO1FBQ2xCLElBQUksQ0FBQ0MsSUFBSSxHQUFHVixNQUFNUSxHQUFHLENBQUNHLFNBQVMsQ0FBQyxHQUFFLEdBQUVGLE1BQUtBLE1BQUtULE1BQU1ZLE9BQU8sQ0FBQ0MsU0FBUztRQUNyRSxJQUFJLENBQUNDLElBQUksR0FBR2QsTUFBTVEsR0FBRyxDQUFDTSxJQUFJLENBQUMsR0FBRSxHQUFFVixNQUFNVyxJQUFJLEVBQUM7WUFDTkMsVUFBUztZQUNUQyxPQUFNO1lBQ05DLFdBQVU7WUFDVkMsWUFBVztZQUNYQyxVQUFVO2dCQUFFQyxPQUFPWixPQUFLO2dCQUFJYSxpQkFBaUI7WUFBSztRQUN0RCxHQUFHQyxTQUFTLENBQUM7UUFFN0MsSUFBSSxDQUFDaEIsU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDRSxJQUFJO1FBQzVCLElBQUksQ0FBQ0gsU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDTSxJQUFJO1FBRTVCLElBQUksQ0FBQ1AsU0FBUyxDQUFDaUIsT0FBTyxDQUFDZixNQUFLQTtRQUM1QixJQUFJLENBQUNGLFNBQVMsQ0FBQ2tCLGNBQWMsQ0FBQztZQUFDQyxXQUFXO1FBQUk7UUFFOUMseURBQXlEO1FBQ3pELElBQUksQ0FBQzFCLEtBQUssQ0FBQzJCLEtBQUssQ0FBQ0MsWUFBWSxDQUFDLElBQUksQ0FBQ3JCLFNBQVM7UUFFNUMsSUFBSSxDQUFDQSxTQUFTLENBQUNzQixPQUFPLENBQUMsUUFBTztRQUM5QixJQUFJLENBQUN0QixTQUFTLENBQUNzQixPQUFPLENBQUMsT0FBTXpCLE1BQU0wQixHQUFHO0lBQzFDO0FBQ0o7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZU1hdGVyaWFsVGV4dC50cz9iNjhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhcmRNYWtlciB9IGZyb20gXCJAL2dhbWUvc2NlbmVzL0NhcmRNYWtlclwiXG5pbXBvcnQgR2FtZUxpYiBmcm9tIFwiQC9saWIvR2FtZUxpYlwiXG5pbXBvcnQgeyBWb2NhYiB9IGZyb20gXCJAL2xpYi9yZXBvcy9EZWNrUmVwb1wiXG5pbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUgfSBmcm9tIFwicGhhc2VyXCJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9yZ2VNYXRlcmlhbFRleHR7XG5cbiAgICBzdGF0aWMgcHJlbG9hZCggc2NlbmU6IFNjZW5lICl7XG5cbiAgICB9XG5cbiAgICBzY2VuZTogQ2FyZE1ha2VyXG4gICAgb3JpWDogbnVtYmVyXG4gICAgb3JpWTogbnVtYmVyXG4gICAgdm9jYWI6IFZvY2FiIFxuICAgIC8vXG4gICAgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBvdXRlckJhc2U6IEdhbWVPYmplY3RzLk5pbmVTbGljZVxuICAgIGlubmVyQmFzZTogR2FtZU9iamVjdHMuTmluZVNsaWNlXG4gICAgcmVjdDogR2FtZU9iamVjdHMuUmVjdGFuZ2xlXG4gICAgdGV4dDogR2FtZU9iamVjdHMuVGV4dFxuICAgIC8vXG5cbiAgICBjb25zdHJ1Y3Rvciggc2NlbmU6Q2FyZE1ha2VyLCB4OiBudW1iZXIsIHk6IG51bWJlciwgdm9jYWI6Vm9jYWIgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMub3JpWCA9IHhcbiAgICAgICAgdGhpcy5vcmlZID0geVxuICAgICAgICB0aGlzLnZvY2FiID0gdm9jYWJcblxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IHNjZW5lLmFkZC5jb250YWluZXIoeCx5KTtcbiAgICAgICAgXG4gICAgICAgIGxldCBzaXplOm51bWJlciA9IDI1MDtcbiAgICAgICAgdGhpcy5yZWN0ID0gc2NlbmUuYWRkLnJlY3RhbmdsZSgwLDAsc2l6ZSxzaXplLHNjZW5lLm1hbmFnZXIuY29sb3JUZXh0KTtcbiAgICAgICAgdGhpcy50ZXh0ID0gc2NlbmUuYWRkLnRleHQoMCwwLHZvY2FiLm5hbWUseyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6JzMycHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjonYmxhY2snLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U3R5bGU6J2JvbGQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250RmFtaWx5OidBcmlhbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmRXcmFwOiB7IHdpZHRoOiBzaXplLTIwLCB1c2VBZHZhbmNlZFdyYXA6IHRydWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5zZXRPcmlnaW4oMC41KTtcblxuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5yZWN0KTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMudGV4dCk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRTaXplKHNpemUsc2l6ZSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldEludGVyYWN0aXZlKHtkcmFnZ2FibGU6IHRydWV9KTtcblxuICAgICAgICAvLyB0aGlzLnNjZW5lLmlucHV0LmVuYWJsZURlYnVnKHRoaXMuY29udGFpbmVyLDB4MDBmZjAwKTtcbiAgICAgICAgdGhpcy5zY2VuZS5pbnB1dC5zZXREcmFnZ2FibGUodGhpcy5jb250YWluZXIpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldERhdGEoJ3R5cGUnLCdGb3JnZU1hdGVyaWFsVGV4dCcpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXREYXRhKCdrZXknLHZvY2FiLmtleSk7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJGb3JnZU1hdGVyaWFsVGV4dCIsInByZWxvYWQiLCJzY2VuZSIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJ2b2NhYiIsIm9yaVgiLCJvcmlZIiwiY29udGFpbmVyIiwiYWRkIiwic2l6ZSIsInJlY3QiLCJyZWN0YW5nbGUiLCJtYW5hZ2VyIiwiY29sb3JUZXh0IiwidGV4dCIsIm5hbWUiLCJmb250U2l6ZSIsImNvbG9yIiwiZm9udFN0eWxlIiwiZm9udEZhbWlseSIsIndvcmRXcmFwIiwid2lkdGgiLCJ1c2VBZHZhbmNlZFdyYXAiLCJzZXRPcmlnaW4iLCJzZXRTaXplIiwic2V0SW50ZXJhY3RpdmUiLCJkcmFnZ2FibGUiLCJpbnB1dCIsInNldERyYWdnYWJsZSIsInNldERhdGEiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeMaterialText.ts\n"));

/***/ })

});