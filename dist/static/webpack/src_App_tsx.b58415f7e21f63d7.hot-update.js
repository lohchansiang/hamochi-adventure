"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeFeedbackSuccess.ts":
/*!***************************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeFeedbackSuccess.ts ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ forgeFeedbackSuccess; }\n/* harmony export */ });\nclass forgeFeedbackSuccess {\n    static preload(scene) {}\n    //\n    constructor(scene, x, y){\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.container = scene.add.container(x, y);\n        let size = 100;\n        this.sprite = scene.add.sprite(0, 0, \"forgeFeedbackSuccess\");\n        this.sprite.setDisplaySize(size, size);\n        this.container.add(this.sprite);\n        // Move to Forge Bar\n        this.scene.tweens.chain({\n            targets: this.container,\n            tweens: [\n                {\n                    x: \"-=100\",\n                    y: \"-=50\",\n                    scale: 1.5,\n                    duration: 200\n                },\n                {\n                    x: \"-=50\",\n                    y: \"+=50\",\n                    duration: 200\n                },\n                {\n                    x: this.scene.forgeBar.oriX,\n                    y: this.scene.forgeBar.oriY,\n                    duration: 200,\n                    delay: 300\n                }\n            ],\n            onComplete: ()=>{\n                this.scene.events.emit(\"forge-feedback\");\n                this.container.destroy();\n            }\n        });\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZUZlZWRiYWNrU3VjY2Vzcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBR2UsTUFBTUE7SUFFakIsT0FBT0MsUUFBU0MsS0FBWSxFQUFFLENBRTlCO0lBUUEsRUFBRTtJQUVGQyxZQUFhRCxLQUFlLEVBQUVFLENBQVMsRUFBRUMsQ0FBUyxDQUFFO1FBQ2hELElBQUksQ0FBQ0gsS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0ksSUFBSSxHQUFHRjtRQUNaLElBQUksQ0FBQ0csSUFBSSxHQUFHRjtRQUVaLElBQUksQ0FBQ0csU0FBUyxHQUFHTixNQUFNTyxHQUFHLENBQUNELFNBQVMsQ0FBQ0osR0FBRUM7UUFFdkMsSUFBSUssT0FBYztRQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBR1QsTUFBTU8sR0FBRyxDQUFDRSxNQUFNLENBQUMsR0FBRSxHQUFFO1FBQ25DLElBQUksQ0FBQ0EsTUFBTSxDQUFDQyxjQUFjLENBQUNGLE1BQUtBO1FBRWhDLElBQUksQ0FBQ0YsU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDRSxNQUFNO1FBRTlCLG9CQUFvQjtRQUNwQixJQUFJLENBQUNULEtBQUssQ0FBQ1csTUFBTSxDQUFDQyxLQUFLLENBQ25CO1lBQ0lDLFNBQVMsSUFBSSxDQUFDUCxTQUFTO1lBQ3ZCSyxRQUFRO2dCQUNKO29CQUNJVCxHQUFHO29CQUNIQyxHQUFHO29CQUNIVyxPQUFPO29CQUNQQyxVQUFVO2dCQUNkO2dCQUNBO29CQUNJYixHQUFHO29CQUNIQyxHQUFHO29CQUNIWSxVQUFVO2dCQUNkO2dCQUNBO29CQUNJYixHQUFHLElBQUksQ0FBQ0YsS0FBSyxDQUFDZ0IsUUFBUSxDQUFDWixJQUFJO29CQUMzQkQsR0FBRyxJQUFJLENBQUNILEtBQUssQ0FBQ2dCLFFBQVEsQ0FBQ1gsSUFBSTtvQkFDM0JVLFVBQVU7b0JBQ1ZFLE9BQU07Z0JBQ1Y7YUFDSDtZQUNEQyxZQUFZO2dCQUNSLElBQUksQ0FBQ2xCLEtBQUssQ0FBQ21CLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDO2dCQUN2QixJQUFJLENBQUNkLFNBQVMsQ0FBQ2UsT0FBTztZQUMxQjtRQUNKO0lBRVI7QUFDSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2NvbXBvbmVudHMvQ2FyZE1ha2VyL0ZvcmdlRmVlZGJhY2tTdWNjZXNzLnRzPzY1MjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FyZE1ha2VyIH0gZnJvbSBcIkAvZ2FtZS9zY2VuZXMvQ2FyZE1ha2VyXCJcbmltcG9ydCB7IEdhbWVPYmplY3RzLCBTY2VuZSB9IGZyb20gXCJwaGFzZXJcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBmb3JnZUZlZWRiYWNrU3VjY2Vzc3tcblxuICAgIHN0YXRpYyBwcmVsb2FkKCBzY2VuZTogU2NlbmUgKXtcblxuICAgIH1cblxuICAgIHNjZW5lOiBDYXJkTWFrZXJcbiAgICBvcmlYOiBudW1iZXJcbiAgICBvcmlZOiBudW1iZXJcbiAgICAvL1xuICAgIGNvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgc3ByaXRlOiBHYW1lT2JqZWN0cy5TcHJpdGVcbiAgICAvL1xuXG4gICAgY29uc3RydWN0b3IoIHNjZW5lOkNhcmRNYWtlciwgeDogbnVtYmVyLCB5OiBudW1iZXIgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMub3JpWCA9IHhcbiAgICAgICAgdGhpcy5vcmlZID0geVxuXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuICAgICAgICBcbiAgICAgICAgbGV0IHNpemU6bnVtYmVyID0gMTAwO1xuICAgICAgICB0aGlzLnNwcml0ZSA9IHNjZW5lLmFkZC5zcHJpdGUoMCwwLCdmb3JnZUZlZWRiYWNrU3VjY2VzcycpO1xuICAgICAgICB0aGlzLnNwcml0ZS5zZXREaXNwbGF5U2l6ZShzaXplLHNpemUpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnNwcml0ZSk7XG5cbiAgICAgICAgLy8gTW92ZSB0byBGb3JnZSBCYXJcbiAgICAgICAgdGhpcy5zY2VuZS50d2VlbnMuY2hhaW4oXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0czogdGhpcy5jb250YWluZXIsXG4gICAgICAgICAgICAgICAgdHdlZW5zOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IFwiLT0xMDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHk6IFwiLT01MFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGU6IDEuNSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgIH0sICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgeDogXCItPTUwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiBcIis9NTBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgIH0sICAgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IHRoaXMuc2NlbmUuZm9yZ2VCYXIub3JpWCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHk6IHRoaXMuc2NlbmUuZm9yZ2VCYXIub3JpWSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxheTozMDBcbiAgICAgICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIG9uQ29tcGxldGU6ICgpPT57XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2NlbmUuZXZlbnRzLmVtaXQoJ2ZvcmdlLWZlZWRiYWNrJyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIClcbiAgICB9XG59Il0sIm5hbWVzIjpbImZvcmdlRmVlZGJhY2tTdWNjZXNzIiwicHJlbG9hZCIsInNjZW5lIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsIm9yaVgiLCJvcmlZIiwiY29udGFpbmVyIiwiYWRkIiwic2l6ZSIsInNwcml0ZSIsInNldERpc3BsYXlTaXplIiwidHdlZW5zIiwiY2hhaW4iLCJ0YXJnZXRzIiwic2NhbGUiLCJkdXJhdGlvbiIsImZvcmdlQmFyIiwiZGVsYXkiLCJvbkNvbXBsZXRlIiwiZXZlbnRzIiwiZW1pdCIsImRlc3Ryb3kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeFeedbackSuccess.ts\n"));

/***/ })

});