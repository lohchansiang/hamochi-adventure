"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/PanelSelectCard/VocabCard.ts":
/*!**********************************************************!*\
  !*** ./src/game/components/PanelSelectCard/VocabCard.ts ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VocabCardConfig: function() { return /* binding */ VocabCardConfig; },\n/* harmony export */   \"default\": function() { return /* binding */ VocabCard; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n\nclass VocabCardConfig {\n    constructor(){\n        this.showIcon = false;\n    }\n}\nclass VocabCard {\n    static preload(scene) {}\n    setInteractive() {\n        this.cardBase.setInteractive();\n        this.cardBase.on(\"pointerdown\", ()=>{\n            if (this.onPressCallback && this.canSelect) {\n                this.onPressCallback();\n            }\n        }, this);\n        this.cardBase.on(\"pointerover\", ()=>{\n            this.setButtonState(\"selected\");\n        }, this);\n        this.cardBase.on(\"pointerout\", ()=>{\n            this.setButtonState(\"default\");\n        }, this);\n    }\n    setButtonState(state) {\n        this.buttonState = state;\n        switch(state){\n            case \"selected\":\n                this.cardSelect.setVisible(true);\n                break;\n            default:\n                this.cardSelect.setVisible(false);\n                this.buttonState = \"default\";\n                break;\n        }\n    }\n    setStatus(status) {\n        this.status = status;\n        // Reset Clear Grayscale\n        this.containerCard.postFX.clear();\n        this.containerCard.setAlpha(1);\n        // Reset Hide Icons\n        this.cardIconOwned.setVisible(false);\n        this.cardIconForge.setVisible(false);\n        switch(status){\n            case \"owned\":\n                this.cardBase.setTexture(\"vocabCardBase\");\n                this.vocabSprite.setVisible(true);\n                this.cardIconOwned.setVisible(true);\n                this.cardIconOwned.setAlpha(0.6);\n                this.containerCard.setAlpha(0.6);\n                this.canSelect = false;\n                break;\n            case \"broken\":\n                this.cardBase.setTexture(\"vocabCardBase\");\n                this.vocabSprite.setVisible(true);\n                var effect = this.containerCard.postFX.addColorMatrix();\n                effect.grayscale(1, true);\n                this.cardIconForge.setVisible(true);\n                this.canSelect = true;\n                break;\n            default:\n                // none\n                this.cardBase.setTexture(\"vocabCardBaseBack\");\n                this.vocabSprite.setVisible(false);\n                this.vocabText.setVisible(false);\n                this.status = \"none\";\n                this.containerCard.setAlpha(0.6);\n                this.canSelect = false;\n                break;\n        }\n    }\n    clean() {\n        this.container.destroy();\n    }\n    constructor(scene, x, y, width, height, vocab, config = new VocabCardConfig()){\n        //\n        this.canSelect = false;\n        this.scene = scene;\n        this.vocab = vocab;\n        this.container = scene.add.container(x, y);\n        this.containerCard = scene.add.container(0, 0);\n        this.cardSelect = this.scene.add.rectangle(0, 0, width + 20, height + 20, 0x98dbfa);\n        this.cardSelect.setVisible(false);\n        // BOC: Render Card\n        this.cardBase = this.scene.add.sprite(0, 0, \"vocabCardBase\");\n        this.cardBase.setDisplaySize(width, height);\n        this.vocabSprite = this.scene.add.sprite(0, -20, vocab.textureKey);\n        this.vocabSprite.setDisplaySize(width * 0.6, width * 0.6);\n        this.vocabText = this.scene.add.text(0, height / 2 - 50, vocab.name, {\n            color: \"black\",\n            fontSize: 32,\n            fontFamily: \"Arial\",\n            wordWrap: {\n                width: width,\n                useAdvancedWrap: true\n            },\n            align: \"center\"\n        }).setOrigin(0.5, 0.5);\n        // Icon Owned\n        this.cardIconOwned = this.scene.add.container(width / 2 - 20, height / 2 - 20);\n        let ownedCircle = this.scene.add.circle(0, 0, 30, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorSuccess);\n        let ownedIcon = this.scene.add.sprite(0, 0, \"iconTick\");\n        ownedIcon.setDisplaySize(30, 30);\n        this.cardIconOwned.add(ownedCircle);\n        this.cardIconOwned.add(ownedIcon);\n        this.cardIconOwned.setVisible(false);\n        // Icon Forge\n        this.cardIconForge = this.scene.add.container(width / 2 - 20, height / 2 - 20);\n        let forgeCircle = this.scene.add.circle(0, 0, 30, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorYellow);\n        let forgeIcon = this.scene.add.sprite(0, 0, \"hammer\");\n        forgeIcon.setDisplaySize(40, 40);\n        this.cardIconForge.add(forgeCircle);\n        this.cardIconForge.add(forgeIcon);\n        // Forge Tweens\n        this.scene.tweens.add({\n            targets: this.cardIconForge,\n            scale: 1.1,\n            ease: \"Linear\",\n            duration: 500,\n            repeat: -1,\n            yoyo: true\n        });\n        this.cardIconForge.setVisible(false);\n        this.containerCard.add(this.cardBase);\n        this.containerCard.add(this.vocabSprite);\n        this.containerCard.add(this.vocabText);\n        // EOC\n        this.container.add(this.cardSelect);\n        this.container.add(this.containerCard);\n        this.container.add(this.cardIconOwned);\n        this.container.add(this.cardIconForge);\n        this.setButtonState(\"default\");\n        this.setStatus(\"broken\");\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/components/PanelSelectCard/VocabCard.ts\n"));

/***/ })

});