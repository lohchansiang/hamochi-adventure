"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppLearn_tsx",{

/***/ "./src/learn/components/ManyLessQuestionRenderer.ts":
/*!**********************************************************!*\
  !*** ./src/learn/components/ManyLessQuestionRenderer.ts ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ManyLessQuestionRenderer; }\n/* harmony export */ });\n/* harmony import */ var _Box__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Box */ \"./src/learn/components/Box.ts\");\n/* harmony import */ var _AppleGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AppleGroup */ \"./src/learn/components/AppleGroup.ts\");\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/components/BasicButton */ \"./src/lib/components/BasicButton.ts\");\n\n\n\n\nclass ManyLessQuestionRenderer {\n    static preload(scene) {\n        _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"].preload(scene);\n        _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"].preload(scene);\n        scene.load.setPath(\"assets\");\n        scene.load.image(\"iconTick\", \"/learn/iconTick.png\");\n        scene.load.image(\"iconCross\", \"/learn/iconCross.png\");\n    }\n    reset() {\n        this.canAnswer = false;\n        this.leftButton.setDisabled(true);\n        this.rightButton.setDisabled(true);\n    }\n    setQuestion(question) {\n        this.reset();\n        this.question = question;\n        let leftChoice = this.question.choices[0];\n        let rightChoice = this.question.choices[1];\n        this.leftAppleGroup.renderApples(leftChoice.value);\n        this.rightAppleGroup.renderApples(rightChoice.value);\n        this.leftButton.buttonText.setText(leftChoice.text.zh);\n        this.rightButton.buttonText.setText(rightChoice.text.zh);\n        this.questionText.setText(this.question.question.zh);\n    }\n    showBoxes() {\n        let withAnim = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        this.container.setVisible(true);\n        if (withAnim) {\n            this.leftBox.getContainer().y += 1000;\n            this.rightBox.getContainer().y += 1000;\n            this.leftBox.show();\n            this.rightBox.show();\n            this.scene.tweens.add({\n                targets: [\n                    this.leftBox.getContainer(),\n                    this.rightBox.getContainer()\n                ],\n                y: this.boxOriginY,\n                duration: 500,\n                ease: \"Cubic\"\n            });\n        } else {\n            this.leftBox.show();\n            this.rightBox.show();\n            this.leftBox.getContainer().y = this.boxOriginY;\n            this.rightBox.getContainer().y = this.boxOriginY;\n        }\n    }\n    setupBoxInput() {\n        this.leftBox.onOpenCallback = ()=>{\n            // Generate Apple 5\n            this.leftAppleGroup.showByAnim(150);\n            if (this.leftBox.isOpen && this.rightBox.isOpen) {\n                if (this.onBoxOpenCallback) {\n                    this.onBoxOpenCallback();\n                }\n            }\n        };\n        this.rightBox.onOpenCallback = ()=>{\n            // Generate Apple 2\n            this.rightAppleGroup.showByAnim(150);\n            if (this.leftBox.isOpen && this.rightBox.isOpen) {\n                if (this.onBoxOpenCallback) {\n                    this.onBoxOpenCallback();\n                }\n            }\n        };\n        this.leftBox.enableInput();\n        this.rightBox.enableInput();\n    }\n    openBoxes() {\n        let withAnim = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        if (!this.leftBox.isOpen) {\n            this.leftBox.open();\n        }\n        if (!this.rightBox.isOpen) {\n            this.rightBox.open();\n        }\n        if (withAnim) {\n            this.leftAppleGroup.showByAnim(150);\n            this.rightAppleGroup.showByAnim(150);\n        } else {\n            this.leftAppleGroup.show();\n            this.rightAppleGroup.show();\n        }\n    }\n    showHints() {\n        this.leftAppleGroup.showHints();\n        this.rightAppleGroup.showHints();\n    }\n    showQuestion() {\n        this.questionText.setVisible(true);\n    }\n    showButtons() {\n        this.leftButton.setDisabled(false);\n        this.rightButton.setDisabled(false);\n        //\n        this.leftButton.setVisible(true);\n        this.rightButton.setVisible(true);\n        this.canAnswer = true;\n    }\n    checkAnswer(place) {\n        if (!this.canAnswer) return;\n        if (!this.question) return;\n        let leftChoice = this.question.choices[0];\n        let rightChoice = this.question.choices[1];\n        if (!leftChoice) return;\n        if (!rightChoice) return;\n        let isCorrect = false;\n        if (place == \"left\") {\n            if (leftChoice.isAnswer) {\n                isCorrect = true;\n            }\n        } else if (place == \"right\") {\n            if (rightChoice.isAnswer) {\n                isCorrect = true;\n            }\n        }\n        if (isCorrect) {\n            if (this.onCorrectCallback) this.onCorrectCallback();\n            this.feedback.setTexture(\"iconTick\");\n            this.feedback.setTint(0x00FF00);\n        // Show Feedback\n        } else {\n            if (this.onWrongCallback) this.onWrongCallback();\n            this.feedback.setVisible(true);\n            this.feedback.setTexture(\"iconCross\");\n            this.feedback.setTint(0xFF0000);\n        }\n        if (place == \"left\") {\n            this.feedback.x = this.leftButton.x;\n            this.feedback.y = this.leftButton.y;\n        } else if (place == \"right\") {\n            this.feedback.x = this.rightButton.x;\n            this.feedback.y = this.rightButton.y;\n        }\n        this.feedback.setVisible(true);\n        this.leftButton.setDisabled(true);\n        this.rightButton.setDisabled(true);\n    }\n    hideQuestion() {\n        this.container.setVisible(false);\n    }\n    defaultQuestion() {\n        return {\n            key: \"example\",\n            question: {\n                en: \"Which box has more apples?\",\n                zh: \"哪个盒子的苹果比较多？\",\n                ms: \"Kotak mana ada lebih epal?\"\n            },\n            choices: [\n                {\n                    value: 5,\n                    text: {\n                        en: \"Box A\",\n                        zh: \"盒子 A\",\n                        ms: \"Kotak A\"\n                    },\n                    isAnswer: true\n                },\n                {\n                    value: 2,\n                    text: {\n                        en: \"Box B\",\n                        zh: \"盒子 B\",\n                        ms: \"Kotak B\"\n                    },\n                    isAnswer: false\n                }\n            ]\n        };\n    }\n    constructor(scene, x, y){\n        this.appleOriginY = 100;\n        this.boxOriginY = 300;\n        this.questionOriginY = 500;\n        this.buttonOriginY = 650;\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n        this.container = this.scene.add.container(x, y);\n        this.leftBox = new _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.boxOriginY);\n        this.leftBox.setTag(\"A\");\n        this.container.add(this.leftBox.getContainer());\n        this.rightBox = new _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.boxOriginY);\n        this.rightBox.setTag(\"B\");\n        this.container.add(this.rightBox.getContainer());\n        this.leftAppleGroup = new _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.appleOriginY, 0);\n        this.container.add(this.leftAppleGroup.getContainer());\n        this.rightAppleGroup = new _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.appleOriginY, 0);\n        this.container.add(this.rightAppleGroup.getContainer());\n        this.leftButton = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.buttonOriginY, \"A\", \"md\");\n        this.container.add(this.leftButton);\n        this.rightButton = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.buttonOriginY, \"B\", \"md\");\n        this.container.add(this.rightButton);\n        this.leftButton.onPressedCallback = ()=>{\n            this.checkAnswer(\"left\");\n        };\n        this.rightButton.onPressedCallback = ()=>{\n            this.checkAnswer(\"right\");\n        };\n        this.questionText = this.scene.add.text(0, this.questionOriginY, \"Question\", {\n            color: \"black\",\n            fontSize: 40\n        }).setOrigin(0.5);\n        this.container.add(this.questionText);\n        this.feedback = this.scene.add.sprite(0, 0, \"iconCross\");\n        this.feedback.setVisible(false);\n        this.feedbackAnswer = this.scene.add.text(0, 0, \"Answer\", {\n            color: \"red\",\n            fontSize: 30\n        }).setOrigin(0.5);\n        this.feedbackAnswer.setVisible(false);\n        this.container.setVisible(false);\n        this.leftBox.hide();\n        this.rightBox.hide();\n        this.leftAppleGroup.hide();\n        this.rightAppleGroup.hide();\n        this.leftButton.setVisible(false);\n        this.rightButton.setVisible(false);\n        this.questionText.setVisible(false);\n        this.setQuestion(this.defaultQuestion());\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGVhcm4vY29tcG9uZW50cy9NYW55TGVzc1F1ZXN0aW9uUmVuZGVyZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDd0I7QUFDYztBQUNGO0FBQ21CO0FBR3hDLE1BQU1JO0lBQ2pCLE9BQU9DLFFBQVNDLEtBQVksRUFBRTtRQUMxQkwsMkRBQWtCLENBQUNLO1FBQ25CTixvREFBVyxDQUFDTTtRQUVaQSxNQUFNQyxJQUFJLENBQUNDLE9BQU8sQ0FBQztRQUNuQkYsTUFBTUMsSUFBSSxDQUFDRSxLQUFLLENBQUMsWUFBVztRQUM1QkgsTUFBTUMsSUFBSSxDQUFDRSxLQUFLLENBQUMsYUFBWTtJQUNqQztJQTBGQUMsUUFBTztRQUNILElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsVUFBVSxDQUFDQyxXQUFXLENBQUU7UUFDN0IsSUFBSSxDQUFDQyxXQUFXLENBQUNELFdBQVcsQ0FBRTtJQUNsQztJQUVBRSxZQUFZQyxRQUFrQixFQUFDO1FBQzNCLElBQUksQ0FBQ04sS0FBSztRQUNWLElBQUksQ0FBQ00sUUFBUSxHQUFHQTtRQUVoQixJQUFJQyxhQUFzQixJQUFJLENBQUNELFFBQVEsQ0FBQ0UsT0FBTyxDQUFDLEVBQUU7UUFDbEQsSUFBSUMsY0FBdUIsSUFBSSxDQUFDSCxRQUFRLENBQUNFLE9BQU8sQ0FBQyxFQUFFO1FBRW5ELElBQUksQ0FBQ0UsY0FBYyxDQUFDQyxZQUFZLENBQUNKLFdBQVdLLEtBQUs7UUFDakQsSUFBSSxDQUFDQyxlQUFlLENBQUNGLFlBQVksQ0FBQ0YsWUFBWUcsS0FBSztRQUVuRCxJQUFJLENBQUNWLFVBQVUsQ0FBQ1ksVUFBVSxDQUFDQyxPQUFPLENBQUNSLFdBQVdTLElBQUksQ0FBQ0MsRUFBRTtRQUNyRCxJQUFJLENBQUNiLFdBQVcsQ0FBQ1UsVUFBVSxDQUFDQyxPQUFPLENBQUNOLFlBQVlPLElBQUksQ0FBQ0MsRUFBRTtRQUV2RCxJQUFJLENBQUNDLFlBQVksQ0FBQ0gsT0FBTyxDQUFFLElBQUks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QztRQUV6QixJQUFJLENBQUNpRCxjQUFjLEdBQUcsSUFBSSxDQUFDM0UsS0FBSyxDQUFDaUMsR0FBRyxDQUFDYixJQUFJLENBQUMsR0FBRSxHQUFFLFVBQVM7WUFDbkRtRCxPQUFPO1lBQ1BDLFVBQVU7UUFDZCxHQUFHQyxTQUFTLENBQUM7UUFDYixJQUFJLENBQUNFLGNBQWMsQ0FBQ2pELFVBQVUsQ0FBQztRQUUvQixJQUFJLENBQUNELFNBQVMsQ0FBQ0MsVUFBVSxDQUFDO1FBQzFCLElBQUksQ0FBQ0MsT0FBTyxDQUFDaUQsSUFBSTtRQUNqQixJQUFJLENBQUM5QyxRQUFRLENBQUM4QyxJQUFJO1FBQ2xCLElBQUksQ0FBQzlELGNBQWMsQ0FBQzhELElBQUk7UUFDeEIsSUFBSSxDQUFDM0QsZUFBZSxDQUFDMkQsSUFBSTtRQUN6QixJQUFJLENBQUN0RSxVQUFVLENBQUNvQixVQUFVLENBQUM7UUFDM0IsSUFBSSxDQUFDbEIsV0FBVyxDQUFDa0IsVUFBVSxDQUFDO1FBQzVCLElBQUksQ0FBQ0osWUFBWSxDQUFDSSxVQUFVLENBQUM7UUFFN0IsSUFBSSxDQUFDakIsV0FBVyxDQUFFLElBQUksQ0FBQ21ELGVBQWU7SUFDMUM7QUFrTUo7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGVhcm4vY29tcG9uZW50cy9NYW55TGVzc1F1ZXN0aW9uUmVuZGVyZXIudHM/ZjFjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUgfSBmcm9tIFwicGhhc2VyXCI7XG5pbXBvcnQgQm94IGZyb20gXCIuL0JveFwiO1xuaW1wb3J0IEFwcGxlR3JvdXAgZnJvbSBcIi4vQXBwbGVHcm91cFwiO1xuaW1wb3J0IEdhbWVMaWIgZnJvbSBcIkAvbGliL0dhbWVMaWJcIjtcbmltcG9ydCBCYXNpY0J1dHRvbiBmcm9tIFwiQC9saWIvY29tcG9uZW50cy9CYXNpY0J1dHRvblwiO1xuaW1wb3J0IHsgUUNob2ljZSwgUXVlc3Rpb24gfSBmcm9tIFwiLi9RdWVzdGlvbkdlbmVyYXRvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYW55TGVzc1F1ZXN0aW9uUmVuZGVyZXJ7XG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBTY2VuZSApe1xuICAgICAgICBBcHBsZUdyb3VwLnByZWxvYWQoc2NlbmUpO1xuICAgICAgICBCb3gucHJlbG9hZChzY2VuZSk7XG4gICAgICAgIFxuICAgICAgICBzY2VuZS5sb2FkLnNldFBhdGgoJ2Fzc2V0cycpO1xuICAgICAgICBzY2VuZS5sb2FkLmltYWdlKCdpY29uVGljaycsJy9sZWFybi9pY29uVGljay5wbmcnKTtcbiAgICAgICAgc2NlbmUubG9hZC5pbWFnZSgnaWNvbkNyb3NzJywnL2xlYXJuL2ljb25Dcm9zcy5wbmcnKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNjZW5lOiBTY2VuZVxuICAgIHByaXZhdGUgeDpudW1iZXJcbiAgICBwcml2YXRlIHk6bnVtYmVyXG4gICAgcHJpdmF0ZSBxdWVzdGlvbjogUXVlc3Rpb25cbiAgICAvL1xuICAgIHByaXZhdGUgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBwcml2YXRlIGxlZnRCb3g6IEJveFxuICAgIHByaXZhdGUgcmlnaHRCb3g6IEJveFxuICAgIGxlZnRBcHBsZUdyb3VwOiBBcHBsZUdyb3VwXG4gICAgcmlnaHRBcHBsZUdyb3VwOiBBcHBsZUdyb3VwXG4gICAgcHJpdmF0ZSBhcHBsZU9yaWdpblk6IG51bWJlciA9IDEwMFxuICAgIHByaXZhdGUgYm94T3JpZ2luWTogbnVtYmVyID0gMzAwXG4gICAgcHJpdmF0ZSBxdWVzdGlvbk9yaWdpblk6IG51bWJlciA9IDUwMFxuICAgIHByaXZhdGUgYnV0dG9uT3JpZ2luWTogbnVtYmVyID0gNjUwXG4gICAgcHJpdmF0ZSBsZWZ0QnV0dG9uOiBCYXNpY0J1dHRvblxuICAgIHByaXZhdGUgcmlnaHRCdXR0b246IEJhc2ljQnV0dG9uXG4gICAgcHJpdmF0ZSBxdWVzdGlvblRleHQ6IEdhbWVPYmplY3RzLlRleHRcbiAgICBwcml2YXRlIGZlZWRiYWNrOiBHYW1lT2JqZWN0cy5TcHJpdGVcbiAgICBwcml2YXRlIGZlZWRiYWNrQW5zd2VyOiBHYW1lT2JqZWN0cy5UZXh0XG5cbiAgICBwcml2YXRlIGNhbkFuc3dlcjogYm9vbGVhblxuICAgIC8vXG4gICAgb25Cb3hPcGVuQ2FsbGJhY2s6ICgpID0+IHZvaWRcbiAgICBvbkNvcnJlY3RDYWxsYmFjazogKCkgPT4gdm9pZFxuICAgIG9uV3JvbmdDYWxsYmFjazogKCkgPT4gdm9pZFxuICAgIFxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOlNjZW5lLCB4Om51bWJlciwgeTpudW1iZXIpe1xuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmVcbiAgICAgICAgdGhpcy54ID0geFxuICAgICAgICB0aGlzLnkgPSB5XG4gICAgICAgIFxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IHRoaXMuc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuXG4gICAgICAgIHRoaXMubGVmdEJveCA9IG5ldyBCb3godGhpcy5zY2VuZSwgLUdhbWVMaWIucXVhdGVyWCwgdGhpcy5ib3hPcmlnaW5ZKTtcbiAgICAgICAgdGhpcy5sZWZ0Qm94LnNldFRhZygnQScpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5sZWZ0Qm94LmdldENvbnRhaW5lcigpKTtcblxuICAgICAgICB0aGlzLnJpZ2h0Qm94ID0gbmV3IEJveCh0aGlzLnNjZW5lLCBHYW1lTGliLnF1YXRlclgsIHRoaXMuYm94T3JpZ2luWSk7XG4gICAgICAgIHRoaXMucmlnaHRCb3guc2V0VGFnKCdCJyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnJpZ2h0Qm94LmdldENvbnRhaW5lcigpKTtcblxuICAgICAgICB0aGlzLmxlZnRBcHBsZUdyb3VwID0gbmV3IEFwcGxlR3JvdXAodGhpcy5zY2VuZSwgLUdhbWVMaWIucXVhdGVyWCwgdGhpcy5hcHBsZU9yaWdpblksIDApO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5sZWZ0QXBwbGVHcm91cC5nZXRDb250YWluZXIoKSk7XG5cbiAgICAgICAgdGhpcy5yaWdodEFwcGxlR3JvdXAgPSBuZXcgQXBwbGVHcm91cCh0aGlzLnNjZW5lLCBHYW1lTGliLnF1YXRlclgsIHRoaXMuYXBwbGVPcmlnaW5ZLCAwICk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnJpZ2h0QXBwbGVHcm91cC5nZXRDb250YWluZXIoKSk7XG5cbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uID0gbmV3IEJhc2ljQnV0dG9uKHRoaXMuc2NlbmUsIC1HYW1lTGliLnF1YXRlclgsIHRoaXMuYnV0dG9uT3JpZ2luWSwgJ0EnLCAnbWQnICk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmxlZnRCdXR0b24pO1xuXG4gICAgICAgIHRoaXMucmlnaHRCdXR0b24gPSBuZXcgQmFzaWNCdXR0b24odGhpcy5zY2VuZSwgR2FtZUxpYi5xdWF0ZXJYLCB0aGlzLmJ1dHRvbk9yaWdpblksICdCJywgJ21kJyApO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5yaWdodEJ1dHRvbik7XG5cbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uLm9uUHJlc3NlZENhbGxiYWNrID0gKCk9PntcbiAgICAgICAgICAgIHRoaXMuY2hlY2tBbnN3ZXIoICdsZWZ0JyApO1xuICAgICAgICB9IFxuICAgICAgICBcbiAgICAgICAgdGhpcy5yaWdodEJ1dHRvbi5vblByZXNzZWRDYWxsYmFjayA9ICgpPT57XG4gICAgICAgICAgICB0aGlzLmNoZWNrQW5zd2VyKCAncmlnaHQnICk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnF1ZXN0aW9uVGV4dCA9IHRoaXMuc2NlbmUuYWRkLnRleHQoMCx0aGlzLnF1ZXN0aW9uT3JpZ2luWSwnUXVlc3Rpb24nLHtcbiAgICAgICAgICAgIGNvbG9yOiAnYmxhY2snLFxuICAgICAgICAgICAgZm9udFNpemU6IDQwXG4gICAgICAgIH0pLnNldE9yaWdpbigwLjUpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5xdWVzdGlvblRleHQpO1xuXG4gICAgICAgIHRoaXMuZmVlZGJhY2sgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoMCwwLCdpY29uQ3Jvc3MnKTtcbiAgICAgICAgdGhpcy5mZWVkYmFjay5zZXRWaXNpYmxlKGZhbHNlKTtcblxuICAgICAgICB0aGlzLmZlZWRiYWNrQW5zd2VyID0gdGhpcy5zY2VuZS5hZGQudGV4dCgwLDAsJ0Fuc3dlcicse1xuICAgICAgICAgICAgY29sb3I6ICdyZWQnLFxuICAgICAgICAgICAgZm9udFNpemU6IDMwXG4gICAgICAgIH0pLnNldE9yaWdpbigwLjUpO1xuICAgICAgICB0aGlzLmZlZWRiYWNrQW5zd2VyLnNldFZpc2libGUoZmFsc2UpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICB0aGlzLmxlZnRCb3guaGlkZSgpO1xuICAgICAgICB0aGlzLnJpZ2h0Qm94LmhpZGUoKTtcbiAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cC5oaWRlKCk7XG4gICAgICAgIHRoaXMucmlnaHRBcHBsZUdyb3VwLmhpZGUoKTtcbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uLnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uLnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICB0aGlzLnF1ZXN0aW9uVGV4dC5zZXRWaXNpYmxlKGZhbHNlKTtcblxuICAgICAgICB0aGlzLnNldFF1ZXN0aW9uKCB0aGlzLmRlZmF1bHRRdWVzdGlvbigpICk7XG4gICAgfVxuXG4gICAgcmVzZXQoKXtcbiAgICAgICAgdGhpcy5jYW5BbnN3ZXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uLnNldERpc2FibGVkKCB0cnVlICk7XG4gICAgICAgIHRoaXMucmlnaHRCdXR0b24uc2V0RGlzYWJsZWQoIHRydWUgKTtcbiAgICB9XG5cbiAgICBzZXRRdWVzdGlvbihxdWVzdGlvbjogUXVlc3Rpb24pe1xuICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgICAgIHRoaXMucXVlc3Rpb24gPSBxdWVzdGlvbjtcblxuICAgICAgICBsZXQgbGVmdENob2ljZTogUUNob2ljZSA9IHRoaXMucXVlc3Rpb24uY2hvaWNlc1swXTtcbiAgICAgICAgbGV0IHJpZ2h0Q2hvaWNlOiBRQ2hvaWNlID0gdGhpcy5xdWVzdGlvbi5jaG9pY2VzWzFdO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5sZWZ0QXBwbGVHcm91cC5yZW5kZXJBcHBsZXMobGVmdENob2ljZS52YWx1ZSk7XG4gICAgICAgIHRoaXMucmlnaHRBcHBsZUdyb3VwLnJlbmRlckFwcGxlcyhyaWdodENob2ljZS52YWx1ZSk7XG5cbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uLmJ1dHRvblRleHQuc2V0VGV4dChsZWZ0Q2hvaWNlLnRleHQuemgpO1xuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uLmJ1dHRvblRleHQuc2V0VGV4dChyaWdodENob2ljZS50ZXh0LnpoKTtcblxuICAgICAgICB0aGlzLnF1ZXN0aW9uVGV4dC5zZXRUZXh0KCB0aGlzLnF1ZXN0aW9uLnF1ZXN0aW9uLnpoICk7XG4gICAgfVxuXG4gICAgc2hvd0JveGVzKCB3aXRoQW5pbTogYm9vbGVhbiA9IGZhbHNlICl7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgIFxuICAgICAgICBpZiggd2l0aEFuaW0gKXtcbiAgICAgICAgICAgIHRoaXMubGVmdEJveC5nZXRDb250YWluZXIoKS55ICs9IDEwMDA7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0Qm94LmdldENvbnRhaW5lcigpLnkgKz0gMTAwMDtcbiAgICAgICAgICAgIHRoaXMubGVmdEJveC5zaG93KCk7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0Qm94LnNob3coKTtcblxuICAgICAgICAgICAgdGhpcy5zY2VuZS50d2VlbnMuYWRkKHtcbiAgICAgICAgICAgICAgICB0YXJnZXRzOiBbdGhpcy5sZWZ0Qm94LmdldENvbnRhaW5lcigpLHRoaXMucmlnaHRCb3guZ2V0Q29udGFpbmVyKCldLFxuICAgICAgICAgICAgICAgIHk6IHRoaXMuYm94T3JpZ2luWSxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogNTAwLCBcbiAgICAgICAgICAgICAgICBlYXNlOiAnQ3ViaWMnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgdGhpcy5sZWZ0Qm94LnNob3coKTtcbiAgICAgICAgICAgIHRoaXMucmlnaHRCb3guc2hvdygpO1xuICAgICAgICAgICAgdGhpcy5sZWZ0Qm94LmdldENvbnRhaW5lcigpLnkgPSB0aGlzLmJveE9yaWdpblk7XG4gICAgICAgICAgICB0aGlzLnJpZ2h0Qm94LmdldENvbnRhaW5lcigpLnkgPSB0aGlzLmJveE9yaWdpblk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXR1cEJveElucHV0KCl7XG4gICAgICAgIHRoaXMubGVmdEJveC5vbk9wZW5DYWxsYmFjayA9ICgpPT57XG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSBBcHBsZSA1XG4gICAgICAgICAgICB0aGlzLmxlZnRBcHBsZUdyb3VwLnNob3dCeUFuaW0oMTUwKTtcblxuICAgICAgICAgICAgaWYoIHRoaXMubGVmdEJveC5pc09wZW4gJiYgdGhpcy5yaWdodEJveC5pc09wZW4gKXtcbiAgICAgICAgICAgICAgICBpZiggdGhpcy5vbkJveE9wZW5DYWxsYmFjayApe1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQm94T3BlbkNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnJpZ2h0Qm94Lm9uT3BlbkNhbGxiYWNrID0gKCk9PntcbiAgICAgICAgICAgIC8vIEdlbmVyYXRlIEFwcGxlIDJcbiAgICAgICAgICAgIHRoaXMucmlnaHRBcHBsZUdyb3VwLnNob3dCeUFuaW0oMTUwKTtcblxuICAgICAgICAgICAgaWYoIHRoaXMubGVmdEJveC5pc09wZW4gJiYgdGhpcy5yaWdodEJveC5pc09wZW4gKXtcbiAgICAgICAgICAgICAgICBpZiggdGhpcy5vbkJveE9wZW5DYWxsYmFjayApe1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQm94T3BlbkNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMubGVmdEJveC5lbmFibGVJbnB1dCgpO1xuICAgICAgICB0aGlzLnJpZ2h0Qm94LmVuYWJsZUlucHV0KCk7XG4gICAgfVxuXG4gICAgb3BlbkJveGVzKCB3aXRoQW5pbTogYm9vbGVhbiA9IGZhbHNlICl7XG4gICAgICAgIGlmKCAhdGhpcy5sZWZ0Qm94LmlzT3BlbiApe1xuICAgICAgICAgICAgdGhpcy5sZWZ0Qm94Lm9wZW4oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCAhdGhpcy5yaWdodEJveC5pc09wZW4gKXtcbiAgICAgICAgICAgIHRoaXMucmlnaHRCb3gub3BlbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYoIHdpdGhBbmltICl7XG4gICAgICAgICAgICB0aGlzLmxlZnRBcHBsZUdyb3VwLnNob3dCeUFuaW0oMTUwKTtcbiAgICAgICAgICAgIHRoaXMucmlnaHRBcHBsZUdyb3VwLnNob3dCeUFuaW0oMTUwKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLmxlZnRBcHBsZUdyb3VwLnNob3coKTtcbiAgICAgICAgICAgIHRoaXMucmlnaHRBcHBsZUdyb3VwLnNob3coKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNob3dIaW50cygpe1xuICAgICAgICB0aGlzLmxlZnRBcHBsZUdyb3VwLnNob3dIaW50cygpO1xuICAgICAgICB0aGlzLnJpZ2h0QXBwbGVHcm91cC5zaG93SGludHMoKTtcbiAgICB9XG4gICAgXG4gICAgc2hvd1F1ZXN0aW9uKCl7XG4gICAgICAgIHRoaXMucXVlc3Rpb25UZXh0LnNldFZpc2libGUodHJ1ZSk7XG4gICAgfVxuXG4gICAgc2hvd0J1dHRvbnMoKXtcbiAgICAgICAgdGhpcy5sZWZ0QnV0dG9uLnNldERpc2FibGVkKCBmYWxzZSApO1xuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uLnNldERpc2FibGVkKCBmYWxzZSApO1xuICAgICAgICAvL1xuICAgICAgICB0aGlzLmxlZnRCdXR0b24uc2V0VmlzaWJsZSh0cnVlKTtcbiAgICAgICAgdGhpcy5yaWdodEJ1dHRvbi5zZXRWaXNpYmxlKHRydWUpO1xuXG4gICAgICAgIHRoaXMuY2FuQW5zd2VyID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBjaGVja0Fuc3dlciggcGxhY2U6ICdsZWZ0JyB8ICdyaWdodCcgKXtcbiAgICAgICAgaWYoICF0aGlzLmNhbkFuc3dlciApIHJldHVybjtcbiAgICAgICAgaWYoICF0aGlzLnF1ZXN0aW9uICkgcmV0dXJuO1xuXG4gICAgICAgIGxldCBsZWZ0Q2hvaWNlOiBRQ2hvaWNlID0gdGhpcy5xdWVzdGlvbi5jaG9pY2VzWzBdO1xuICAgICAgICBsZXQgcmlnaHRDaG9pY2U6IFFDaG9pY2UgPSB0aGlzLnF1ZXN0aW9uLmNob2ljZXNbMV07XG5cbiAgICAgICAgaWYoICFsZWZ0Q2hvaWNlICkgcmV0dXJuO1xuICAgICAgICBpZiggIXJpZ2h0Q2hvaWNlICkgcmV0dXJuO1xuXG4gICAgICAgIGxldCBpc0NvcnJlY3Q6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgaWYoIHBsYWNlID09ICdsZWZ0JyApe1xuICAgICAgICAgICAgaWYoIGxlZnRDaG9pY2UuaXNBbnN3ZXIgKXtcbiAgICAgICAgICAgICAgICBpc0NvcnJlY3QgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZSBpZiggcGxhY2UgPT0gJ3JpZ2h0JyApe1xuICAgICAgICAgICAgaWYoIHJpZ2h0Q2hvaWNlLmlzQW5zd2VyICl7XG4gICAgICAgICAgICAgICAgaXNDb3JyZWN0ID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCBpc0NvcnJlY3QgKXtcbiAgICAgICAgICAgIGlmKCB0aGlzLm9uQ29ycmVjdENhbGxiYWNrICkgdGhpcy5vbkNvcnJlY3RDYWxsYmFjaygpO1xuXG4gICAgICAgICAgICB0aGlzLmZlZWRiYWNrLnNldFRleHR1cmUoJ2ljb25UaWNrJyk7XG4gICAgICAgICAgICB0aGlzLmZlZWRiYWNrLnNldFRpbnQoMHgwMEZGMDApO1xuXG4gICAgICAgICAgICAvLyBTaG93IEZlZWRiYWNrXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgaWYoIHRoaXMub25Xcm9uZ0NhbGxiYWNrICkgdGhpcy5vbldyb25nQ2FsbGJhY2soKTtcblxuICAgICAgICAgICAgdGhpcy5mZWVkYmFjay5zZXRWaXNpYmxlKHRydWUpO1xuICAgICAgICAgICAgdGhpcy5mZWVkYmFjay5zZXRUZXh0dXJlKCdpY29uQ3Jvc3MnKTtcbiAgICAgICAgICAgIHRoaXMuZmVlZGJhY2suc2V0VGludCgweEZGMDAwMCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiggcGxhY2UgPT0gJ2xlZnQnICl7XG4gICAgICAgICAgICB0aGlzLmZlZWRiYWNrLnggPSB0aGlzLmxlZnRCdXR0b24ueDtcbiAgICAgICAgICAgIHRoaXMuZmVlZGJhY2sueSA9IHRoaXMubGVmdEJ1dHRvbi55O1xuICAgICAgICB9ZWxzZSBpZiggcGxhY2UgPT0gJ3JpZ2h0JyApe1xuICAgICAgICAgICAgdGhpcy5mZWVkYmFjay54ID0gdGhpcy5yaWdodEJ1dHRvbi54O1xuICAgICAgICAgICAgdGhpcy5mZWVkYmFjay55ID0gdGhpcy5yaWdodEJ1dHRvbi55O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5mZWVkYmFjay5zZXRWaXNpYmxlKHRydWUpO1xuXG4gICAgICAgIHRoaXMubGVmdEJ1dHRvbi5zZXREaXNhYmxlZCggdHJ1ZSApO1xuICAgICAgICB0aGlzLnJpZ2h0QnV0dG9uLnNldERpc2FibGVkKCB0cnVlICk7XG4gICAgfVxuXG4gICAgaGlkZVF1ZXN0aW9uKCl7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnNldFZpc2libGUoZmFsc2UpO1xuICAgIH1cbiAgICBcbiAgICBkZWZhdWx0UXVlc3Rpb24oKTpRdWVzdGlvbntcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtleTogJ2V4YW1wbGUnLFxuICAgICAgICAgICAgcXVlc3Rpb246IHtcbiAgICAgICAgICAgICAgICBlbjogJ1doaWNoIGJveCBoYXMgbW9yZSBhcHBsZXM/JyxcbiAgICAgICAgICAgICAgICB6aDogJ+WTquS4quebkuWtkOeahOiLueaenOavlOi+g+Wkmu+8nycsXG4gICAgICAgICAgICAgICAgbXM6ICdLb3RhayBtYW5hIGFkYSBsZWJpaCBlcGFsPycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hvaWNlczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDUsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuOiAnQm94IEEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgemg6ICfnm5LlrZAgQScsXG4gICAgICAgICAgICAgICAgICAgICAgICBtczogJ0tvdGFrIEEnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBpc0Fuc3dlcjogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMixcbiAgICAgICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW46ICdCb3ggQicsXG4gICAgICAgICAgICAgICAgICAgICAgICB6aDogJ+ebkuWtkCBCJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1zOiAnS290YWsgQicsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGlzQW5zd2VyOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgIH1cbn0iXSwibmFtZXMiOlsiQm94IiwiQXBwbGVHcm91cCIsIkdhbWVMaWIiLCJCYXNpY0J1dHRvbiIsIk1hbnlMZXNzUXVlc3Rpb25SZW5kZXJlciIsInByZWxvYWQiLCJzY2VuZSIsImxvYWQiLCJzZXRQYXRoIiwiaW1hZ2UiLCJyZXNldCIsImNhbkFuc3dlciIsImxlZnRCdXR0b24iLCJzZXREaXNhYmxlZCIsInJpZ2h0QnV0dG9uIiwic2V0UXVlc3Rpb24iLCJxdWVzdGlvbiIsImxlZnRDaG9pY2UiLCJjaG9pY2VzIiwicmlnaHRDaG9pY2UiLCJsZWZ0QXBwbGVHcm91cCIsInJlbmRlckFwcGxlcyIsInZhbHVlIiwicmlnaHRBcHBsZUdyb3VwIiwiYnV0dG9uVGV4dCIsInNldFRleHQiLCJ0ZXh0IiwiemgiLCJxdWVzdGlvblRleHQiLCJzaG93Qm94ZXMiLCJ3aXRoQW5pbSIsImNvbnRhaW5lciIsInNldFZpc2libGUiLCJsZWZ0Qm94IiwiZ2V0Q29udGFpbmVyIiwieSIsInJpZ2h0Qm94Iiwic2hvdyIsInR3ZWVucyIsImFkZCIsInRhcmdldHMiLCJib3hPcmlnaW5ZIiwiZHVyYXRpb24iLCJlYXNlIiwic2V0dXBCb3hJbnB1dCIsIm9uT3BlbkNhbGxiYWNrIiwic2hvd0J5QW5pbSIsImlzT3BlbiIsIm9uQm94T3BlbkNhbGxiYWNrIiwiZW5hYmxlSW5wdXQiLCJvcGVuQm94ZXMiLCJvcGVuIiwic2hvd0hpbnRzIiwic2hvd1F1ZXN0aW9uIiwic2hvd0J1dHRvbnMiLCJjaGVja0Fuc3dlciIsInBsYWNlIiwiaXNDb3JyZWN0IiwiaXNBbnN3ZXIiLCJvbkNvcnJlY3RDYWxsYmFjayIsImZlZWRiYWNrIiwic2V0VGV4dHVyZSIsInNldFRpbnQiLCJvbldyb25nQ2FsbGJhY2siLCJ4IiwiaGlkZVF1ZXN0aW9uIiwiZGVmYXVsdFF1ZXN0aW9uIiwia2V5IiwiZW4iLCJtcyIsImNvbnN0cnVjdG9yIiwiYXBwbGVPcmlnaW5ZIiwicXVlc3Rpb25PcmlnaW5ZIiwiYnV0dG9uT3JpZ2luWSIsInF1YXRlclgiLCJzZXRUYWciLCJvblByZXNzZWRDYWxsYmFjayIsImNvbG9yIiwiZm9udFNpemUiLCJzZXRPcmlnaW4iLCJzcHJpdGUiLCJmZWVkYmFja0Fuc3dlciIsImhpZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/learn/components/ManyLessQuestionRenderer.ts\n"));

/***/ })

});