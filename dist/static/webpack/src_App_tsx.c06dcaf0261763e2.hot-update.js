"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/CardMakerManager.ts":
/*!***********************************************************!*\
  !*** ./src/game/components/CardMaker/CardMakerManager.ts ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CardMakerManager; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/repos/DeckRepo */ \"./src/lib/repos/DeckRepo.ts\");\n\n\nclass CardMakerManager {\n    getVocabStatus(vocabKey) {\n        if (this.owned.includes(vocabKey)) {\n            return \"owned\";\n        } else if (this.broken.includes(vocabKey)) {\n            return \"broken\";\n        } else {\n            return \"none\";\n        }\n    }\n    getTotalTarget() {\n        return this.targetImage + this.targetText + this.targetAudio;\n    }\n    getTotalCurrent() {\n        return this.currentImage + this.currentText + this.currentAudio;\n    }\n    setSelectedVocab(deckKey, vocabKey) {\n        this.selectedDeckKey = deckKey;\n        this.selectedVocabKey = vocabKey;\n    }\n    resetSelectedVocab() {\n        this.selectedDeckKey = \"\";\n        this.selectedVocabKey = \"\";\n    }\n    resetForgeValues() {\n        this.currentFailChance = 3;\n        //\n        this.currentImage = 0;\n        this.currentText = 0;\n        this.currentAudio = 0;\n    }\n    generateChoices() {\n        let choices = [];\n        let deck = _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_1__.DeckRepo.getDeck(this.selectedDeckKey);\n        if (deck != undefined) {\n            let answerIndex = deck.vocabs.findIndex((vocab)=>{\n                return this.selectedVocabKey == vocab.key;\n            });\n            choices.push(deck.vocabs[answerIndex]);\n            let otherIndexs = _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomNumbers(0, deck.vocabs.length - 1, 3, [\n                answerIndex\n            ]);\n            otherIndexs.forEach((i)=>{\n                choices.push(deck.vocabs[i]);\n            });\n        }\n        if (choices.length > 0) choices = _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shuffle(choices);\n        return choices;\n    }\n    checkAnswer(gameObject) {\n        let isCorrect = false;\n        let type = gameObject.getData(\"type\");\n        if (gameObject.getData(\"key\") == this.selectedVocabKey) {\n            if (type == \"ForgeMaterialImage\") {\n                this.addForgeImageValue();\n            } else if (type == \"ForgeMaterialText\") {\n                this.addForgeTextValue();\n            } else if (type == \"ForgeMaterialAudio\") {\n                this.addForgeAudioValue();\n            }\n            isCorrect = true;\n        } else {\n            // Reduce Failed Chance\n            this.minusFailedChanceValue();\n        }\n        this.scene.events.emit(\"forge-answered\");\n        return isCorrect;\n    }\n    addForgeImageValue() {\n        this.currentImage += 1;\n        if (this.currentImage > this.targetImage) {\n            this.currentImage = this.targetImage;\n        }\n    }\n    addForgeTextValue() {\n        this.currentText += 1;\n        if (this.currentText > this.targetText) {\n            this.currentText = this.targetText;\n        }\n    }\n    addForgeAudioValue() {\n        this.currentAudio += 1;\n        if (this.currentAudio > this.targetAudio) {\n            this.currentAudio = this.targetAudio;\n        }\n    }\n    minusFailedChanceValue() {\n        this.currentFailChance -= 1;\n        if (this.currentFailChance < 0) {\n            this.currentFailChance = 0;\n        }\n    }\n    checkWinCondition() {\n        if (this.getTotalCurrent() == this.getTotalTarget()) {\n            return true;\n        }\n        return false;\n    }\n    checkLoseCondition() {\n        if (this.currentFailChance == 0) {\n            return true;\n        }\n        return false;\n    }\n    addSelectedToOwned() {\n        if (this.selectedVocabKey != \"\" && !this.owned.includes(this.selectedVocabKey)) {\n            this.owned.push(this.selectedVocabKey);\n        }\n    }\n    getNextKey() {\n        let key = null;\n        if (this.manager.currentText >= this.manager.targetText) {\n            this.generateAudioChoices();\n        } else if (this.manager.currentImage >= this.manager.targetImage) {\n            this.generateTextChoices();\n        } else {\n            this.generateImageChoices();\n        }\n        return key;\n    }\n    constructor(scene){\n        //\n        this.maxFailChance = 3;\n        this.currentFailChance = 3;\n        //\n        this.targetImage = 2;\n        this.targetText = 2;\n        this.targetAudio = 1;\n        this.currentImage = 0;\n        this.currentText = 0;\n        this.currentAudio = 0;\n        //\n        this.colorImage = 0xCDFADB;\n        this.colorText = 0xFFCF96;\n        this.colorAudio = 0xFF8080;\n        this.scene = scene;\n        this.broken = [\n            \"apple\",\n            \"banana\",\n            \"pear\",\n            \"watermelon\"\n        ];\n        this.owned = [\n            \"apple\"\n        ];\n        this.resetForgeValues();\n        this.resetSelectedVocab();\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/CardMakerManager.ts\n"));

/***/ })

});