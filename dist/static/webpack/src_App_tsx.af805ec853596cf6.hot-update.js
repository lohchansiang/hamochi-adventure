"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/Match.ts":
/*!**************************************!*\
  !*** ./src/game/components/Match.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Match; }\n/* harmony export */ });\nclass Gem {\n}\nclass Match {\n    drawField() {\n        this.gameArray = [];\n        this.poolArray = [];\n        this.inputArray = [];\n        this.gemGroup = this.scene.add.group();\n        for(let i = 0; i < this.fieldSizeY; i++){\n            this.gameArray[i] = [];\n            this.inputArray[i] = [];\n            for(let j = 0; j < this.fieldSizeX; j++){\n                let color = this.randomColor();\n                let x = this.startX + (this.gemSize * j + this.gemSize / 2);\n                let y = this.startY + (this.gemSize * i + this.gemSize / 2);\n                let gem = this.scene.add.sprite(x, y, color);\n                this.gemGroup.add(gem);\n                do {\n                    let randomColor = this.randomColor();\n                    gem.setTexture(randomColor);\n                    this.gameArray[i][j] = {\n                        gemColor: randomColor,\n                        gemSprite: gem,\n                        isEmpty: false\n                    };\n                }while (this.isMatch(i, j));\n            }\n        }\n    }\n    isMatch(row, col) {\n        return this.isHorizontalMatch(row, col) || this.isVerticalMatch(row, col);\n    }\n    isHorizontalMatch(row, col) {\n        return this.gemAt(row, col).gemColor == this.gemAt(row, col - 1).gemColor && this.gemAt(row, col).gemColor == this.gemAt(row, col - 2).gemColor;\n    }\n    isVerticalMatch(row, col) {\n        return this.gemAt(row, col).gemColor == this.gemAt(row - 1, col).gemColor && this.gemAt(row, col).gemColor == this.gemAt(row - 2, col).gemColor;\n    }\n    gemAt(row, col) {\n        if (row < 0 || row >= this.fieldSizeY || col < 0 || col >= this.fieldSizeX) {\n            return -1;\n        }\n        return this.gameArray[row][col];\n    }\n    gemSelect(pointer) {\n        if (this.canPick) {\n            this.dragging = true;\n            let row = Math.floor((pointer.y - this.startY) / this.gemSize);\n            let col = Math.floor((pointer.x - this.startX) / this.gemSize);\n            let pickedGem = this.gemAt(row, col);\n            if (pickedGem != -1) {\n                if (this.selectedGem == null) {\n                    pickedGem.gemSprite.setScale(1.2);\n                    pickedGem.gemSprite.setDepth(1);\n                    this.selectedGem = pickedGem;\n                } else {\n                    if (this.areTheSame(pickedGem, this.selectedGem)) {\n                        this.selectedGem.gemSprite.setScale(1);\n                        this.selectedGem = null;\n                    } else {\n                        if (this.areNext(pickedGem, this.selectedGem)) {\n                            this.selectedGem.gemSprite.setScale(1);\n                            this.swapGems(this.selectedGem, pickedGem, true);\n                        } else {\n                            this.selectedGem.gemSprite.setScale(1);\n                            pickedGem.gemSprite.setScale(1.2);\n                            this.selectedGem = pickedGem;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    startSwipe(pointer) {\n        if (this.dragging && this.selectedGem != null) {\n            let deltaX = pointer.downX - pointer.x;\n            let deltaY = pointer.downY - pointer.y;\n            let deltaRow = 0;\n            let deltaCol = 0;\n            if (deltaX > this.gemSize / 2 && Math.abs(deltaY) < this.gemSize / 4) {\n                deltaCol = -1;\n            }\n            if (deltaX < -this.gemSize / 2 && Math.abs(deltaY) < this.gemSize / 4) {\n                deltaCol = 1;\n            }\n            if (deltaY > this.gemSize / 2 && Math.abs(deltaX) < this.gemSize / 4) {\n                deltaRow = -1;\n            }\n            if (deltaY < -this.gemSize / 2 && Math.abs(deltaX) < this.gemSize / 4) {\n                deltaRow = 1;\n            }\n            if (deltaRow + deltaCol != 0) {\n                let pickedGem = this.gemAt(this.getGemRow(this.selectedGem) + deltaRow, this.getGemCol(this.selectedGem) + deltaCol);\n                if (pickedGem != -1) {\n                    this.selectedGem.gemSprite.setScale(1);\n                    this.swapGems(this.selectedGem, pickedGem, true);\n                    this.dragging = false;\n                }\n            }\n        }\n    }\n    stopSwipe() {\n        this.dragging = false;\n    }\n    areTheSame(gem1, gem2) {\n        return this.getGemRow(gem1) == this.getGemRow(gem2) && this.getGemCol(gem1) == this.getGemCol(gem2);\n    }\n    getGemRow(gem) {\n        return Math.floor((gem.gemSprite.y - this.startY) / this.gemSize);\n    }\n    getGemCol(gem) {\n        return Math.floor((gem.gemSprite.x - this.startX) / this.gemSize);\n    }\n    areNext(gem1, gem2) {\n        return Math.abs(this.getGemRow(gem1) - this.getGemRow(gem2)) + Math.abs(this.getGemCol(gem1) - this.getGemCol(gem2)) == 1;\n    }\n    swapGems(gem1, gem2, swapBack) {\n        this.swappingGems = 2;\n        this.canPick = false;\n        let fromColor = gem1.gemColor;\n        let fromSprite = gem1.gemSprite;\n        let toColor = gem2.gemColor;\n        let toSprite = gem2.gemSprite;\n        let gem1Row = this.getGemRow(gem1);\n        let gem1Col = this.getGemCol(gem1);\n        let gem2Row = this.getGemRow(gem2);\n        let gem2Col = this.getGemCol(gem2);\n        this.gameArray[gem1Row][gem1Col].gemColor = toColor;\n        this.gameArray[gem1Row][gem1Col].gemSprite = toSprite;\n        this.gameArray[gem2Row][gem2Col].gemColor = fromColor;\n        this.gameArray[gem2Row][gem2Col].gemSprite = fromSprite;\n        this.tweenGem(gem1, gem2, swapBack);\n        this.tweenGem(gem2, gem1, swapBack);\n    }\n    tweenGem(gem1, gem2, swapBack) {\n        let row = this.getGemRow(gem1);\n        let col = this.getGemCol(gem1);\n        this.scene.tweens.add({\n            targets: this.gameArray[row][col].gemSprite,\n            x: this.startX + (col * this.gemSize + this.gemSize / 2),\n            y: this.startY + (row * this.gemSize + this.gemSize / 2),\n            duration: this.swapSpeed,\n            callbackScope: this,\n            onComplete: function() {\n                this.swappingGems--;\n                if (this.swappingGems == 0) {\n                    if (!this.matchInBoard() && swapBack) {\n                        this.swapGems(gem1, gem2, false);\n                    } else {\n                        if (this.matchInBoard()) {\n                            this.handleMatches();\n                        } else {\n                            this.canPick = true;\n                            this.selectedGem = null;\n                        }\n                    }\n                }\n            }\n        });\n    }\n    matchInBoard() {\n        for(let i = 0; i < this.fieldSizeY; i++){\n            for(let j = 0; j < this.fieldSizeX; j++){\n                if (this.isMatch(i, j)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    handleMatches() {\n        this.removeMap = [];\n        for(let i = 0; i < this.fieldSizeY; i++){\n            this.removeMap[i] = [];\n            for(let j = 0; j < this.fieldSizeX; j++){\n                this.removeMap[i].push(0);\n            }\n        }\n        this.markMatches(\"horizontal\");\n        this.markMatches(\"vertical\");\n        this.destroyGems();\n    }\n    markMatches(direction) {\n        let iMax = direction == \"horizontal\" ? this.fieldSizeY : this.fieldSizeX;\n        let jMax = direction == \"horizontal\" ? this.fieldSizeX : this.fieldSizeY;\n        for(let i = 0; i < iMax; i++){\n            let colorStreak = 1;\n            let currentColor = -1;\n            let startStreak = 0;\n            let colorToWatch = 0;\n            for(let j = 0; j < jMax; j++){\n                if (direction == \"horizontal\") {\n                    colorToWatch = this.gemAt(i, j).gemColor;\n                } else {\n                    colorToWatch = this.gemAt(j, i).gemColor;\n                }\n                if (colorToWatch == currentColor) {\n                    colorStreak++;\n                }\n                if (colorToWatch != currentColor || j == jMax - 1) {\n                    if (colorStreak >= 3) {\n                        if (direction == \"horizontal\") {\n                        // console.log(\"HORIZONTAL :: Length = \" + colorStreak + \" :: Start = (\" + i + \",\" + startStreak + \") :: Color = \" + currentColor);\n                        } else {\n                        // console.log(\"VERTICAL :: Length = \" + colorStreak + \" :: Start = (\" + startStreak + \",\" + i + \") :: Color = \" + currentColor);\n                        }\n                        for(let k = 0; k < colorStreak; k++){\n                            if (direction == \"horizontal\") {\n                                this.removeMap[i][startStreak + k]++;\n                            } else {\n                                this.removeMap[startStreak + k][i]++;\n                            }\n                        }\n                    }\n                    startStreak = j;\n                    colorStreak = 1;\n                    currentColor = colorToWatch;\n                }\n            }\n        }\n    }\n    destroyGems() {\n        let destroyed = 0;\n        for(let i = 0; i < this.fieldSizeY; i++){\n            for(let j = 0; j < this.fieldSizeX; j++){\n                if (this.removeMap[i][j] > 0) {\n                    destroyed++;\n                    this.scene.tweens.add({\n                        targets: this.gameArray[i][j].gemSprite,\n                        alpha: 0.5,\n                        duration: this.destroySpeed,\n                        callbackScope: this,\n                        onComplete: function() {\n                            destroyed--;\n                            this.gameArray[i][j].gemSprite.visible = false;\n                            this.poolArray.push(this.gameArray[i][j].gemSprite);\n                            this.addScore(1);\n                            if (destroyed == 0) {\n                                this.makeGemsFall();\n                                this.replenishField();\n                            }\n                        }\n                    });\n                    this.gameArray[i][j].isEmpty = true;\n                }\n            }\n        }\n    }\n    makeGemsFall() {\n        for(let i = this.fieldSizeY - 2; i >= 0; i--){\n            for(let j = 0; j < this.fieldSizeX; j++){\n                if (!this.gameArray[i][j].isEmpty) {\n                    let fallTiles = this.holesBelow(i, j);\n                    if (fallTiles > 0) {\n                        this.scene.tweens.add({\n                            targets: this.gameArray[i][j].gemSprite,\n                            y: this.gameArray[i][j].gemSprite.y + fallTiles * this.gemSize,\n                            duration: this.fallSpeed * fallTiles\n                        });\n                        this.gameArray[i + fallTiles][j] = {\n                            gemSprite: this.gameArray[i][j].gemSprite,\n                            gemColor: this.gameArray[i][j].gemColor,\n                            isEmpty: false\n                        };\n                        this.gameArray[i][j].isEmpty = true;\n                    }\n                }\n            }\n        }\n    }\n    holesBelow(row, col) {\n        let result = 0;\n        for(let i = row + 1; i < this.fieldSizeY; i++){\n            if (this.gameArray[i][col].isEmpty) {\n                result++;\n            }\n        }\n        return result;\n    }\n    replenishField() {\n        let replenished = 0;\n        for(let j = 0; j < this.fieldSizeX; j++){\n            let emptySpots = this.holesInCol(j);\n            if (emptySpots > 0) {\n                for(let i = 0; i < emptySpots; i++){\n                    replenished++;\n                    let randomColor = this.randomColor();\n                    this.gameArray[i][j].gemColor = randomColor;\n                    this.gameArray[i][j].gemSprite = this.poolArray.pop();\n                    this.gameArray[i][j].gemSprite.setTexture(randomColor);\n                    this.gameArray[i][j].gemSprite.visible = this.isShow ? true : false;\n                    this.gameArray[i][j].gemSprite.x = this.startX + (this.gemSize * j + this.gemSize / 2);\n                    this.gameArray[i][j].gemSprite.y = this.startY + (this.gemSize / 2 - (emptySpots - i) * this.gemSize);\n                    this.gameArray[i][j].gemSprite.alpha = 0;\n                    this.gameArray[i][j].isEmpty = false;\n                    this.scene.tweens.add({\n                        targets: this.gameArray[i][j].gemSprite,\n                        y: this.startY + (this.gemSize * i + this.gemSize / 2),\n                        alpha: 1,\n                        duration: this.fallSpeed * emptySpots,\n                        callbackScope: this,\n                        onComplete: function() {\n                            replenished--;\n                            if (replenished == 0) {\n                                if (this.matchInBoard()) {\n                                    this.scene.time.addEvent({\n                                        delay: 250,\n                                        callback: this.handleMatches()\n                                    });\n                                } else {\n                                    this.canPick = true;\n                                    this.selectedGem = null;\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    holesInCol(col) {\n        var result = 0;\n        for(let i = 0; i < this.fieldSizeY; i++){\n            if (this.gameArray[i][col].isEmpty) {\n                result++;\n            }\n        }\n        return result;\n    }\n    randomColor() {\n        return this.gemColors[Phaser.Math.Between(0, this.gemColors.length - 1)];\n    }\n    addScore(value) {\n        this.score += value;\n        if (this.scoreText) this.scoreText.setText(\"Score: \" + this.score);\n        if (this.callbackScore && this.isShow) this.callbackScore(value);\n    }\n    show() {\n        this.gemGroup.setVisible(true);\n        this.isShow = true;\n    }\n    hide() {\n        this.gemGroup.setVisible(false);\n        this.isShow = false;\n    }\n    constructor(scene, x, y){\n        this.startX = 0;\n        this.startY = 0;\n        //\n        this.fieldSize = 6;\n        this.fieldSizeX = 7;\n        this.fieldSizeY = 6;\n        this.gemSize = 128;\n        this.swapSpeed = 200;\n        this.fallSpeed = 100;\n        this.destroySpeed = 200;\n        this.gemColors = [\n            \"blue\",\n            \"green\",\n            \"orange\",\n            \"red\"\n        ];\n        //\n        this.canPick = true;\n        this.dragging = false;\n        //\n        this.gameArray = [];\n        this.poolArray = [];\n        this.inputArray = [];\n        //\n        this.score = 0;\n        //\n        this.isShow = true;\n        this.scene = scene;\n        this.startX = x - this.fieldSizeX * this.gemSize / 2;\n        this.startY = y - this.fieldSizeY * this.gemSize / 2;\n        // Display Score\n        // this.scoreText = this.scene.add.text( GameLib.screenWidth/2, this.startY - 30, \"Score: \" + this.score, {fontSize:40,color:'black'} ).setOrigin(0.5)\n        this.drawField();\n        this.scene.input.on(\"pointerdown\", this.gemSelect, this);\n        this.scene.input.on(\"pointermove\", this.startSwipe, this);\n        this.scene.input.on(\"pointerup\", this.stopSwipe, this);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/components/Match.ts\n"));

/***/ }),

/***/ "./src/game/components/Opponent.ts":
/*!*****************************************!*\
  !*** ./src/game/components/Opponent.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Opponent; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _HealthBar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HealthBar */ \"./src/game/components/HealthBar.ts\");\n/* harmony import */ var _OpponentAttackBar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OpponentAttackBar */ \"./src/game/components/OpponentAttackBar.ts\");\n\n\n\nclass Opponent {\n    renderHealth() {\n        this.healthBar.renderHealth(this.currentHp, this.maxHp);\n    }\n    renderAttackBar() {\n        // Render Player Attack Bar\n        this.attackBar = new _OpponentAttackBar__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, 450, this.attackTime);\n        this.attackBar.resume();\n    }\n    damage(value) {\n        let newHp = this.currentHp - value;\n        if (newHp >= 0 && newHp <= this.maxHp) {\n            this.currentHp = newHp;\n        } else if (newHp < 0) {\n            this.currentHp = 0;\n        } else if (newHp > this.maxHp) {\n            this.currentHp = this.maxHp;\n        }\n        console.log(this.currentHp);\n        this.renderHealth();\n        this.scene.events.emit(\"opponent-update\");\n    }\n    resetAttack() {\n        this.attackBar.resetProgressBar();\n    }\n    stopAttack() {\n        this.attackBar.pause();\n    }\n    resumeAttack() {\n        this.scene.time.delayedCall(1000, ()=>{\n            this.attackBar.resume();\n        }, [], this);\n    }\n    constructor(scene, card){\n        this.maxHp = 2;\n        this.attackTime = 15;\n        this.scene = scene;\n        this.card = card;\n        this.currentHp = this.maxHp;\n        // Render Opponent\n        this.avatar = this.scene.add.sprite(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].centerX(), 200, card.spriteKey);\n        // Render Health\n        this.healthBar = new _HealthBar__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].centerX(), 350);\n        this.healthBar.container.scale = 0.8;\n        this.renderHealth();\n        this.renderAttackBar();\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL09wcG9uZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUM7QUFHQTtBQUNnQjtBQUVwQyxNQUFNRztJQWdDakJDLGVBQWM7UUFDVixJQUFJLENBQUNDLFNBQVMsQ0FBQ0QsWUFBWSxDQUFDLElBQUksQ0FBQ0UsU0FBUyxFQUFDLElBQUksQ0FBQ0MsS0FBSztJQUN6RDtJQUVBQyxrQkFBaUI7UUFDYiwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSVAsMERBQWlCQSxDQUFFLElBQUksQ0FBQ1EsS0FBSyxFQUFFVixnRUFBbUIsR0FBQyxHQUFFLEtBQUssSUFBSSxDQUFDWSxVQUFVO1FBQzlGLElBQUksQ0FBQ0gsU0FBUyxDQUFDSSxNQUFNO0lBQ3pCO0lBRUFDLE9BQU9DLEtBQVksRUFBQztRQUNoQixJQUFJQyxRQUFRLElBQUksQ0FBQ1YsU0FBUyxHQUFHUztRQUM3QixJQUFJQyxTQUFTLEtBQUtBLFNBQVMsSUFBSSxDQUFDVCxLQUFLLEVBQUU7WUFDbkMsSUFBSSxDQUFDRCxTQUFTLEdBQUdVO1FBQ3JCLE9BQU0sSUFBSUEsUUFBUSxHQUFHO1lBQ2pCLElBQUksQ0FBQ1YsU0FBUyxHQUFHO1FBQ3JCLE9BQU0sSUFBSVUsUUFBUSxJQUFJLENBQUNULEtBQUssRUFBRTtZQUMxQixJQUFJLENBQUNELFNBQVMsR0FBRyxJQUFJLENBQUNDLEtBQUs7UUFDL0I7UUFDQVUsUUFBUUMsR0FBRyxDQUFDLElBQUksQ0FBQ1osU0FBUztRQUMxQixJQUFJLENBQUNGLFlBQVk7UUFFakIsSUFBSSxDQUFDTSxLQUFLLENBQUNTLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDO0lBQzNCO0lBRUFDLGNBQWE7UUFDVCxJQUFJLENBQUNaLFNBQVMsQ0FBQ2EsZ0JBQWdCO0lBQ25DO0lBRUFDLGFBQVk7UUFDUixJQUFJLENBQUNkLFNBQVMsQ0FBQ2UsS0FBSztJQUN4QjtJQUVBQyxlQUFjO1FBQ1YsSUFBSSxDQUFDZixLQUFLLENBQUNnQixJQUFJLENBQUNDLFdBQVcsQ0FBQyxNQUFLO1lBQzdCLElBQUksQ0FBQ2xCLFNBQVMsQ0FBQ0ksTUFBTTtRQUN6QixHQUFFLEVBQUUsRUFBQyxJQUFJO0lBRWI7SUF2REFlLFlBQWFsQixLQUFXLEVBQUVtQixJQUFXLENBQUU7YUFWdkN0QixRQUFnQjthQUNoQkssYUFBcUI7UUFVakIsSUFBSSxDQUFDRixLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDbUIsSUFBSSxHQUFHQTtRQUVaLElBQUksQ0FBQ3ZCLFNBQVMsR0FBRyxJQUFJLENBQUNDLEtBQUs7UUFFM0Isa0JBQWtCO1FBQ2xCLElBQUksQ0FBQ3VCLE1BQU0sR0FBRyxJQUFJLENBQUNwQixLQUFLLENBQUNxQixHQUFHLENBQUNDLE1BQU0sQ0FBRWhDLDREQUFlLElBQUksS0FBSzZCLEtBQUtLLFNBQVM7UUFFM0UsZ0JBQWdCO1FBQ2hCLElBQUksQ0FBQzdCLFNBQVMsR0FBRyxJQUFJSixrREFBU0EsQ0FBQyxJQUFJLENBQUNTLEtBQUssRUFBRVYsNERBQWUsSUFBSTtRQUM5RCxJQUFJLENBQUNLLFNBQVMsQ0FBQzhCLFNBQVMsQ0FBQ0MsS0FBSyxHQUFHO1FBQ2pDLElBQUksQ0FBQ2hDLFlBQVk7UUFFakIsSUFBSSxDQUFDSSxlQUFlO0lBQ3hCO0FBeUNKO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2dhbWUvY29tcG9uZW50cy9PcHBvbmVudC50cz9jNzQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lTGliIGZyb20gXCJAL2xpYi9HYW1lTGliXCJcbmltcG9ydCB7IEdhbWVPYmplY3RzLCBTY2VuZSB9IGZyb20gXCJwaGFzZXJcIlxuaW1wb3J0IHsgQUNhcmQgfSBmcm9tIFwiLi9DYXJkUmVwb1wiXG5pbXBvcnQgSGVhbHRoQmFyIGZyb20gXCIuL0hlYWx0aEJhclwiXG5pbXBvcnQgT3Bwb25lbnRBdHRhY2tCYXIgZnJvbSBcIi4vT3Bwb25lbnRBdHRhY2tCYXJcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcHBvbmVudHtcblxuICAgIHNjZW5lOiBTY2VuZVxuICAgIGNhcmQ6IEFDYXJkXG5cbiAgICBtYXhIcDogbnVtYmVyID0gMlxuICAgIGF0dGFja1RpbWU6IG51bWJlciA9IDE1XG4gICAgLy9cbiAgICBhdmF0YXI6IEdhbWVPYmplY3RzLlNwcml0ZVxuICAgIGN1cnJlbnRIcDogbnVtYmVyXG4gICAgLy9cbiAgICBoZWFsdGhCYXI6IEhlYWx0aEJhclxuICAgIGF0dGFja0JhcjogT3Bwb25lbnRBdHRhY2tCYXJcblxuICAgIFxuICAgIGNvbnN0cnVjdG9yKCBzY2VuZTpTY2VuZSwgY2FyZDogQUNhcmQgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMuY2FyZCA9IGNhcmRcblxuICAgICAgICB0aGlzLmN1cnJlbnRIcCA9IHRoaXMubWF4SHBcblxuICAgICAgICAvLyBSZW5kZXIgT3Bwb25lbnRcbiAgICAgICAgdGhpcy5hdmF0YXIgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoIEdhbWVMaWIuY2VudGVyWCgpLCAyMDAsIGNhcmQuc3ByaXRlS2V5IClcblxuICAgICAgICAvLyBSZW5kZXIgSGVhbHRoXG4gICAgICAgIHRoaXMuaGVhbHRoQmFyID0gbmV3IEhlYWx0aEJhcih0aGlzLnNjZW5lLCBHYW1lTGliLmNlbnRlclgoKSwgMzUwKVxuICAgICAgICB0aGlzLmhlYWx0aEJhci5jb250YWluZXIuc2NhbGUgPSAwLjhcbiAgICAgICAgdGhpcy5yZW5kZXJIZWFsdGgoKVxuXG4gICAgICAgIHRoaXMucmVuZGVyQXR0YWNrQmFyKClcbiAgICB9XG5cbiAgICByZW5kZXJIZWFsdGgoKXtcbiAgICAgICAgdGhpcy5oZWFsdGhCYXIucmVuZGVySGVhbHRoKHRoaXMuY3VycmVudEhwLHRoaXMubWF4SHApXG4gICAgfVxuXG4gICAgcmVuZGVyQXR0YWNrQmFyKCl7XG4gICAgICAgIC8vIFJlbmRlciBQbGF5ZXIgQXR0YWNrIEJhclxuICAgICAgICB0aGlzLmF0dGFja0JhciA9IG5ldyBPcHBvbmVudEF0dGFja0JhciggdGhpcy5zY2VuZSwgR2FtZUxpYi5zY3JlZW5XaWR0aC8yLDQ1MCwgdGhpcy5hdHRhY2tUaW1lICk7XG4gICAgICAgIHRoaXMuYXR0YWNrQmFyLnJlc3VtZSgpO1xuICAgIH1cbiAgICBcbiAgICBkYW1hZ2UodmFsdWU6bnVtYmVyKXtcbiAgICAgICAgbGV0IG5ld0hwID0gdGhpcy5jdXJyZW50SHAgLSB2YWx1ZVxuICAgICAgICBpZiggbmV3SHAgPj0gMCAmJiBuZXdIcCA8PSB0aGlzLm1heEhwICl7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRIcCA9IG5ld0hwO1xuICAgICAgICB9ZWxzZSBpZiggbmV3SHAgPCAwICl7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRIcCA9IDBcbiAgICAgICAgfWVsc2UgaWYoIG5ld0hwID4gdGhpcy5tYXhIcCApe1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50SHAgPSB0aGlzLm1heEhwXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jdXJyZW50SHApXG4gICAgICAgIHRoaXMucmVuZGVySGVhbHRoKClcblxuICAgICAgICB0aGlzLnNjZW5lLmV2ZW50cy5lbWl0KCdvcHBvbmVudC11cGRhdGUnKVxuICAgIH1cblxuICAgIHJlc2V0QXR0YWNrKCl7XG4gICAgICAgIHRoaXMuYXR0YWNrQmFyLnJlc2V0UHJvZ3Jlc3NCYXIoKTtcbiAgICB9XG5cbiAgICBzdG9wQXR0YWNrKCl7XG4gICAgICAgIHRoaXMuYXR0YWNrQmFyLnBhdXNlKCk7XG4gICAgfVxuXG4gICAgcmVzdW1lQXR0YWNrKCl7XG4gICAgICAgIHRoaXMuc2NlbmUudGltZS5kZWxheWVkQ2FsbCgxMDAwLCgpPT57XG4gICAgICAgICAgICB0aGlzLmF0dGFja0Jhci5yZXN1bWUoKTtcbiAgICAgICAgfSxbXSx0aGlzKTtcbiAgICAgICBcbiAgICB9XG59Il0sIm5hbWVzIjpbIkdhbWVMaWIiLCJIZWFsdGhCYXIiLCJPcHBvbmVudEF0dGFja0JhciIsIk9wcG9uZW50IiwicmVuZGVySGVhbHRoIiwiaGVhbHRoQmFyIiwiY3VycmVudEhwIiwibWF4SHAiLCJyZW5kZXJBdHRhY2tCYXIiLCJhdHRhY2tCYXIiLCJzY2VuZSIsInNjcmVlbldpZHRoIiwiYXR0YWNrVGltZSIsInJlc3VtZSIsImRhbWFnZSIsInZhbHVlIiwibmV3SHAiLCJjb25zb2xlIiwibG9nIiwiZXZlbnRzIiwiZW1pdCIsInJlc2V0QXR0YWNrIiwicmVzZXRQcm9ncmVzc0JhciIsInN0b3BBdHRhY2siLCJwYXVzZSIsInJlc3VtZUF0dGFjayIsInRpbWUiLCJkZWxheWVkQ2FsbCIsImNvbnN0cnVjdG9yIiwiY2FyZCIsImF2YXRhciIsImFkZCIsInNwcml0ZSIsImNlbnRlclgiLCJzcHJpdGVLZXkiLCJjb250YWluZXIiLCJzY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/Opponent.ts\n"));

/***/ }),

/***/ "./src/game/components/OpponentAttackBar.ts":
/*!**************************************************!*\
  !*** ./src/game/components/OpponentAttackBar.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OpponentAttackBar; }\n/* harmony export */ });\nclass OpponentAttackBar {\n    onCountDown() {\n        if (!this.isPaused) {\n            this.addValue(1);\n        }\n    }\n    addValue(value) {\n        let newCurrent = this.current + value;\n        if (newCurrent > this.target) {\n            newCurrent = this.target;\n        } else if (newCurrent < 0) {\n            newCurrent = 0;\n        }\n        this.current = newCurrent;\n        this.renderProgressBar();\n        if (this.current == this.target) {\n            this.scene.events.emit(\"opponent-attack\");\n            this.pause();\n        }\n    }\n    pause() {\n        this.isPaused = true;\n    }\n    resume() {\n        this.isPaused = false;\n    }\n    renderProgressBar() {\n        let width = (this.width - 2 * this.padding) * (this.current / this.target);\n        let height = this.height - 2 * this.padding;\n        this.progressBar.fillStyle(0x00ff00, 1);\n        this.progressBar.fillRect(this.startX + this.padding, this.startY + this.padding, width, height);\n    }\n    resetProgressBar() {\n        this.current = 0;\n        this.progressBar.clear();\n        this.renderProgressBar();\n    }\n    constructor(scene, x, y, target = 5){\n        this.current = 0;\n        //\n        this.width = 400;\n        this.height = 50;\n        this.padding = 10;\n        this.scene = scene;\n        this.target = target;\n        this.startX = x - this.width / 2;\n        this.startY = y - this.height / 2;\n        this.progressBox = this.scene.add.graphics();\n        this.progressBox.fillStyle(0x222222, 0.8);\n        this.progressBox.fillRect(this.startX, this.startY, this.width, this.height);\n        this.progressBar = this.scene.add.graphics();\n        this.renderProgressBar();\n        this.timedEvent = this.scene.time.addEvent({\n            delay: 1000,\n            callback: this.onCountDown,\n            callbackScope: this,\n            loop: true\n        });\n        this.pause();\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL09wcG9uZW50QXR0YWNrQmFyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFHZSxNQUFNQTtJQW9DakJDLGNBQ0E7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDQyxRQUFRLEVBQUU7WUFDaEIsSUFBSSxDQUFDQyxRQUFRLENBQUM7UUFDbEI7SUFDSjtJQUVBQSxTQUFVQyxLQUFhLEVBQUM7UUFDcEIsSUFBSUMsYUFBYSxJQUFJLENBQUNDLE9BQU8sR0FBR0Y7UUFFaEMsSUFBSUMsYUFBYSxJQUFJLENBQUNFLE1BQU0sRUFBRTtZQUMxQkYsYUFBYSxJQUFJLENBQUNFLE1BQU07UUFDNUIsT0FBTSxJQUFJRixhQUFhLEdBQUc7WUFDdEJBLGFBQWE7UUFDakI7UUFFQSxJQUFJLENBQUNDLE9BQU8sR0FBR0Q7UUFDZixJQUFJLENBQUNHLGlCQUFpQjtRQUV0QixJQUFJLElBQUksQ0FBQ0YsT0FBTyxJQUFJLElBQUksQ0FBQ0MsTUFBTSxFQUFFO1lBQzdCLElBQUksQ0FBQ0UsS0FBSyxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQztZQUN2QixJQUFJLENBQUNDLEtBQUs7UUFDZDtJQUNKO0lBRUFBLFFBQU87UUFDSCxJQUFJLENBQUNWLFFBQVEsR0FBRztJQUNwQjtJQUVBVyxTQUFRO1FBQ0osSUFBSSxDQUFDWCxRQUFRLEdBQUc7SUFDcEI7SUFFQU0sb0JBQW1CO1FBQ2YsSUFBSU0sUUFBUSxDQUFFLElBQUksQ0FBQ0EsS0FBSyxHQUFJLElBQUUsSUFBSSxDQUFDQyxPQUFPLElBQVEsS0FBSSxDQUFDVCxPQUFPLEdBQUcsSUFBSSxDQUFDQyxNQUFNO1FBQzVFLElBQUlTLFNBQVMsSUFBSSxDQUFDQSxNQUFNLEdBQUksSUFBRSxJQUFJLENBQUNELE9BQU87UUFDMUMsSUFBSSxDQUFDRSxXQUFXLENBQUNDLFNBQVMsQ0FBQyxVQUFVO1FBQ3JDLElBQUksQ0FBQ0QsV0FBVyxDQUFDRSxRQUFRLENBQUMsSUFBSSxDQUFDQyxNQUFNLEdBQUMsSUFBSSxDQUFDTCxPQUFPLEVBQUUsSUFBSSxDQUFDTSxNQUFNLEdBQUMsSUFBSSxDQUFDTixPQUFPLEVBQUVELE9BQU9FO0lBQ3pGO0lBRUFNLG1CQUFrQjtRQUNkLElBQUksQ0FBQ2hCLE9BQU8sR0FBRztRQUVmLElBQUksQ0FBQ1csV0FBVyxDQUFDTSxLQUFLO1FBQ3RCLElBQUksQ0FBQ2YsaUJBQWlCO0lBQzFCO0lBL0RBZ0IsWUFBYWYsS0FBVyxFQUFFZ0IsQ0FBUyxFQUFFQyxDQUFTLEVBQUVuQixTQUFpQixDQUFDLENBQUU7YUFkcEVELFVBQWtCO1FBQ2xCLEVBQUU7YUFDRlEsUUFBZ0I7YUFDaEJFLFNBQWlCO2FBQ2pCRCxVQUFrQjtRQVdkLElBQUksQ0FBQ04sS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0YsTUFBTSxHQUFHQTtRQUVkLElBQUksQ0FBQ2EsTUFBTSxHQUFHSyxJQUFLLElBQUksQ0FBQ1gsS0FBSyxHQUFDO1FBQzlCLElBQUksQ0FBQ08sTUFBTSxHQUFHSyxJQUFLLElBQUksQ0FBQ1YsTUFBTSxHQUFDO1FBRS9CLElBQUksQ0FBQ1csV0FBVyxHQUFHLElBQUksQ0FBQ2xCLEtBQUssQ0FBQ21CLEdBQUcsQ0FBQ0MsUUFBUTtRQUMxQyxJQUFJLENBQUNGLFdBQVcsQ0FBQ1QsU0FBUyxDQUFDLFVBQVU7UUFDckMsSUFBSSxDQUFDUyxXQUFXLENBQUNSLFFBQVEsQ0FBQyxJQUFJLENBQUNDLE1BQU0sRUFBRSxJQUFJLENBQUNDLE1BQU0sRUFBRSxJQUFJLENBQUNQLEtBQUssRUFBRSxJQUFJLENBQUNFLE1BQU07UUFFM0UsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSSxDQUFDUixLQUFLLENBQUNtQixHQUFHLENBQUNDLFFBQVE7UUFDMUMsSUFBSSxDQUFDckIsaUJBQWlCO1FBRXRCLElBQUksQ0FBQ3NCLFVBQVUsR0FBRyxJQUFJLENBQUNyQixLQUFLLENBQUNzQixJQUFJLENBQUNDLFFBQVEsQ0FBQztZQUFFQyxPQUFPO1lBQU1DLFVBQVUsSUFBSSxDQUFDakMsV0FBVztZQUFFa0MsZUFBZSxJQUFJO1lBQUVDLE1BQU07UUFBSztRQUN0SCxJQUFJLENBQUN4QixLQUFLO0lBQ2Q7QUFnREo7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9jb21wb25lbnRzL09wcG9uZW50QXR0YWNrQmFyLnRzPzUzODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVMaWIgZnJvbSBcIkAvbGliL0dhbWVMaWJcIlxuaW1wb3J0IHsgR2FtZU9iamVjdHMsIFNjZW5lIH0gZnJvbSBcInBoYXNlclwiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wcG9uZW50QXR0YWNrQmFye1xuICAgIHNjZW5lOiBTY2VuZVxuICAgIC8vXG4gICAgdGFyZ2V0OiBudW1iZXJcbiAgICBjdXJyZW50OiBudW1iZXIgPSAwXG4gICAgLy9cbiAgICB3aWR0aDogbnVtYmVyID0gNDAwXG4gICAgaGVpZ2h0OiBudW1iZXIgPSA1MFxuICAgIHBhZGRpbmc6IG51bWJlciA9IDEwXG4gICAgc3RhcnRYOiBudW1iZXJcbiAgICBzdGFydFk6IG51bWJlclxuICAgIC8vXG4gICAgcHJvZ3Jlc3NCYXI6IEdhbWVPYmplY3RzLkdyYXBoaWNzXG4gICAgcHJvZ3Jlc3NCb3g6IEdhbWVPYmplY3RzLkdyYXBoaWNzXG4gICAgdGltZWRFdmVudDogUGhhc2VyLlRpbWUuVGltZXJFdmVudFxuICAgIC8vXG4gICAgaXNQYXVzZWQ6IGJvb2xlYW5cblxuICAgIGNvbnN0cnVjdG9yKCBzY2VuZTpTY2VuZSwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHRhcmdldDogbnVtYmVyID0gNSApe1xuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmVcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0YXJnZXRcblxuICAgICAgICB0aGlzLnN0YXJ0WCA9IHggLSAodGhpcy53aWR0aC8yKVxuICAgICAgICB0aGlzLnN0YXJ0WSA9IHkgLSAodGhpcy5oZWlnaHQvMilcblxuICAgICAgICB0aGlzLnByb2dyZXNzQm94ID0gdGhpcy5zY2VuZS5hZGQuZ3JhcGhpY3MoKTtcbiAgICAgICAgdGhpcy5wcm9ncmVzc0JveC5maWxsU3R5bGUoMHgyMjIyMjIsIDAuOCk7XG4gICAgICAgIHRoaXMucHJvZ3Jlc3NCb3guZmlsbFJlY3QodGhpcy5zdGFydFgsIHRoaXMuc3RhcnRZLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG5cbiAgICAgICAgdGhpcy5wcm9ncmVzc0JhciA9IHRoaXMuc2NlbmUuYWRkLmdyYXBoaWNzKCk7XG4gICAgICAgIHRoaXMucmVuZGVyUHJvZ3Jlc3NCYXIoKVxuXG4gICAgICAgIHRoaXMudGltZWRFdmVudCA9IHRoaXMuc2NlbmUudGltZS5hZGRFdmVudCh7IGRlbGF5OiAxMDAwLCBjYWxsYmFjazogdGhpcy5vbkNvdW50RG93biwgY2FsbGJhY2tTY29wZTogdGhpcywgbG9vcDogdHJ1ZSB9KVxuICAgICAgICB0aGlzLnBhdXNlKCk7XG4gICAgfVxuXG4gICAgb25Db3VudERvd24gKClcbiAgICB7XG4gICAgICAgIGlmKCAhdGhpcy5pc1BhdXNlZCApe1xuICAgICAgICAgICAgdGhpcy5hZGRWYWx1ZSgxKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkVmFsdWUoIHZhbHVlIDpudW1iZXIpe1xuICAgICAgICBsZXQgbmV3Q3VycmVudCA9IHRoaXMuY3VycmVudCArIHZhbHVlXG5cbiAgICAgICAgaWYoIG5ld0N1cnJlbnQgPiB0aGlzLnRhcmdldCApe1xuICAgICAgICAgICAgbmV3Q3VycmVudCA9IHRoaXMudGFyZ2V0XG4gICAgICAgIH1lbHNlIGlmKCBuZXdDdXJyZW50IDwgMCApe1xuICAgICAgICAgICAgbmV3Q3VycmVudCA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRoaXMuY3VycmVudCA9IG5ld0N1cnJlbnRcbiAgICAgICAgdGhpcy5yZW5kZXJQcm9ncmVzc0JhcigpXG5cbiAgICAgICAgaWYoIHRoaXMuY3VycmVudCA9PSB0aGlzLnRhcmdldCApe1xuICAgICAgICAgICAgdGhpcy5zY2VuZS5ldmVudHMuZW1pdCgnb3Bwb25lbnQtYXR0YWNrJylcbiAgICAgICAgICAgIHRoaXMucGF1c2UoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcGF1c2UoKXtcbiAgICAgICAgdGhpcy5pc1BhdXNlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmVzdW1lKCl7XG4gICAgICAgIHRoaXMuaXNQYXVzZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZW5kZXJQcm9ncmVzc0Jhcigpe1xuICAgICAgICBsZXQgd2lkdGggPSAoIHRoaXMud2lkdGggLSAoMip0aGlzLnBhZGRpbmcpICkgKiAoIHRoaXMuY3VycmVudCAvIHRoaXMudGFyZ2V0KVxuICAgICAgICBsZXQgaGVpZ2h0ID0gdGhpcy5oZWlnaHQgLSAoMip0aGlzLnBhZGRpbmcpXG4gICAgICAgIHRoaXMucHJvZ3Jlc3NCYXIuZmlsbFN0eWxlKDB4MDBmZjAwLCAxKTtcbiAgICAgICAgdGhpcy5wcm9ncmVzc0Jhci5maWxsUmVjdCh0aGlzLnN0YXJ0WCt0aGlzLnBhZGRpbmcsIHRoaXMuc3RhcnRZK3RoaXMucGFkZGluZywgd2lkdGgsIGhlaWdodCk7XG4gICAgfVxuXG4gICAgcmVzZXRQcm9ncmVzc0Jhcigpe1xuICAgICAgICB0aGlzLmN1cnJlbnQgPSAwO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5wcm9ncmVzc0Jhci5jbGVhcigpXG4gICAgICAgIHRoaXMucmVuZGVyUHJvZ3Jlc3NCYXIoKVxuICAgIH1cbn0iXSwibmFtZXMiOlsiT3Bwb25lbnRBdHRhY2tCYXIiLCJvbkNvdW50RG93biIsImlzUGF1c2VkIiwiYWRkVmFsdWUiLCJ2YWx1ZSIsIm5ld0N1cnJlbnQiLCJjdXJyZW50IiwidGFyZ2V0IiwicmVuZGVyUHJvZ3Jlc3NCYXIiLCJzY2VuZSIsImV2ZW50cyIsImVtaXQiLCJwYXVzZSIsInJlc3VtZSIsIndpZHRoIiwicGFkZGluZyIsImhlaWdodCIsInByb2dyZXNzQmFyIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJzdGFydFgiLCJzdGFydFkiLCJyZXNldFByb2dyZXNzQmFyIiwiY2xlYXIiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwicHJvZ3Jlc3NCb3giLCJhZGQiLCJncmFwaGljcyIsInRpbWVkRXZlbnQiLCJ0aW1lIiwiYWRkRXZlbnQiLCJkZWxheSIsImNhbGxiYWNrIiwiY2FsbGJhY2tTY29wZSIsImxvb3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/components/OpponentAttackBar.ts\n"));

/***/ }),

/***/ "./src/game/main.ts":
/*!**************************!*\
  !*** ./src/game/main.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scenes_Boot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scenes/Boot */ \"./src/game/scenes/Boot.ts\");\n/* harmony import */ var _scenes_GameOver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenes/GameOver */ \"./src/game/scenes/GameOver.ts\");\n/* harmony import */ var _scenes_Game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scenes/Game */ \"./src/game/scenes/Game.ts\");\n/* harmony import */ var _scenes_MainMenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scenes/MainMenu */ \"./src/game/scenes/MainMenu.ts\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! phaser */ \"./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _scenes_Preloader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scenes/Preloader */ \"./src/game/scenes/Preloader.ts\");\n/* harmony import */ var _scenes_Battle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scenes/Battle */ \"./src/game/scenes/Battle.ts\");\n\n\n\n\n\n\n\n//  Find out more information about the Game Config at:\n//  https://newdocs.phaser.io/docs/3.70.0/Phaser.Types.Core.GameConfig\nconst config = {\n    type: phaser__WEBPACK_IMPORTED_MODULE_4__.AUTO,\n    width: 1080,\n    height: 1920,\n    parent: \"game-container\",\n    backgroundColor: 0x3a404d,\n    scene: [\n        _scenes_Boot__WEBPACK_IMPORTED_MODULE_0__.Boot,\n        _scenes_Preloader__WEBPACK_IMPORTED_MODULE_5__.Preloader,\n        _scenes_MainMenu__WEBPACK_IMPORTED_MODULE_3__.MainMenu,\n        _scenes_Game__WEBPACK_IMPORTED_MODULE_2__.Game,\n        _scenes_Battle__WEBPACK_IMPORTED_MODULE_6__.Battle,\n        _scenes_GameOver__WEBPACK_IMPORTED_MODULE_1__.GameOver\n    ],\n    scale: {\n        mode: Phaser.Scale.FIT,\n        autoCenter: Phaser.Scale.CENTER_BOTH\n    }\n};\nconst StartGame = (parent)=>{\n    return new phaser__WEBPACK_IMPORTED_MODULE_4__.Game({\n        ...config,\n        parent\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (StartGame);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9tYWluLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQUNRO0FBQ0k7QUFDSjtBQUNUO0FBQ1c7QUFDTjtBQUV6Qyx1REFBdUQ7QUFDdkQsc0VBQXNFO0FBQ3RFLE1BQU1RLFNBQXVDO0lBQ3pDQyxNQUFNSix3Q0FBSUE7SUFDVkssT0FBTztJQUNQQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsaUJBQWlCO0lBQ2pCQyxPQUFPO1FBQ0hkLDhDQUFJQTtRQUNKTSx3REFBU0E7UUFDVEYsc0RBQVFBO1FBQ1JELDhDQUFRQTtRQUNSSSxrREFBTUE7UUFDTk4sc0RBQVFBO0tBQ1g7SUFDRGMsT0FBTTtRQUNGQyxNQUFNQyxPQUFPQyxLQUFLLENBQUNDLEdBQUc7UUFDdEJDLFlBQVlILE9BQU9DLEtBQUssQ0FBQ0csV0FBVztJQUN4QztBQUNKO0FBRUEsTUFBTUMsWUFBWSxDQUFDVjtJQUVmLE9BQU8sSUFBSVYsd0NBQUlBLENBQUM7UUFBRSxHQUFHTSxNQUFNO1FBQUVJO0lBQU87QUFFeEM7QUFFQSwrREFBZVUsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9tYWluLnRzPzUwNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9vdCB9IGZyb20gJy4vc2NlbmVzL0Jvb3QnO1xuaW1wb3J0IHsgR2FtZU92ZXIgfSBmcm9tICcuL3NjZW5lcy9HYW1lT3Zlcic7XG5pbXBvcnQgeyBHYW1lIGFzIE1haW5HYW1lIH0gZnJvbSAnLi9zY2VuZXMvR2FtZSc7XG5pbXBvcnQgeyBNYWluTWVudSB9IGZyb20gJy4vc2NlbmVzL01haW5NZW51JztcbmltcG9ydCB7IEFVVE8sIEdhbWUgfSBmcm9tICdwaGFzZXInO1xuaW1wb3J0IHsgUHJlbG9hZGVyIH0gZnJvbSAnLi9zY2VuZXMvUHJlbG9hZGVyJztcbmltcG9ydCB7IEJhdHRsZSB9IGZyb20gJy4vc2NlbmVzL0JhdHRsZSc7XG5cbi8vICBGaW5kIG91dCBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBHYW1lIENvbmZpZyBhdDpcbi8vICBodHRwczovL25ld2RvY3MucGhhc2VyLmlvL2RvY3MvMy43MC4wL1BoYXNlci5UeXBlcy5Db3JlLkdhbWVDb25maWdcbmNvbnN0IGNvbmZpZzogUGhhc2VyLlR5cGVzLkNvcmUuR2FtZUNvbmZpZyA9IHtcbiAgICB0eXBlOiBBVVRPLFxuICAgIHdpZHRoOiAxMDgwLFxuICAgIGhlaWdodDogMTkyMCxcbiAgICBwYXJlbnQ6ICdnYW1lLWNvbnRhaW5lcicsXG4gICAgYmFja2dyb3VuZENvbG9yOiAweDNhNDA0ZCxcbiAgICBzY2VuZTogW1xuICAgICAgICBCb290LFxuICAgICAgICBQcmVsb2FkZXIsXG4gICAgICAgIE1haW5NZW51LFxuICAgICAgICBNYWluR2FtZSxcbiAgICAgICAgQmF0dGxlLFxuICAgICAgICBHYW1lT3ZlcixcbiAgICBdLFxuICAgIHNjYWxlOntcbiAgICAgICAgbW9kZTogUGhhc2VyLlNjYWxlLkZJVCxcbiAgICAgICAgYXV0b0NlbnRlcjogUGhhc2VyLlNjYWxlLkNFTlRFUl9CT1RIXG4gICAgfVxufTtcblxuY29uc3QgU3RhcnRHYW1lID0gKHBhcmVudDogc3RyaW5nKSA9PiB7XG5cbiAgICByZXR1cm4gbmV3IEdhbWUoeyAuLi5jb25maWcsIHBhcmVudCB9KTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBTdGFydEdhbWU7XG4iXSwibmFtZXMiOlsiQm9vdCIsIkdhbWVPdmVyIiwiR2FtZSIsIk1haW5HYW1lIiwiTWFpbk1lbnUiLCJBVVRPIiwiUHJlbG9hZGVyIiwiQmF0dGxlIiwiY29uZmlnIiwidHlwZSIsIndpZHRoIiwiaGVpZ2h0IiwicGFyZW50IiwiYmFja2dyb3VuZENvbG9yIiwic2NlbmUiLCJzY2FsZSIsIm1vZGUiLCJQaGFzZXIiLCJTY2FsZSIsIkZJVCIsImF1dG9DZW50ZXIiLCJDRU5URVJfQk9USCIsIlN0YXJ0R2FtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/main.ts\n"));

/***/ }),

/***/ "./src/game/scenes/Battle.ts":
/*!***********************************!*\
  !*** ./src/game/scenes/Battle.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Battle: function() { return /* binding */ Battle; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! phaser */ \"./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_components_RectButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/components/RectButton */ \"./src/lib/components/RectButton.ts\");\n/* harmony import */ var _components_GameManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/GameManager */ \"./src/game/components/GameManager.ts\");\n/* harmony import */ var _lib_components_DebugButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/components/DebugButton */ \"./src/lib/components/DebugButton.ts\");\n/* harmony import */ var _components_CardRepo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/CardRepo */ \"./src/game/components/CardRepo.ts\");\n/* harmony import */ var _components_Opponent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Opponent */ \"./src/game/components/Opponent.ts\");\n/* harmony import */ var _components_HealthBar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/HealthBar */ \"./src/game/components/HealthBar.ts\");\n/* harmony import */ var _components_Match__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/Match */ \"./src/game/components/Match.ts\");\n/* harmony import */ var _components_PlayerAttackBar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/PlayerAttackBar */ \"./src/game/components/PlayerAttackBar.ts\");\n/* harmony import */ var _modals_ModalQuestion__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../modals/ModalQuestion */ \"./src/game/modals/ModalQuestion.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass Battle extends phaser__WEBPACK_IMPORTED_MODULE_2__.Scene {\n    create(data) {\n        // Reset Data\n        this.isDone = false;\n        this.modalQuestion = new _modals_ModalQuestion__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this, \"ModalQuestion\");\n        this.modalQuestion.callbackCorrect = ()=>{\n            this.playerAttack(true);\n        };\n        this.modalQuestion.callbackWrong = ()=>{\n            this.playerAttack(false);\n        };\n        this.camera = this.cameras.main;\n        this.camera.setBackgroundColor(0xe6e6e6);\n        this.gameManager = new _components_GameManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this);\n        this.gameManager.loadData();\n        // Render Center Message\n        this.centerMessage = this.add.text(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight / 2 - 150, \"\", {\n            font: \"bold 60px Arial\",\n            color: \"#00000\",\n            align: \"center\"\n        }).setOrigin(0.5).setVisible(false);\n        // Get Opponent Data\n        let cardKey = this.gameManager.getCardKey(this.gameManager.battleSlotNumber);\n        let card = _components_CardRepo__WEBPACK_IMPORTED_MODULE_6__.CardRepo.findCard(cardKey);\n        if (card == undefined) {\n            console.log(\"Unable to find Card Data\");\n            this.simulateWin();\n            return;\n        }\n        // Render Opponent Sprite\n        this.opponent = new _components_Opponent__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, card);\n        // Render Player\n        this.player = this.add.sprite(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight - 200, \"player\");\n        this.playerHealthBar = new _components_HealthBar__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight - 350);\n        this.renderHealth();\n        // Render Match\n        this.match = new _components_Match__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight / 2 - 50);\n        this.match.callbackScore = (value)=>{\n            this.playerAttackBar.addValue(value);\n        };\n        // Render Player Attack Bar\n        this.playerAttackBar = new _components_PlayerAttackBar__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight - 450, 20);\n        this.playerAttackBar.callbackBulbButton = ()=>{\n            this.playerAttackBar.hideBulbButton();\n            this.modalQuestion.startQuestion();\n        };\n        this.events.addListener(\"player-update\", ()=>{\n            this.renderHealth();\n            this.checkWinLoseCondition();\n        });\n        this.events.addListener(\"opponent-update\", ()=>{\n            this.checkWinLoseCondition();\n        });\n        this.events.addListener(\"player-attack\", ()=>{\n            // Stop Opponent Bar\n            this.opponent.stopAttack();\n            // Stop & Hide Matching\n            this.match.hide();\n            // Show Attack Button\n            this.playerAttackBar.showBulbButton();\n        });\n        this.events.addListener(\"opponent-attack\", ()=>{\n            // Stop Opponent Bar\n            this.opponent.stopAttack();\n            // Stop Matching\n            this.match.hide();\n            this.opponentAttack();\n        });\n        this.events.addListener(\"continue\", ()=>{\n            this.centerMessage.setVisible(false);\n            if (!this.isDone) {\n                // Start Matching\n                this.match.show();\n                // Resume Opponent Bar\n                this.opponent.resumeAttack();\n            }\n        });\n        this.events.addListener(\"battle-end\", ()=>{\n            this.isDone = true;\n            this.match.hide();\n            this.opponent.stopAttack();\n        });\n        // Debug\n        let debugWin = new _lib_components_DebugButton__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, 150, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight - 100, \"Set Win\");\n        debugWin.scale = 0.5;\n        this.add.existing(debugWin);\n        debugWin.onPressed(()=>{\n            this.simulateWin();\n        });\n        let debugLose = new _lib_components_DebugButton__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, 150, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight - 200, \"Set Lose\");\n        debugLose.scale = 0.5;\n        this.add.existing(debugLose);\n        debugLose.onPressed(()=>{\n            this.simulateLose();\n        });\n        let debugAttack = new _lib_components_DebugButton__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth - 150, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight - 200, \"Attack\");\n        debugAttack.scale = 0.5;\n        this.add.existing(debugAttack);\n        debugAttack.onPressed(()=>{\n            this.playerAttack(true);\n        });\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"current-scene-ready\", this);\n    }\n    renderHealth() {\n        this.playerHealthBar.renderHealth(this.gameManager.currentHp, this.gameManager.maxHp);\n    }\n    playerAttack(isSuccess) {\n        this.centerMessage.setText(\"Player Attacking!\");\n        this.centerMessage.setVisible(true);\n        this.time.delayedCall(1000, ()=>{\n            if (isSuccess) {\n                this.centerMessage.setText(\"Mr. Worm HP -1\");\n                this.opponent.damage(1);\n            } else {\n                this.centerMessage.setText(\"Attack failed!!!\");\n            }\n        }, [\n            isSuccess\n        ], this);\n        //\n        this.time.delayedCall(2000, ()=>{\n            this.events.emit(\"continue\");\n        }, [], this);\n    }\n    opponentAttack() {\n        this.centerMessage.setText(\"Mr. Worm Attacking!\");\n        this.centerMessage.setVisible(true);\n        this.time.delayedCall(1000, ()=>{\n            this.centerMessage.setText(\"Player HP -1\");\n            //\n            this.gameManager.damage();\n            this.opponent.resetAttack();\n        }, [], this);\n        //\n        this.time.delayedCall(2000, ()=>{\n            this.events.emit(\"continue\");\n        }, [], this);\n    }\n    simulateWin() {\n        this.processWin();\n    }\n    simulateLose() {\n        this.gameManager.damage();\n        this.gameManager.damage();\n        this.gameManager.damage();\n    }\n    checkWinLoseCondition() {\n        if (!this.isDone) {\n            if (this.gameManager.currentHp <= 0) {\n                this.processLose();\n            }\n            if (this.opponent.currentHp <= 0) {\n                this.processWin();\n            }\n        }\n    }\n    processWin() {\n        this.events.emit(\"battle-end\");\n        this.time.delayedCall(1000, ()=>{\n            this.renderEnding(\"win\");\n        }, [], this);\n    }\n    processLose() {\n        this.events.emit(\"battle-end\");\n        this.time.delayedCall(1000, ()=>{\n            this.renderEnding(\"lose\");\n        }, [], this);\n    }\n    renderEnding(status) {\n        let text = \"Invalid Status...\";\n        if (status == \"win\") text = \"Mr. Worm fainted.\";\n        if (status == \"lose\") text = \"You fainted!\";\n        let endText = this.add.text(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight / 2 - 150, text, {\n            font: \"bold 60px Arial\",\n            color: \"#00000\",\n            align: \"center\"\n        });\n        endText.setOrigin(0.5, 0.5);\n        let button = new _lib_components_RectButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].screenHeight / 2 + 200, \"OK\");\n        button.onPressed(()=>{\n            if (status == \"win\") this.handleWin();\n            if (status == \"lose\") this.handleLose();\n        });\n    }\n    handleWin() {\n        this.clean();\n        this.gameManager.clearCardKey(this.gameManager.battleSlotNumber);\n        this.gameManager.setBattleSlotNumber(0);\n        this.gameManager.saveData();\n        this.scene.start(\"Game\", {\n            isContinue: true\n        });\n    }\n    handleLose() {\n        this.clean();\n        this.gameManager.clearData();\n        this.scene.start(\"GameOver\", {\n            status: this.gameManager.checkGameStatus()\n        });\n    }\n    clean() {\n        this.events.removeListener(\"player-update\");\n        this.events.removeListener(\"opponent-update\");\n        this.events.removeListener(\"player-attack\");\n        this.events.removeListener(\"opponent-attack\");\n        this.events.removeListener(\"continue\");\n        this.events.removeListener(\"battle-end\");\n        this.cameras.resetAll();\n        this.scene.remove(\"ModalQuestion\");\n    }\n    constructor(){\n        super(\"Battle\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/scenes/Battle.ts\n"));

/***/ })

});