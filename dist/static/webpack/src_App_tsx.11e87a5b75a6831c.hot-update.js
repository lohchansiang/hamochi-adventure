"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/HammerBar.ts":
/*!****************************************************!*\
  !*** ./src/game/components/CardMaker/HammerBar.ts ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HammerBar; }\n/* harmony export */ });\nclass HammerBar {\n    static preload(scene) {}\n    renderHammer() {\n        if (this.sprites && this.sprites.length > 0) {\n            this.sprites.forEach((h)=>{\n                h.destroy();\n            });\n        }\n        this.sprites = [];\n        const gap = 120;\n        const totalWidth = gap * (this.manager.maxFailChance - 1);\n        let startX = -totalWidth / 2;\n        let startY = 0;\n        for(var i = 0; i < this.manager.maxFailChance; i++){\n            if (i < this.manager.currentFailChance) {\n                let sprite = this.scene.add.sprite(startX + gap * i, startY, \"hammer\");\n                sprite.setDisplaySize(100, 100);\n                sprite.rotation = Phaser.Math.DegToRad(45);\n                this.sprites.push(sprite);\n                this.container.add(sprite);\n            } else {\n                let sprite = this.scene.add.sprite(startX + gap * i, startY, \"hammerBroke\");\n                let cross = this.scene.add.sprite(startX + gap * i, startY, \"iconCross\");\n                cross.setTint(0xff0000);\n                sprite.setDisplaySize(100, 100);\n                sprite.rotation = Phaser.Math.DegToRad(45);\n                cross.setDisplaySize(100, 100);\n                // cross.x += sprite.displayWidth/3\n                // cross.y += sprite.displayHeight/3\n                this.sprites.push(sprite);\n                this.container.add(sprite);\n                this.sprites.push(cross);\n                this.container.add(cross);\n            }\n        }\n    }\n    enter() {\n        // Prepare Tween\n        this.scene.tweens.add({\n            targets: this.container,\n            x: this.oriX,\n            ease: \"Power2\",\n            duration: 500\n        });\n    }\n    exit() {\n        // Prepare Tween\n        this.scene.tweens.add({\n            targets: this.container,\n            x: this.oriX - 1000,\n            ease: \"Power2\",\n            duration: 500\n        });\n    }\n    constructor(scene, x, y){\n        this.scene = scene;\n        this.manager = scene.manager;\n        this.oriX = x;\n        this.oriY = y;\n        this.container = scene.add.container(x, y);\n        this.container.x = -1000;\n        this.renderHammer();\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9IYW1tZXJCYXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUllLE1BQU1BO0lBRWpCLE9BQU9DLFFBQVNDLEtBQW1CLEVBQUUsQ0FFckM7SUFzQkFDLGVBQWM7UUFDVixJQUFJLElBQUksQ0FBQ0MsT0FBTyxJQUFJLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLEdBQUcsR0FBRztZQUN6QyxJQUFJLENBQUNELE9BQU8sQ0FBQ0UsT0FBTyxDQUFDLENBQUNDO2dCQUNsQkEsRUFBRUMsT0FBTztZQUNiO1FBQ0o7UUFFQSxJQUFJLENBQUNKLE9BQU8sR0FBRyxFQUFFO1FBRWpCLE1BQU1LLE1BQWE7UUFDbkIsTUFBTUMsYUFBb0JELE1BQU0sS0FBSSxDQUFDRSxPQUFPLENBQUNDLGFBQWEsR0FBQztRQUMzRCxJQUFJQyxTQUFnQixDQUFDSCxhQUFXO1FBQ2hDLElBQUlJLFNBQWdCO1FBQ3BCLElBQUksSUFBSUMsSUFBRSxHQUFFQSxJQUFFLElBQUksQ0FBQ0osT0FBTyxDQUFDQyxhQUFhLEVBQUNHLElBQUk7WUFDekMsSUFBSUEsSUFBSSxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssaUJBQWlCLEVBQUU7Z0JBQ3BDLElBQUlDLFNBQTRCLElBQUksQ0FBQ2YsS0FBSyxDQUFDZ0IsR0FBRyxDQUFDRCxNQUFNLENBQUNKLFNBQVFKLE1BQUlNLEdBQUdELFFBQU87Z0JBRTVFRyxPQUFPRSxjQUFjLENBQUMsS0FBSTtnQkFDMUJGLE9BQU9HLFFBQVEsR0FBR0MsT0FBT0MsSUFBSSxDQUFDQyxRQUFRLENBQUM7Z0JBRXZDLElBQUksQ0FBQ25CLE9BQU8sQ0FBQ29CLElBQUksQ0FBQ1A7Z0JBQ2xCLElBQUksQ0FBQ1EsU0FBUyxDQUFDUCxHQUFHLENBQUNEO1lBQ3ZCLE9BQUs7Z0JBQ0QsSUFBSUEsU0FBNEIsSUFBSSxDQUFDZixLQUFLLENBQUNnQixHQUFHLENBQUNELE1BQU0sQ0FBQ0osU0FBUUosTUFBSU0sR0FBR0QsUUFBTztnQkFDNUUsSUFBSVksUUFBNEIsSUFBSSxDQUFDeEIsS0FBSyxDQUFDZ0IsR0FBRyxDQUFDRCxNQUFNLENBQUNKLFNBQVFKLE1BQUlNLEdBQUdELFFBQU87Z0JBQzVFWSxNQUFNQyxPQUFPLENBQUM7Z0JBRWRWLE9BQU9FLGNBQWMsQ0FBQyxLQUFJO2dCQUMxQkYsT0FBT0csUUFBUSxHQUFHQyxPQUFPQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztnQkFDdkNHLE1BQU1QLGNBQWMsQ0FBQyxLQUFJO2dCQUN6QixtQ0FBbUM7Z0JBQ25DLG9DQUFvQztnQkFFcEMsSUFBSSxDQUFDZixPQUFPLENBQUNvQixJQUFJLENBQUNQO2dCQUNsQixJQUFJLENBQUNRLFNBQVMsQ0FBQ1AsR0FBRyxDQUFDRDtnQkFFbkIsSUFBSSxDQUFDYixPQUFPLENBQUNvQixJQUFJLENBQUNFO2dCQUNsQixJQUFJLENBQUNELFNBQVMsQ0FBQ1AsR0FBRyxDQUFDUTtZQUN2QjtRQUNKO0lBQ0o7SUFFQUUsUUFBTztRQUNILGdCQUFnQjtRQUNoQixJQUFJLENBQUMxQixLQUFLLENBQUMyQixNQUFNLENBQUNYLEdBQUcsQ0FBQztZQUNsQlksU0FBUyxJQUFJLENBQUNMLFNBQVM7WUFDdkJNLEdBQUcsSUFBSSxDQUFDQyxJQUFJO1lBQ1pDLE1BQU07WUFDTkMsVUFBVTtRQUNkO0lBQ0o7SUFFQUMsT0FBTTtRQUNGLGdCQUFnQjtRQUNoQixJQUFJLENBQUNqQyxLQUFLLENBQUMyQixNQUFNLENBQUNYLEdBQUcsQ0FBQztZQUNsQlksU0FBUyxJQUFJLENBQUNMLFNBQVM7WUFDdkJNLEdBQUcsSUFBSSxDQUFDQyxJQUFJLEdBQUM7WUFDYkMsTUFBTTtZQUNOQyxVQUFVO1FBQ2Q7SUFDSjtJQXZFQUUsWUFBYWxDLEtBQWUsRUFBRTZCLENBQVEsRUFBRU0sQ0FBUSxDQUFFO1FBQzlDLElBQUksQ0FBQ25DLEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNTLE9BQU8sR0FBR1QsTUFBTVMsT0FBTztRQUM1QixJQUFJLENBQUNxQixJQUFJLEdBQUdEO1FBQ1osSUFBSSxDQUFDTyxJQUFJLEdBQUdEO1FBRVosSUFBSSxDQUFDWixTQUFTLEdBQUd2QixNQUFNZ0IsR0FBRyxDQUFDTyxTQUFTLENBQUNNLEdBQUVNO1FBQ3ZDLElBQUksQ0FBQ1osU0FBUyxDQUFDTSxDQUFDLEdBQUcsQ0FBQztRQUNwQixJQUFJLENBQUM1QixZQUFZO0lBQ3JCO0FBK0RKO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2dhbWUvY29tcG9uZW50cy9DYXJkTWFrZXIvSGFtbWVyQmFyLnRzPzQyMmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FyZE1ha2VyIH0gZnJvbSBcIkAvZ2FtZS9zY2VuZXMvQ2FyZE1ha2VyXCJcbmltcG9ydCB7IEdhbWVPYmplY3RzIH0gZnJvbSBcInBoYXNlclwiXG5pbXBvcnQgQ2FyZE1ha2VyTWFuYWdlciBmcm9tIFwiLi9DYXJkTWFrZXJNYW5hZ2VyXCJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFtbWVyQmFye1xuXG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBQaGFzZXIuU2NlbmUgKXtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgc2NlbmU6IENhcmRNYWtlclxuICAgIG1hbmFnZXI6IENhcmRNYWtlck1hbmFnZXJcbiAgICAvL1xuICAgIHNwcml0ZXM6IEdhbWVPYmplY3RzLlNwcml0ZVtdIFxuICAgIG9yaVg6IG51bWJlclxuICAgIG9yaVk6IG51bWJlclxuICAgIC8vXG4gICAgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBcbiAgICBjb25zdHJ1Y3Rvciggc2NlbmU6Q2FyZE1ha2VyLCB4Om51bWJlciwgeTpudW1iZXIgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMubWFuYWdlciA9IHNjZW5lLm1hbmFnZXJcbiAgICAgICAgdGhpcy5vcmlYID0geFxuICAgICAgICB0aGlzLm9yaVkgPSB5XG5cbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBzY2VuZS5hZGQuY29udGFpbmVyKHgseSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnggPSAtMTAwMDtcbiAgICAgICAgdGhpcy5yZW5kZXJIYW1tZXIoKTtcbiAgICB9XG5cbiAgICByZW5kZXJIYW1tZXIoKXtcbiAgICAgICAgaWYoIHRoaXMuc3ByaXRlcyAmJiB0aGlzLnNwcml0ZXMubGVuZ3RoID4gMCApe1xuICAgICAgICAgICAgdGhpcy5zcHJpdGVzLmZvckVhY2goKGg6R2FtZU9iamVjdHMuU3ByaXRlKT0+e1xuICAgICAgICAgICAgICAgIGguZGVzdHJveSgpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zcHJpdGVzID0gW11cblxuICAgICAgICBjb25zdCBnYXA6bnVtYmVyID0gMTIwO1xuICAgICAgICBjb25zdCB0b3RhbFdpZHRoOm51bWJlciA9IGdhcCogKHRoaXMubWFuYWdlci5tYXhGYWlsQ2hhbmNlLTEpXG4gICAgICAgIGxldCBzdGFydFg6bnVtYmVyID0gLXRvdGFsV2lkdGgvMjsgXG4gICAgICAgIGxldCBzdGFydFk6bnVtYmVyID0gMDsgXG4gICAgICAgIGZvcih2YXIgaT0wO2k8dGhpcy5tYW5hZ2VyLm1heEZhaWxDaGFuY2U7aSsrKXtcbiAgICAgICAgICAgIGlmKCBpIDwgdGhpcy5tYW5hZ2VyLmN1cnJlbnRGYWlsQ2hhbmNlICl7XG4gICAgICAgICAgICAgICAgbGV0IHNwcml0ZTpHYW1lT2JqZWN0cy5TcHJpdGUgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoc3RhcnRYKyhnYXAqaSksc3RhcnRZLCdoYW1tZXInKTtcblxuICAgICAgICAgICAgICAgIHNwcml0ZS5zZXREaXNwbGF5U2l6ZSgxMDAsMTAwKTtcbiAgICAgICAgICAgICAgICBzcHJpdGUucm90YXRpb24gPSBQaGFzZXIuTWF0aC5EZWdUb1JhZCg0NSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnNwcml0ZXMucHVzaChzcHJpdGUpXG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHNwcml0ZSlcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIGxldCBzcHJpdGU6R2FtZU9iamVjdHMuU3ByaXRlID0gdGhpcy5zY2VuZS5hZGQuc3ByaXRlKHN0YXJ0WCsoZ2FwKmkpLHN0YXJ0WSwnaGFtbWVyQnJva2UnKTtcbiAgICAgICAgICAgICAgICBsZXQgY3Jvc3M6IEdhbWVPYmplY3RzLlNwcml0ZSA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZShzdGFydFgrKGdhcCppKSxzdGFydFksJ2ljb25Dcm9zcycpO1xuICAgICAgICAgICAgICAgIGNyb3NzLnNldFRpbnQoMHhmZjAwMDApO1xuXG4gICAgICAgICAgICAgICAgc3ByaXRlLnNldERpc3BsYXlTaXplKDEwMCwxMDApO1xuICAgICAgICAgICAgICAgIHNwcml0ZS5yb3RhdGlvbiA9IFBoYXNlci5NYXRoLkRlZ1RvUmFkKDQ1KTtcbiAgICAgICAgICAgICAgICBjcm9zcy5zZXREaXNwbGF5U2l6ZSgxMDAsMTAwKTtcbiAgICAgICAgICAgICAgICAvLyBjcm9zcy54ICs9IHNwcml0ZS5kaXNwbGF5V2lkdGgvM1xuICAgICAgICAgICAgICAgIC8vIGNyb3NzLnkgKz0gc3ByaXRlLmRpc3BsYXlIZWlnaHQvM1xuXG4gICAgICAgICAgICAgICAgdGhpcy5zcHJpdGVzLnB1c2goc3ByaXRlKVxuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmFkZChzcHJpdGUpXG5cbiAgICAgICAgICAgICAgICB0aGlzLnNwcml0ZXMucHVzaChjcm9zcylcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQoY3Jvc3MpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBlbnRlcigpe1xuICAgICAgICAvLyBQcmVwYXJlIFR3ZWVuXG4gICAgICAgIHRoaXMuc2NlbmUudHdlZW5zLmFkZCh7XG4gICAgICAgICAgICB0YXJnZXRzOiB0aGlzLmNvbnRhaW5lcixcbiAgICAgICAgICAgIHg6IHRoaXMub3JpWCxcbiAgICAgICAgICAgIGVhc2U6ICdQb3dlcjInLFxuICAgICAgICAgICAgZHVyYXRpb246IDUwMCxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZXhpdCgpe1xuICAgICAgICAvLyBQcmVwYXJlIFR3ZWVuXG4gICAgICAgIHRoaXMuc2NlbmUudHdlZW5zLmFkZCh7XG4gICAgICAgICAgICB0YXJnZXRzOiB0aGlzLmNvbnRhaW5lcixcbiAgICAgICAgICAgIHg6IHRoaXMub3JpWC0xMDAwLFxuICAgICAgICAgICAgZWFzZTogJ1Bvd2VyMicsXG4gICAgICAgICAgICBkdXJhdGlvbjogNTAwXG4gICAgICAgIH0pO1xuICAgIH1cbn0iXSwibmFtZXMiOlsiSGFtbWVyQmFyIiwicHJlbG9hZCIsInNjZW5lIiwicmVuZGVySGFtbWVyIiwic3ByaXRlcyIsImxlbmd0aCIsImZvckVhY2giLCJoIiwiZGVzdHJveSIsImdhcCIsInRvdGFsV2lkdGgiLCJtYW5hZ2VyIiwibWF4RmFpbENoYW5jZSIsInN0YXJ0WCIsInN0YXJ0WSIsImkiLCJjdXJyZW50RmFpbENoYW5jZSIsInNwcml0ZSIsImFkZCIsInNldERpc3BsYXlTaXplIiwicm90YXRpb24iLCJQaGFzZXIiLCJNYXRoIiwiRGVnVG9SYWQiLCJwdXNoIiwiY29udGFpbmVyIiwiY3Jvc3MiLCJzZXRUaW50IiwiZW50ZXIiLCJ0d2VlbnMiLCJ0YXJnZXRzIiwieCIsIm9yaVgiLCJlYXNlIiwiZHVyYXRpb24iLCJleGl0IiwiY29uc3RydWN0b3IiLCJ5Iiwib3JpWSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/HammerBar.ts\n"));

/***/ })

});