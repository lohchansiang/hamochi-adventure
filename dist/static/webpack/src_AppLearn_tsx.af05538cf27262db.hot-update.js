"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppLearn_tsx",{

/***/ "./src/learn/components/AppleGroup.ts":
/*!********************************************!*\
  !*** ./src/learn/components/AppleGroup.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AppleGroup; }\n/* harmony export */ });\nclass AppleGroup {\n    static preload(scene) {\n        scene.load.setPath(\"assets\");\n        scene.load.image(\"apple\", \"/learn/apple.png\");\n    }\n    renderApples(total) {\n        this.appleTexts.forEach((text)=>{\n            text.destroy();\n        });\n        this.apples.forEach((apple)=>{\n            apple.destroy();\n        });\n        //\n        this.apples = [];\n        this.appleTexts = [];\n        //\n        for(let index = 0; index < this.total; index++){\n            let position = this.getPosition(index + 1, this.total);\n            let apple = this.scene.add.sprite(position.x, position.y, \"apple\");\n            apple.setDisplaySize(120, 120);\n            this.apples.push(apple);\n            let text = this.scene.add.text(position.x, position.y + 20, (index + 1).toString(), {\n                fontFamily: \"Arial Black\",\n                fontSize: 50,\n                color: \"##000\",\n                // stroke: '#000000', strokeThickness: 8,\n                align: \"center\"\n            }).setOrigin(0.5);\n            text.setVisible(false);\n            this.appleTexts.push(text);\n            this.container.add(apple);\n            this.container.add(text);\n        }\n    }\n    // Handle 1 to 10 only \n    getPosition(current, total) {\n        let position = new Phaser.Math.Vector2(0, 0);\n        let verticalGap = 130;\n        switch(total){\n            case 1:\n                break;\n            case 2:\n                if (current == 1) position = new Phaser.Math.Vector2(-80, 0);\n                if (current == 2) position = new Phaser.Math.Vector2(80, 0);\n                break;\n            case 3:\n                if (current == 1) position = new Phaser.Math.Vector2(0, -verticalGap);\n                if (current == 2) position = new Phaser.Math.Vector2(-80, 0);\n                if (current == 3) position = new Phaser.Math.Vector2(80, 0);\n                break;\n            case 4:\n                if (current == 1) position = new Phaser.Math.Vector2(-80, -verticalGap);\n                if (current == 2) position = new Phaser.Math.Vector2(80, -verticalGap);\n                if (current == 3) position = new Phaser.Math.Vector2(-80, 0);\n                if (current == 4) position = new Phaser.Math.Vector2(80, 0);\n                break;\n            case 5:\n                if (current == 1) position = new Phaser.Math.Vector2(-80, -verticalGap);\n                if (current == 2) position = new Phaser.Math.Vector2(80, -verticalGap);\n                if (current == 3) position = new Phaser.Math.Vector2(-140, 0);\n                if (current == 4) position = new Phaser.Math.Vector2(0, 0);\n                if (current == 5) position = new Phaser.Math.Vector2(140, 0);\n                break;\n            case 6:\n                if (current == 1) position = new Phaser.Math.Vector2(-140, -verticalGap);\n                if (current == 2) position = new Phaser.Math.Vector2(0, -verticalGap);\n                if (current == 3) position = new Phaser.Math.Vector2(140, -verticalGap);\n                if (current == 4) position = new Phaser.Math.Vector2(-140, 0);\n                if (current == 5) position = new Phaser.Math.Vector2(0, 0);\n                if (current == 6) position = new Phaser.Math.Vector2(140, 0);\n                break;\n            case 7:\n                if (current == 1) position = new Phaser.Math.Vector2(-80, -verticalGap * 2);\n                if (current == 2) position = new Phaser.Math.Vector2(80, -verticalGap * 2);\n                if (current == 3) position = new Phaser.Math.Vector2(-80, -verticalGap);\n                if (current == 4) position = new Phaser.Math.Vector2(80, -verticalGap);\n                if (current == 5) position = new Phaser.Math.Vector2(-140, 0);\n                if (current == 6) position = new Phaser.Math.Vector2(0, 0);\n                if (current == 7) position = new Phaser.Math.Vector2(140, 0);\n                break;\n            case 8:\n                if (current == 1) position = new Phaser.Math.Vector2(-80, -verticalGap * 2);\n                if (current == 2) position = new Phaser.Math.Vector2(80, -verticalGap * 2);\n                if (current == 3) position = new Phaser.Math.Vector2(-140, -verticalGap);\n                if (current == 4) position = new Phaser.Math.Vector2(0, -verticalGap);\n                if (current == 5) position = new Phaser.Math.Vector2(140, -verticalGap);\n                if (current == 6) position = new Phaser.Math.Vector2(-140, 0);\n                if (current == 7) position = new Phaser.Math.Vector2(0, 0);\n                if (current == 8) position = new Phaser.Math.Vector2(140, 0);\n                break;\n            case 9:\n                if (current == 1) position = new Phaser.Math.Vector2(-140, -verticalGap * 2);\n                if (current == 2) position = new Phaser.Math.Vector2(0, -verticalGap * 2);\n                if (current == 3) position = new Phaser.Math.Vector2(140, -verticalGap * 2);\n                if (current == 4) position = new Phaser.Math.Vector2(-140, -verticalGap);\n                if (current == 5) position = new Phaser.Math.Vector2(0, -verticalGap);\n                if (current == 6) position = new Phaser.Math.Vector2(140, -verticalGap);\n                if (current == 7) position = new Phaser.Math.Vector2(-140, 0);\n                if (current == 8) position = new Phaser.Math.Vector2(0, 0);\n                if (current == 9) position = new Phaser.Math.Vector2(140, 0);\n                break;\n            case 10:\n                if (current == 1) position = new Phaser.Math.Vector2(0, -verticalGap * 3);\n                if (current == 2) position = new Phaser.Math.Vector2(-140, -verticalGap * 2);\n                if (current == 3) position = new Phaser.Math.Vector2(0, -verticalGap * 2);\n                if (current == 4) position = new Phaser.Math.Vector2(140, -verticalGap * 2);\n                if (current == 5) position = new Phaser.Math.Vector2(-140, -verticalGap);\n                if (current == 6) position = new Phaser.Math.Vector2(0, -verticalGap);\n                if (current == 7) position = new Phaser.Math.Vector2(140, -verticalGap);\n                if (current == 8) position = new Phaser.Math.Vector2(-140, 0);\n                if (current == 9) position = new Phaser.Math.Vector2(0, 0);\n                if (current == 10) position = new Phaser.Math.Vector2(140, 0);\n                break;\n            default:\n                break;\n        }\n        return position;\n    }\n    getContainer() {\n        return this.container;\n    }\n    showHint(count) {\n        if (count <= this.total) {\n            this.appleTexts[count - 1].setVisible(true);\n        }\n    }\n    showHints() {\n        this.appleTexts.forEach((text)=>{\n            text.setVisible(true);\n        });\n    }\n    hide() {\n        this.container.setVisible(false);\n    }\n    show() {\n        this.container.setVisible(true);\n    }\n    showByAnim(offset) {\n        this.container.setScale(0);\n        this.container.y += offset;\n        this.container.setVisible(true);\n        this.scene.tweens.add({\n            targets: this.container,\n            y: this.originY,\n            scale: 1,\n            duration: 500,\n            ease: \"Cubic\"\n        });\n    }\n    constructor(scene, x, y, total){\n        this.scene = scene;\n        this.originY = y;\n        this.total = 0;\n        this.appleTexts = [];\n        this.apples = [];\n        this.container = this.scene.add.container(x, y);\n        this.renderApples();\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/learn/components/AppleGroup.ts\n"));

/***/ })

});