"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/lib/GameLib.ts":
/*!****************************!*\
  !*** ./src/lib/GameLib.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nclass GameLib {\n    static shuffle(array) {\n        let currentIndex = array.length;\n        // While there remain elements to shuffle...\n        while(currentIndex != 0){\n            // Pick a remaining element...\n            let randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n            // And swap it with the current element.\n            [array[currentIndex], array[randomIndex]] = [\n                array[randomIndex],\n                array[currentIndex]\n            ];\n        }\n        return array;\n    }\n    static getRandomNumbers(min, max, count) {\n        let exclude = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];\n        // Create an array with all numbers in the range\n        let numbers = Array.from({\n            length: max - min + 1\n        }, (_, i)=>i + min);\n        // Remove the excluded numbers from the array\n        numbers = numbers.filter((num)=>!exclude.includes(num));\n        // Check if we have enough numbers left to satisfy the count\n        if (count > numbers.length) {\n            throw new Error(\"Not enough numbers available to generate the requested count.\");\n        }\n        // Shuffle the array using the Fisher-Yates algorithm\n        for(let i = numbers.length - 1; i > 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [numbers[i], numbers[j]] = [\n                numbers[j],\n                numbers[i]\n            ];\n        }\n        // Return the first 'count' elements of the shuffled array\n        return numbers.slice(0, count);\n    }\n    constructor(){\n    //\n    }\n}\nGameLib.screenWidth = 1080;\nGameLib.screenHeight = 1920;\nGameLib.colorPanelBg = 0x9D7956;\nGameLib.colorPanelBgDark = 0x563F35;\nGameLib.colorPanelButtonLight = 0xF2E6BF;\nGameLib.colorPanelButtonTextLight = 0xE1AF3D;\nGameLib.colorPanelButtonDark = 0xCAB88D;\nGameLib.colorPanelButtonTextDark = 0x9E7856;\nGameLib.colorSuccess = 0x4BAE4F;\nGameLib.colorFailed = 0xE04F5F;\nGameLib.colorYellow = 0xFFF600;\nGameLib.textDefaultStyle = {\n    fontSize: \"40px\",\n    fontFamily: \"Arial\",\n    color: \"#000000\"\n};\nGameLib.midX = GameLib.screenWidth / 2;\nGameLib.midY = GameLib.screenHeight / 2;\nGameLib.quaterX = GameLib.screenWidth * 0.25;\nGameLib.quaterY = GameLib.screenHeight * 0.25;\nGameLib.quater3X = GameLib.screenWidth * 0.75;\nGameLib.quater3Y = GameLib.screenHeight * 0.75;\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameLib);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL0dhbWVMaWIudHMiLCJtYXBwaW5ncyI6IjtBQUNBLE1BQU1BO0lBaUNGLE9BQU9DLFFBQVFDLEtBQWlCLEVBQWE7UUFDekMsSUFBSUMsZUFBZUQsTUFBTUUsTUFBTTtRQUUvQiw0Q0FBNEM7UUFDNUMsTUFBT0QsZ0JBQWdCLEVBQUc7WUFFeEIsOEJBQThCO1lBQzlCLElBQUlFLGNBQWNDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLTDtZQUM3Q0E7WUFFQSx3Q0FBd0M7WUFDeEMsQ0FBQ0QsS0FBSyxDQUFDQyxhQUFhLEVBQUVELEtBQUssQ0FBQ0csWUFBWSxDQUFDLEdBQUc7Z0JBQzFDSCxLQUFLLENBQUNHLFlBQVk7Z0JBQUVILEtBQUssQ0FBQ0MsYUFBYTthQUFDO1FBQzVDO1FBQ0EsT0FBT0Q7SUFDWDtJQUVBLE9BQU9PLGlCQUFpQkMsR0FBVSxFQUFFQyxHQUFVLEVBQUVDLEtBQVksRUFBeUI7WUFBdkJDLFVBQUFBLGlFQUFtQixFQUFFO1FBQy9FLGdEQUFnRDtRQUNoRCxJQUFJQyxVQUFVQyxNQUFNQyxJQUFJLENBQUM7WUFBRVosUUFBUU8sTUFBTUQsTUFBTTtRQUFFLEdBQUcsQ0FBQ08sR0FBR0MsSUFBTUEsSUFBSVI7UUFFbEUsNkNBQTZDO1FBQzdDSSxVQUFVQSxRQUFRSyxNQUFNLENBQUNDLENBQUFBLE1BQU8sQ0FBQ1AsUUFBUVEsUUFBUSxDQUFDRDtRQUVsRCw0REFBNEQ7UUFDNUQsSUFBSVIsUUFBUUUsUUFBUVYsTUFBTSxFQUFFO1lBQ3hCLE1BQU0sSUFBSWtCLE1BQU07UUFDcEI7UUFFQSxxREFBcUQ7UUFDckQsSUFBSyxJQUFJSixJQUFJSixRQUFRVixNQUFNLEdBQUcsR0FBR2MsSUFBSSxHQUFHQSxJQUFLO1lBQ3pDLE1BQU1LLElBQUlqQixLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBTVUsQ0FBQUEsSUFBSTtZQUMxQyxDQUFDSixPQUFPLENBQUNJLEVBQUUsRUFBRUosT0FBTyxDQUFDUyxFQUFFLENBQUMsR0FBRztnQkFBQ1QsT0FBTyxDQUFDUyxFQUFFO2dCQUFFVCxPQUFPLENBQUNJLEVBQUU7YUFBQztRQUN2RDtRQUVBLDBEQUEwRDtRQUMxRCxPQUFPSixRQUFRVSxLQUFLLENBQUMsR0FBR1o7SUFDNUI7SUFqREFhLGFBQ0E7SUFDSSxFQUFFO0lBQ047QUErQ0o7QUF2RU16QixRQUVLMEIsY0FBdUI7QUFGNUIxQixRQUdLMkIsZUFBd0I7QUFIN0IzQixRQUtLNEIsZUFBdUI7QUFMNUI1QixRQU1LNkIsbUJBQTJCO0FBTmhDN0IsUUFPSzhCLHdCQUFnQztBQVByQzlCLFFBUUsrQiw0QkFBb0M7QUFSekMvQixRQVNLZ0MsdUJBQStCO0FBVHBDaEMsUUFVS2lDLDJCQUFtQztBQVZ4Q2pDLFFBV0trQyxlQUF1QjtBQVg1QmxDLFFBWUttQyxjQUFzQjtBQVozQm5DLFFBYUtvQyxjQUFzQjtBQWIzQnBDLFFBZUtxQyxtQkFBMkI7SUFDOUJDLFVBQVU7SUFDVkMsWUFBWTtJQUNaQyxPQUFPO0FBQ1g7QUFuQkV4QyxRQTBCS3lDLE9BQU96QyxRQUFRMEIsV0FBVyxHQUFDO0FBMUJoQzFCLFFBMkJLMEMsT0FBTzFDLFFBQVEyQixZQUFZLEdBQUM7QUEzQmpDM0IsUUE0QksyQyxVQUFVM0MsUUFBUTBCLFdBQVcsR0FBQztBQTVCbkMxQixRQTZCSzRDLFVBQVU1QyxRQUFRMkIsWUFBWSxHQUFDO0FBN0JwQzNCLFFBOEJLNkMsV0FBVzdDLFFBQVEwQixXQUFXLEdBQUM7QUE5QnBDMUIsUUErQks4QyxXQUFXOUMsUUFBUTJCLFlBQVksR0FBQztBQTBDM0MsK0RBQWUzQixPQUFPQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvR2FtZUxpYi50cz9lMjAwIl0sInNvdXJjZXNDb250ZW50IjpbIlxuY2xhc3MgR2FtZUxpYlxue1xuICAgIHN0YXRpYyBzY3JlZW5XaWR0aDogaW50ZWdlciA9IDEwODA7XG4gICAgc3RhdGljIHNjcmVlbkhlaWdodDogaW50ZWdlciA9IDE5MjA7XG5cbiAgICBzdGF0aWMgY29sb3JQYW5lbEJnOiBudW1iZXIgPSAweDlENzk1NjtcbiAgICBzdGF0aWMgY29sb3JQYW5lbEJnRGFyazogbnVtYmVyID0gMHg1NjNGMzU7XG4gICAgc3RhdGljIGNvbG9yUGFuZWxCdXR0b25MaWdodDogbnVtYmVyID0gMHhGMkU2QkZcbiAgICBzdGF0aWMgY29sb3JQYW5lbEJ1dHRvblRleHRMaWdodDogbnVtYmVyID0gMHhFMUFGM0RcbiAgICBzdGF0aWMgY29sb3JQYW5lbEJ1dHRvbkRhcms6IG51bWJlciA9IDB4Q0FCODhEXG4gICAgc3RhdGljIGNvbG9yUGFuZWxCdXR0b25UZXh0RGFyazogbnVtYmVyID0gMHg5RTc4NTZcbiAgICBzdGF0aWMgY29sb3JTdWNjZXNzOiBudW1iZXIgPSAweDRCQUU0RlxuICAgIHN0YXRpYyBjb2xvckZhaWxlZDogbnVtYmVyID0gMHhFMDRGNUZcbiAgICBzdGF0aWMgY29sb3JZZWxsb3c6IG51bWJlciA9IDB4RkZGNjAwXG5cbiAgICBzdGF0aWMgdGV4dERlZmF1bHRTdHlsZTogT2JqZWN0ID0ge1xuICAgICAgICBmb250U2l6ZTogJzQwcHgnLFxuICAgICAgICBmb250RmFtaWx5OiAnQXJpYWwnLFxuICAgICAgICBjb2xvcjogJyMwMDAwMDAnLFxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yICgpXG4gICAge1xuICAgICAgICAvL1xuICAgIH1cbiAgICBcbiAgICBzdGF0aWMgbWlkWCA9IEdhbWVMaWIuc2NyZWVuV2lkdGgvMjsgXG4gICAgc3RhdGljIG1pZFkgPSBHYW1lTGliLnNjcmVlbkhlaWdodC8yOyBcbiAgICBzdGF0aWMgcXVhdGVyWCA9IEdhbWVMaWIuc2NyZWVuV2lkdGgqMC4yNTsgXG4gICAgc3RhdGljIHF1YXRlclkgPSBHYW1lTGliLnNjcmVlbkhlaWdodCowLjI1OyBcbiAgICBzdGF0aWMgcXVhdGVyM1ggPSBHYW1lTGliLnNjcmVlbldpZHRoKjAuNzU7IFxuICAgIHN0YXRpYyBxdWF0ZXIzWSA9IEdhbWVMaWIuc2NyZWVuSGVpZ2h0KjAuNzU7IFxuXG4gICAgc3RhdGljIHNodWZmbGUoYXJyYXk6IEFycmF5PGFueT4pOkFycmF5PGFueT4ge1xuICAgICAgICBsZXQgY3VycmVudEluZGV4ID0gYXJyYXkubGVuZ3RoO1xuICAgICAgXG4gICAgICAgIC8vIFdoaWxlIHRoZXJlIHJlbWFpbiBlbGVtZW50cyB0byBzaHVmZmxlLi4uXG4gICAgICAgIHdoaWxlIChjdXJyZW50SW5kZXggIT0gMCkge1xuICAgICAgXG4gICAgICAgICAgLy8gUGljayBhIHJlbWFpbmluZyBlbGVtZW50Li4uXG4gICAgICAgICAgbGV0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY3VycmVudEluZGV4KTtcbiAgICAgICAgICBjdXJyZW50SW5kZXgtLTtcbiAgICAgIFxuICAgICAgICAgIC8vIEFuZCBzd2FwIGl0IHdpdGggdGhlIGN1cnJlbnQgZWxlbWVudC5cbiAgICAgICAgICBbYXJyYXlbY3VycmVudEluZGV4XSwgYXJyYXlbcmFuZG9tSW5kZXhdXSA9IFtcbiAgICAgICAgICAgIGFycmF5W3JhbmRvbUluZGV4XSwgYXJyYXlbY3VycmVudEluZGV4XV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXRSYW5kb21OdW1iZXJzKG1pbjpudW1iZXIsIG1heDpudW1iZXIsIGNvdW50Om51bWJlciwgZXhjbHVkZTpudW1iZXJbXSA9IFtdKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhbiBhcnJheSB3aXRoIGFsbCBudW1iZXJzIGluIHRoZSByYW5nZVxuICAgICAgICBsZXQgbnVtYmVycyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IG1heCAtIG1pbiArIDEgfSwgKF8sIGkpID0+IGkgKyBtaW4pO1xuICAgIFxuICAgICAgICAvLyBSZW1vdmUgdGhlIGV4Y2x1ZGVkIG51bWJlcnMgZnJvbSB0aGUgYXJyYXlcbiAgICAgICAgbnVtYmVycyA9IG51bWJlcnMuZmlsdGVyKG51bSA9PiAhZXhjbHVkZS5pbmNsdWRlcyhudW0pKTtcbiAgICBcbiAgICAgICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggbnVtYmVycyBsZWZ0IHRvIHNhdGlzZnkgdGhlIGNvdW50XG4gICAgICAgIGlmIChjb3VudCA+IG51bWJlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgZW5vdWdoIG51bWJlcnMgYXZhaWxhYmxlIHRvIGdlbmVyYXRlIHRoZSByZXF1ZXN0ZWQgY291bnQuXCIpO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC8vIFNodWZmbGUgdGhlIGFycmF5IHVzaW5nIHRoZSBGaXNoZXItWWF0ZXMgYWxnb3JpdGhtXG4gICAgICAgIGZvciAobGV0IGkgPSBudW1iZXJzLmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHtcbiAgICAgICAgICAgIGNvbnN0IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKTtcbiAgICAgICAgICAgIFtudW1iZXJzW2ldLCBudW1iZXJzW2pdXSA9IFtudW1iZXJzW2pdLCBudW1iZXJzW2ldXTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAvLyBSZXR1cm4gdGhlIGZpcnN0ICdjb3VudCcgZWxlbWVudHMgb2YgdGhlIHNodWZmbGVkIGFycmF5XG4gICAgICAgIHJldHVybiBudW1iZXJzLnNsaWNlKDAsIGNvdW50KTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdhbWVMaWJcblxuIl0sIm5hbWVzIjpbIkdhbWVMaWIiLCJzaHVmZmxlIiwiYXJyYXkiLCJjdXJyZW50SW5kZXgiLCJsZW5ndGgiLCJyYW5kb21JbmRleCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImdldFJhbmRvbU51bWJlcnMiLCJtaW4iLCJtYXgiLCJjb3VudCIsImV4Y2x1ZGUiLCJudW1iZXJzIiwiQXJyYXkiLCJmcm9tIiwiXyIsImkiLCJmaWx0ZXIiLCJudW0iLCJpbmNsdWRlcyIsIkVycm9yIiwiaiIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJzY3JlZW5XaWR0aCIsInNjcmVlbkhlaWdodCIsImNvbG9yUGFuZWxCZyIsImNvbG9yUGFuZWxCZ0RhcmsiLCJjb2xvclBhbmVsQnV0dG9uTGlnaHQiLCJjb2xvclBhbmVsQnV0dG9uVGV4dExpZ2h0IiwiY29sb3JQYW5lbEJ1dHRvbkRhcmsiLCJjb2xvclBhbmVsQnV0dG9uVGV4dERhcmsiLCJjb2xvclN1Y2Nlc3MiLCJjb2xvckZhaWxlZCIsImNvbG9yWWVsbG93IiwidGV4dERlZmF1bHRTdHlsZSIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsImNvbG9yIiwibWlkWCIsIm1pZFkiLCJxdWF0ZXJYIiwicXVhdGVyWSIsInF1YXRlcjNYIiwicXVhdGVyM1kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/GameLib.ts\n"));

/***/ })

});