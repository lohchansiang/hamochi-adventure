"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeMainCircle.ts":
/*!**********************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeMainCircle.ts ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ForgeMainCircle; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PanelSelectCard/VocabCard */ \"./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts\");\n/* harmony import */ var _ForgeFeedbackFailed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ForgeFeedbackFailed */ \"./src/game/components/CardMaker/ForgeFeedbackFailed.ts\");\n/* harmony import */ var _ForgeFeedbackSuccess__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ForgeFeedbackSuccess */ \"./src/game/components/CardMaker/ForgeFeedbackSuccess.ts\");\n\n\n\n\nclass ForgeMainCircle {\n    static preload(scene) {}\n    clearSelectedCard() {\n        // clear\n        if (this.selectedVocab) {\n            this.selectedVocab.clean();\n            this.selectedVocab = null;\n        }\n        this.noCardDisplay.setVisible(true);\n        if (this.tweenPulse) {\n            this.tweenPulse.pause();\n            this.tweenPulse.reset();\n        }\n    }\n    renderSelectedCard(vocab) {\n        this.clearSelectedCard();\n        this.noCardDisplay.setVisible(false);\n        this.selectedVocab = new _PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, 0, 0, 250, _PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateHeight(250), vocab);\n        this.container.add(this.selectedVocab.container);\n        this.tweenPulse.play();\n    }\n    exitForge() {\n        this.buttonSelectCard.setVisible(true);\n        this.container.removeInteractive();\n        this.removeDragDropListener();\n    }\n    enterForge() {\n        this.buttonSelectCard.setVisible(false);\n        this.container.setInteractive(new Phaser.Geom.Circle(0, 0, this.radius + 50), Phaser.Geom.Circle.Contains, true);\n        this.addDragDropListener();\n    // this.scene.input.enableDebug(this.container,0x00ff00);\n    }\n    addDragDropListener() {\n        this.scene.input.on(\"dragstart\", function(pointer, gameObject) {\n            gameObject.setDepth(999);\n        }, this);\n        this.scene.input.on(\"drag\", (pointer, gameObject, dragX, dragY)=>{\n            gameObject.x = dragX;\n            gameObject.y = dragY;\n        });\n        this.scene.input.on(\"drop\", (pointer, gameObject, target)=>{\n            if (target.name == \"MainCircle\") {\n                let isCorrect = this.scene.manager.checkAnswer(gameObject);\n                if (isCorrect) this.showSuccessFeedback();\n                else this.showFailedFeedback();\n                gameObject.destroy();\n            }\n        });\n        this.scene.input.on(\"dragend\", (pointer, gameObject, dropped)=>{\n            if (!dropped) {\n                gameObject.x = gameObject.input.dragStartX;\n                gameObject.y = gameObject.input.dragStartY;\n            }\n        });\n    }\n    showSuccessFeedback() {\n        let success = new _ForgeFeedbackSuccess__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, this.oriX, this.oriY);\n    }\n    showFailedFeedback() {\n        let failed = new _ForgeFeedbackFailed__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.scene, this.oriX, this.oriY);\n    }\n    removeDragDropListener() {\n        this.scene.input.removeListener(\"dragstart\");\n        this.scene.input.removeListener(\"drag\");\n        this.scene.input.removeListener(\"dragend\");\n        this.scene.input.removeListener(\"drop\");\n    }\n    constructor(scene, x, y){\n        //\n        this.radius = 250;\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.container = scene.add.container(x, y);\n        const thickness = 15;\n        this.outerCircle = scene.add.circle(0, 0, this.radius, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelBg);\n        this.innerCircle = scene.add.circle(0, 0, this.radius - thickness, 0xffffff);\n        this.noCardDisplay = this.scene.add.text(0, 0, \"?\", {\n            fontSize: \"300px\",\n            fontFamily: \"Arial\",\n            color: \"#c0c0c0\"\n        }).setOrigin(0.5, 0.5).setVisible(false);\n        this.buttonSelectCard = scene.add.container(this.radius - thickness / 2, 0);\n        let baseSprite = scene.add.sprite(0, 0, \"buttonCircleAction\");\n        baseSprite.setDisplaySize(150, 150);\n        let iconSprite = scene.add.sprite(10, 0, \"buttonCardSelect\");\n        iconSprite.setDisplaySize(100, 100);\n        this.buttonSelectCard.add(baseSprite);\n        this.buttonSelectCard.add(iconSprite);\n        baseSprite.setInteractive();\n        baseSprite.on(\"pointerdown\", ()=>{\n            this.scene.events.emit(\"open-panel\");\n        });\n        baseSprite.on(\"pointerover\", ()=>{\n            this.buttonSelectCard.setScale(1.05);\n        }, this);\n        baseSprite.on(\"pointerout\", ()=>{\n            this.buttonSelectCard.setScale(1);\n        }, this);\n        this.tweenPulse = scene.tweens.add({\n            targets: this.buttonSelectCard,\n            scale: 1.05,\n            duration: 500,\n            repeat: -1,\n            yoyo: true\n        }).pause();\n        this.container.add(this.outerCircle);\n        this.container.add(this.innerCircle);\n        this.container.add(this.noCardDisplay);\n        this.container.add(this.buttonSelectCard);\n        this.container.name = \"MainCircle\";\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeMainCircle.ts\n"));

/***/ })

});