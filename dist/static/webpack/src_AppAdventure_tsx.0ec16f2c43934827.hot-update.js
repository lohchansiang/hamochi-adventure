"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppAdventure_tsx",{

/***/ "./src/adventure/components/Player/PlayerAvatar.ts":
/*!*********************************************************!*\
  !*** ./src/adventure/components/Player/PlayerAvatar.ts ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PlayerAvatar; }\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PlayerEnum */ \"./src/adventure/components/Player/PlayerEnum.ts\");\n\n\nclass PlayerAvatar extends phaser__WEBPACK_IMPORTED_MODULE_0__.GameObjects.Container {\n    static preload(scene) {\n        scene.load.image(\"avatarBase\", \"assets/adventure/components/avatar/CB0030_hamster.png\");\n        scene.load.image(\"avatarBaseStroke\", \"assets/adventure/components/avatar/CB0030_hamster_stroke.png\");\n        scene.load.image(\"avatarEye0\", \"assets/adventure/components/avatar/CE0000_default.png\");\n        scene.load.image(\"avatarEye1\", \"assets/adventure/components/avatar/CE0000_default_F1.png\");\n        scene.load.image(\"avatarHair\", \"assets/adventure/components/avatar/CH0000_default.png\");\n        scene.load.image(\"avatarMouth\", \"assets/adventure/components/avatar/CM0030_hamster.png\");\n        scene.load.image(\"avatarCheek\", \"assets/adventure/components/avatar/CC0000_default.png\");\n        scene.load.image(\"avatarShadow\", \"assets/adventure/components/avatar/CS0000_default.png\");\n        //\n        scene.load.image(\"maskSmile\", \"assets/adventure/components/mask/M0010.png\");\n        scene.load.image(\"maskLaugh\", \"assets/adventure/components/mask/M0011.png\");\n        scene.load.image(\"maskLaughWithEye\", \"assets/adventure/components/mask/M0012.png\");\n        scene.load.image(\"maskSmileWithEye\", \"assets/adventure/components/mask/M0013.png\");\n        scene.load.image(\"maskStar\", \"assets/adventure/components/mask/M0014.png\");\n        scene.load.image(\"maskAngry\", \"assets/adventure/components/mask/M0020.png\");\n        scene.load.image(\"maskMad\", \"assets/adventure/components/mask/M0021.png\");\n        scene.load.image(\"maskCry\", \"assets/adventure/components/mask/M0031.png\");\n        scene.load.image(\"maskNervous01\", \"assets/adventure/components/mask/M0070.png\");\n        scene.load.image(\"maskNervous02\", \"assets/adventure/components/mask/M0071.png\");\n        scene.load.image(\"maskShout\", \"assets/adventure/components/mask/M0090.png\");\n        scene.load.image(\"maskPain\", \"assets/adventure/components/mask/MaskPain.png\");\n        scene.load.spritesheet(\"spritesheetMaskFaint\", \"assets/adventure/components/mask/SpritesheetMaskFaint.png\", {\n            frameWidth: 500,\n            frameHeight: 600\n        });\n    }\n    prepareAnims() {\n        // Blink Animation\n        this.eye.anims.create({\n            key: \"blink\",\n            frames: [\n                {\n                    key: \"avatarEye0\"\n                },\n                {\n                    key: \"avatarEye1\"\n                }\n            ],\n            duration: 500,\n            repeat: -1,\n            repeatDelay: 5000,\n            yoyo: true\n        });\n        // Faint Animation\n        this.emojiMask.anims.create({\n            key: \"animFaint\",\n            frameRate: 5,\n            frames: this.scene.anims.generateFrameNumbers(\"spritesheetMaskFaint\", {\n                start: 0,\n                end: 2\n            }),\n            repeat: -1\n        });\n        // Nervous Animation\n        this.emojiMask.anims.create({\n            key: \"animNervous\",\n            frames: [\n                {\n                    key: \"maskNervous01\"\n                },\n                {\n                    key: \"maskNervous02\"\n                }\n            ],\n            duration: 500,\n            repeat: -1\n        });\n        // Idle Tween\n        this.tweenIdle = this.scene.tweens.add({\n            targets: this.avatarContainer,\n            scaleY: 0.95,\n            ease: \"Linear\",\n            duration: 1500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.avatarContainer.scale = 1;\n            }\n        });\n        this.tweenIdle.pause();\n        // Idle Shadow Tween\n        this.tweenIdleShadow = this.scene.tweens.add({\n            targets: this.shadow,\n            scaleX: 0.98,\n            ease: \"Linear\",\n            duration: 1500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.shadow.scale = 1;\n            }\n        });\n        this.tweenIdleShadow.pause();\n        // Idle Tween\n        this.tweenWalk = this.scene.tweens.add({\n            targets: this.avatarContainer,\n            scaleY: 1.10,\n            scaleX: 0.90,\n            ease: \"Cubic\",\n            duration: 500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.avatarContainer.scale = 1;\n            }\n        });\n        this.tweenWalk.pause();\n        // Idle Walk Tween\n        this.tweenWalkShadow = this.scene.tweens.add({\n            targets: this.shadow,\n            scaleX: 0.9,\n            ease: \"Cubic\",\n            duration: 500,\n            repeat: -1,\n            yoyo: true,\n            onStart: ()=>{\n                this.shadow.scale = 1;\n            }\n        });\n        this.tweenWalkShadow.pause();\n    }\n    setAvatarState(newState) {\n        if (newState == this.currentAvatarState) return;\n        this.stopCurrentState();\n        switch(newState){\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.IDLE:\n                this.tweenIdle.play();\n                this.tweenIdleShadow.play();\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.WALK:\n                this.tweenWalk.play();\n                this.tweenWalkShadow.play();\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.JUMP:\n                // Jump Tween, Run Once\n                this.tweenJump = this.scene.tweens.chain({\n                    targets: this.avatarContainer,\n                    tweens: [\n                        {\n                            scaleX: 1.1,\n                            scaleY: 0.9,\n                            ease: \"Cubic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                this.avatarContainer.scale = 1;\n                                this.eye.setTexture(\"avatarEye1\");\n                                this.tweenJumpShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 1.1,\n                                    ease: \"Linear\",\n                                    duration: 200,\n                                    onStart: ()=>{\n                                        this.shadow.scale = 1;\n                                    }\n                                });\n                            }\n                        },\n                        {\n                            scaleX: 0.85,\n                            scaleY: 1.10,\n                            ease: \"Cubic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                this.avatarContainer.scale = 1;\n                                this.eye.setTexture(\"avatarEye0\");\n                                if (this.tweenJumpShadow) {\n                                    this.tweenJumpShadow.stop();\n                                }\n                                this.tweenJumpShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 0.85,\n                                    ease: \"Linear\",\n                                    duration: 200\n                                });\n                            }\n                        }\n                    ]\n                });\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.MIDAIR:\n                this.avatarContainer.scaleX = 0.85;\n                this.avatarContainer.scaleY = 1.10;\n                this.shadow.scaleX = 0.85;\n                // Eye Blink\n                this.eye.play(\"blink\");\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.FALL:\n                // Fall Tween, Run Once\n                this.tweenFall = this.scene.tweens.chain({\n                    targets: this.avatarContainer,\n                    tweens: [\n                        {\n                            scaleX: 1.10,\n                            scaleY: 0.85,\n                            ease: \"Cubic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                this.avatarContainer.scaleX = 0.85;\n                                this.avatarContainer.scaleY = 1.10;\n                                this.tweenFallShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 1.1,\n                                    ease: \"Linear\",\n                                    duration: 200,\n                                    onStart: ()=>{\n                                        this.shadow.scale = 1;\n                                    }\n                                });\n                            }\n                        },\n                        {\n                            scaleX: 1,\n                            scaleY: 1,\n                            ease: \"Elastic\",\n                            duration: 200,\n                            onStart: ()=>{\n                                if (this.tweenFallShadow) {\n                                    this.tweenFallShadow.stop();\n                                }\n                                this.tweenFallShadow = this.scene.tweens.add({\n                                    targets: this.shadow,\n                                    scaleX: 1,\n                                    ease: \"Linear\",\n                                    duration: 200\n                                });\n                            }\n                        }\n                    ]\n                });\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.HURT:\n                this.setEmojiMask(_PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.PAIN);\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.FAINT:\n                this.setEmojiMask(_PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.DIZZY);\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.ATTACK:\n                this.setEmojiMask(_PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.SHOUT);\n                this.currentAvatarState = newState;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.PUSH:\n                this.setEmojiMask(_PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.NERVOUS);\n                this.currentAvatarState = newState;\n                break;\n            default:\n                break;\n        }\n    }\n    stopCurrentState() {\n        switch(this.currentAvatarState){\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.IDLE:\n                //\n                this.tweenIdle.restart();\n                this.tweenIdle.pause();\n                this.tweenIdleShadow.restart();\n                this.tweenIdleShadow.pause();\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.WALK:\n                //\n                this.tweenWalk.restart();\n                this.tweenWalk.pause();\n                this.tweenWalkShadow.restart();\n                this.tweenWalkShadow.pause();\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.JUMP:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.MIDAIR:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.FALL:\n                this.eye.stop();\n                this.eye.setTexture(\"avatarEye0\");\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.HURT:\n                this.clearEmojiMask();\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.FAINT:\n                this.clearEmojiMask();\n                this.avatarContainer.scale = 1;\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.ATTACK:\n                this.clearEmojiMask();\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.PUSH:\n                this.clearEmojiMask();\n                this.currentAvatarState = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.NONE;\n                break;\n            default:\n                break;\n        }\n    }\n    setEmojiMask(maskKey) {\n        if (maskKey == this.currentAvatarMask) return;\n        this.clearEmojiMask();\n        switch(maskKey){\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.SMILE:\n                this.mouth.setVisible(false);\n                this.emojiMask.setTexture(\"maskSmile\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.LAUGH:\n                this.mouth.setVisible(false);\n                this.emojiMask.setTexture(\"maskLaugh\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.LAUGHEYE:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskLaughWithEye\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.SMILEEYE:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskSmileWithEye\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.STAR:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskStar\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.ANGRY:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskAngry\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.MAD:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskMad\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.CRY:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskCry\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.SHOUT:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskShout\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.NERVOUS:\n                this.groupFace.setVisible(false);\n                this.emojiMask.play(\"animNervous\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.PAIN:\n                this.groupFace.setVisible(false);\n                this.emojiMask.setTexture(\"maskPain\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.DIZZY:\n                this.groupFace.setVisible(false);\n                this.emojiMask.play(\"animFaint\");\n                this.emojiMask.setVisible(true);\n                this.currentAvatarMask = maskKey;\n                break;\n            default:\n                break;\n        }\n    }\n    clearEmojiMask() {\n        switch(this.currentAvatarMask){\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.NERVOUS:\n                this.emojiMask.stop();\n                break;\n            case _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.DIZZY:\n                this.emojiMask.stop();\n                break;\n            default:\n                break;\n        }\n        this.emojiMask.setTexture(\"maskSmileWithEye\");\n        this.emojiMask.setVisible(false);\n        this.groupFace.setVisible(true);\n        this.currentAvatarMask = _PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarMask.NONE;\n    }\n    setDirection(direction) {\n        if (direction > 0) {\n            this.base.setFlipX(false);\n            this.baseStroke.setFlipX(false);\n            this.eye.setFlipX(false);\n            this.hair.setFlipX(false);\n            this.mouth.setFlipX(false);\n            this.cheek.setFlipX(false);\n            this.shadow.setFlipX(false);\n            this.emojiMask.setFlipX(false);\n        } else if (direction < 0) {\n            this.base.setFlipX(true);\n            this.baseStroke.setFlipX(true);\n            this.eye.setFlipX(true);\n            this.hair.setFlipX(true);\n            this.mouth.setFlipX(true);\n            this.cheek.setFlipX(true);\n            this.shadow.setFlipX(true);\n            this.emojiMask.setFlipX(true);\n        }\n    }\n    clean() {\n    //\n    }\n    constructor(scene, x, y){\n        super(scene, x, y);\n        this.width = 300;\n        this.height = 500;\n        this.oriX = x;\n        this.oriY = y;\n        scene.add.existing(this);\n        this.avatarContainer = scene.add.container(0, 0);\n        this.add(this.avatarContainer);\n        this.base = scene.add.sprite(0, 0, \"avatarBase\").setTint(0xFFD48A).setOrigin(0.5, 1);\n        this.baseStroke = scene.add.sprite(0, 0, \"avatarBaseStroke\").setOrigin(0.5, 1);\n        this.eye = scene.add.sprite(0, 0, \"avatarEye0\").setOrigin(0.5, 1);\n        this.hair = scene.add.sprite(0, 0, \"avatarHair\").setOrigin(0.5, 1);\n        this.mouth = scene.add.sprite(0, 0, \"avatarMouth\").setOrigin(0.5, 1);\n        this.cheek = scene.add.sprite(0, 0, \"avatarCheek\").setOrigin(0.5, 1);\n        this.shadow = scene.add.sprite(0, 0, \"avatarShadow\").setOrigin(0.5, 1);\n        this.avatarContainer.add(this.base);\n        this.avatarContainer.add(this.baseStroke);\n        this.avatarContainer.add(this.eye);\n        this.avatarContainer.add(this.hair);\n        this.avatarContainer.add(this.mouth);\n        this.avatarContainer.add(this.cheek);\n        this.groupFace = this.scene.add.group();\n        this.groupFace.add(this.eye);\n        this.groupFace.add(this.mouth);\n        this.add(this.shadow);\n        this.sendToBack(this.shadow);\n        this.emojiMask = scene.add.sprite(0, 0, \"maskPain\").setOrigin(0.5, 1).setVisible(false);\n        this.avatarContainer.add(this.emojiMask);\n        this.prepareAnims();\n        this.setAvatarState(_PlayerEnum__WEBPACK_IMPORTED_MODULE_1__.AvatarState.WALK);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/adventure/components/Player/PlayerAvatar.ts\n"));

/***/ })

});