"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppLearn_tsx",{

/***/ "./src/learn/components/ManyLessQuestionRenderer.ts":
/*!**********************************************************!*\
  !*** ./src/learn/components/ManyLessQuestionRenderer.ts ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ManyLessQuestionRenderer; }\n/* harmony export */ });\n/* harmony import */ var _Box__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Box */ \"./src/learn/components/Box.ts\");\n/* harmony import */ var _AppleGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AppleGroup */ \"./src/learn/components/AppleGroup.ts\");\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/components/BasicButton */ \"./src/lib/components/BasicButton.ts\");\n\n\n\n\nclass ManyLessQuestionRenderer {\n    static preload(scene) {\n        _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"].preload(scene);\n        _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"].preload(scene);\n        scene.load.setPath(\"assets\");\n        scene.load.image(\"iconTick\", \"/learn/iconTick.png\");\n        scene.load.image(\"iconCross\", \"/learn/iconCross.png\");\n    }\n    reset() {\n        this.canAnswer = false;\n        this.leftButton.setDisabled(true);\n        this.rightButton.setDisabled(true);\n        this.leftButton.setVisible(false);\n        this.rightButton.setVisible(false);\n        this.questionText.setVisible(false);\n        this.feedback.setVisible(false);\n        this.feedbackAnswer.setVisible(false);\n    }\n    setQuestion(question) {\n        this.reset();\n        this.question = question;\n        let leftChoice = this.question.choices[0];\n        let rightChoice = this.question.choices[1];\n        this.leftAppleGroup.renderApples(leftChoice.value);\n        this.rightAppleGroup.renderApples(rightChoice.value);\n        this.leftButton.buttonText.setText(leftChoice.text.zh);\n        this.rightButton.buttonText.setText(rightChoice.text.zh);\n        this.questionText.setText(this.question.question.zh);\n    }\n    showBoxes() {\n        let withAnim = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        this.container.setVisible(true);\n        if (withAnim) {\n            this.leftBox.getContainer().y += 1000;\n            this.rightBox.getContainer().y += 1000;\n            this.leftBox.show();\n            this.rightBox.show();\n            this.scene.tweens.add({\n                targets: [\n                    this.leftBox.getContainer(),\n                    this.rightBox.getContainer()\n                ],\n                y: this.boxOriginY,\n                duration: 500,\n                ease: \"Cubic\"\n            });\n        } else {\n            this.leftBox.show();\n            this.rightBox.show();\n            this.leftBox.getContainer().y = this.boxOriginY;\n            this.rightBox.getContainer().y = this.boxOriginY;\n        }\n    }\n    setupBoxInput() {\n        this.leftBox.onOpenCallback = ()=>{\n            // Generate Apple 5\n            this.leftAppleGroup.showByAnim(150);\n            if (this.leftBox.isOpen && this.rightBox.isOpen) {\n                if (this.onBoxOpenCallback) {\n                    this.onBoxOpenCallback();\n                }\n            }\n        };\n        this.rightBox.onOpenCallback = ()=>{\n            // Generate Apple 2\n            this.rightAppleGroup.showByAnim(150);\n            if (this.leftBox.isOpen && this.rightBox.isOpen) {\n                if (this.onBoxOpenCallback) {\n                    this.onBoxOpenCallback();\n                }\n            }\n        };\n        this.leftBox.enableInput();\n        this.rightBox.enableInput();\n    }\n    openBoxes() {\n        let withAnim = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        if (!this.leftBox.isOpen) {\n            this.leftBox.open();\n        }\n        if (!this.rightBox.isOpen) {\n            this.rightBox.open();\n        }\n        if (withAnim) {\n            this.leftAppleGroup.showByAnim(150);\n            this.rightAppleGroup.showByAnim(150);\n        } else {\n            this.leftAppleGroup.show();\n            this.rightAppleGroup.show();\n        }\n    }\n    showHints() {\n        this.leftAppleGroup.showHints();\n        this.rightAppleGroup.showHints();\n    }\n    showQuestion() {\n        this.questionText.setVisible(true);\n    }\n    showButtons() {\n        this.leftButton.setDisabled(false);\n        this.rightButton.setDisabled(false);\n        //\n        this.leftButton.setVisible(true);\n        this.rightButton.setVisible(true);\n        this.canAnswer = true;\n    }\n    checkAnswer(place) {\n        if (!this.canAnswer) return;\n        if (!this.question) return;\n        let leftChoice = this.question.choices[0];\n        let rightChoice = this.question.choices[1];\n        if (!leftChoice) return;\n        if (!rightChoice) return;\n        let isCorrect = false;\n        if (place == \"left\") {\n            if (leftChoice.isAnswer) {\n                isCorrect = true;\n            }\n        } else if (place == \"right\") {\n            if (rightChoice.isAnswer) {\n                isCorrect = true;\n            }\n        }\n        if (isCorrect) {\n            if (this.onCorrectCallback) this.onCorrectCallback();\n            this.feedback.setTexture(\"iconTick\");\n            this.feedback.setTint(0x22bb33);\n        } else {\n            if (this.onWrongCallback) this.onWrongCallback();\n            this.feedback.setTexture(\"iconCross\");\n            this.feedback.setTint(0xFF0000);\n            if (place == \"left\") {\n                this.feedbackAnswer.x = this.rightButton.x + 120;\n                this.feedbackAnswer.y = this.rightButton.y + 40;\n            } else if (place == \"right\") {\n                this.feedbackAnswer.x = this.leftButton.x + 120;\n                this.feedbackAnswer.y = this.leftButton.y + 40;\n            }\n        }\n        if (place == \"left\") {\n            this.feedback.x = this.leftButton.x + 150;\n            this.feedback.y = this.leftButton.y;\n        } else if (place == \"right\") {\n            this.feedback.x = this.rightButton.x + 150;\n            this.feedback.y = this.rightButton.y;\n        }\n        // this.feedback.setVisible(true);\n        this.leftButton.setDisabled(true);\n        this.rightButton.setDisabled(true);\n    }\n    hideQuestion() {\n        this.container.setVisible(false);\n    }\n    defaultQuestion() {\n        return {\n            key: \"example\",\n            question: {\n                en: \"Which box has more apples?\",\n                zh: \"哪个盒子的苹果比较多？\",\n                ms: \"Kotak mana ada lebih epal?\"\n            },\n            choices: [\n                {\n                    value: 5,\n                    text: {\n                        en: \"Box A\",\n                        zh: \"盒子 A\",\n                        ms: \"Kotak A\"\n                    },\n                    isAnswer: true\n                },\n                {\n                    value: 2,\n                    text: {\n                        en: \"Box B\",\n                        zh: \"盒子 B\",\n                        ms: \"Kotak B\"\n                    },\n                    isAnswer: false\n                }\n            ]\n        };\n    }\n    constructor(scene, x, y){\n        this.appleOriginY = 100;\n        this.boxOriginY = 300;\n        this.questionOriginY = 500;\n        this.buttonOriginY = 650;\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n        this.container = this.scene.add.container(x, y);\n        this.leftBox = new _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.boxOriginY);\n        this.leftBox.setTag(\"A\");\n        this.container.add(this.leftBox.getContainer());\n        this.rightBox = new _Box__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.boxOriginY);\n        this.rightBox.setTag(\"B\");\n        this.container.add(this.rightBox.getContainer());\n        this.leftAppleGroup = new _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.appleOriginY, 0);\n        this.container.add(this.leftAppleGroup.getContainer());\n        this.rightAppleGroup = new _AppleGroup__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.appleOriginY, 0);\n        this.container.add(this.rightAppleGroup.getContainer());\n        this.leftButton = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, -_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.buttonOriginY, \"A\", \"md\");\n        this.container.add(this.leftButton);\n        this.rightButton = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].quaterX, this.buttonOriginY, \"B\", \"md\");\n        this.container.add(this.rightButton);\n        this.leftButton.onPressedCallback = ()=>{\n            this.checkAnswer(\"left\");\n        };\n        this.rightButton.onPressedCallback = ()=>{\n            this.checkAnswer(\"right\");\n        };\n        this.questionText = this.scene.add.text(0, this.questionOriginY, \"Question\", {\n            color: \"black\",\n            fontSize: 40\n        }).setOrigin(0.5);\n        this.container.add(this.questionText);\n        this.feedback = this.scene.add.sprite(0, 0, \"iconCross\").setDisplaySize(80, 80);\n        this.container.add(this.feedback);\n        this.feedbackAnswer = this.scene.add.text(0, 0, \"答案\", {\n            color: \"red\",\n            fontSize: 35\n        }).setOrigin(0.5);\n        this.container.add(this.feedbackAnswer);\n        this.container.setVisible(false);\n        this.leftBox.hide();\n        this.rightBox.hide();\n        this.leftAppleGroup.hide();\n        this.rightAppleGroup.hide();\n        this.leftButton.setVisible(false);\n        this.rightButton.setVisible(false);\n        this.questionText.setVisible(false);\n        this.feedback.setVisible(false);\n        this.feedbackAnswer.setVisible(false);\n        this.setQuestion(this.defaultQuestion());\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/learn/components/ManyLessQuestionRenderer.ts\n"));

/***/ })

});