"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppLearn_tsx",{

/***/ "./src/learn/components/ProgressRenderer.ts":
/*!**************************************************!*\
  !*** ./src/learn/components/ProgressRenderer.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Progress: function() { return /* binding */ Progress; },\n/* harmony export */   \"default\": function() { return /* binding */ ProgressRenderer; }\n/* harmony export */ });\n/* harmony import */ var _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/components/BasicButton */ \"./src/lib/components/BasicButton.ts\");\n\nclass Progress {\n}\nclass ProgressRenderer {\n    constructor(scene, x, y, progress){\n        this.isOpen = false;\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n        this.progress = progress;\n        this.container = this.scene.add.container(x, y);\n        this.button = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, 0, 0, progress.name.zh, \"md\");\n        this.container.add(this.button);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGVhcm4vY29tcG9uZW50cy9Qcm9ncmVzc1JlbmRlcmVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUd1RDtBQUdoRCxNQUFNQztBQUtiO0FBRWUsTUFBTUM7SUFhakJDLFlBQVlDLEtBQVcsRUFBRUMsQ0FBUSxFQUFFQyxDQUFRLEVBQUVDLFFBQWtCLENBQUM7YUFIaEVDLFNBQWtCO1FBSWQsSUFBSSxDQUFDSixLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDQyxDQUFDLEdBQUdBO1FBQ1QsSUFBSSxDQUFDQyxDQUFDLEdBQUdBO1FBQ1QsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBRWhCLElBQUksQ0FBQ0UsU0FBUyxHQUFHLElBQUksQ0FBQ0wsS0FBSyxDQUFDTSxHQUFHLENBQUNELFNBQVMsQ0FBQ0osR0FBRUM7UUFFNUMsSUFBSSxDQUFDSyxNQUFNLEdBQUcsSUFBSVgsbUVBQVdBLENBQUMsSUFBSSxDQUFDSSxLQUFLLEVBQUMsR0FBRSxHQUFFRyxTQUFTSyxJQUFJLENBQUNDLEVBQUUsRUFBQztRQUM5RCxJQUFJLENBQUNKLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ0MsTUFBTTtJQUNsQztBQUNKO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xlYXJuL2NvbXBvbmVudHMvUHJvZ3Jlc3NSZW5kZXJlci50cz9lMTRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lTGliIGZyb20gXCJAL2xpYi9HYW1lTGliXCI7XG5pbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUsIFR3ZWVucyB9IGZyb20gXCJwaGFzZXJcIlxuaW1wb3J0IHsgVHJhbnNsYXRhYmxlIH0gZnJvbSBcIi4vUXVlc3Rpb25HZW5lcmF0b3JcIjtcbmltcG9ydCBCYXNpY0J1dHRvbiBmcm9tIFwiQC9saWIvY29tcG9uZW50cy9CYXNpY0J1dHRvblwiO1xuaW1wb3J0IHsgRGlhbG9nRGF0YSB9IGZyb20gXCIuLi9yZXBvcy9kYXRhL0RpYWxvZ0RhdGFcIjtcblxuZXhwb3J0IGNsYXNzIFByb2dyZXNze1xuICAgIGtleTogc3RyaW5nXG4gICAgbmFtZTogVHJhbnNsYXRhYmxlXG4gICAgZGlhbG9nRGF0YTogRGlhbG9nRGF0YVxuICAgIHJlcXVpcmVtZW50OiBzdHJpbmcgXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2dyZXNzUmVuZGVyZXJ7XG4gICAgcHJpdmF0ZSBzY2VuZTogU2NlbmVcbiAgICBwcml2YXRlIHg6IG51bWJlclxuICAgIHByaXZhdGUgeTogbnVtYmVyXG4gICAgcHJpdmF0ZSBwcm9ncmVzczogUHJvZ3Jlc3NcbiAgICAvL1xuICAgIGNvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgYnV0dG9uOiBCYXNpY0J1dHRvbiBcbiAgICBzdGF0dXM6IEdhbWVPYmplY3RzLlNwcml0ZVxuICAgIFxuICAgIGlzT3BlbjogYm9vbGVhbiA9IGZhbHNlXG4gICAgb25PcGVuQ2FsbGJhY2s6ICgpID0+IHZvaWRcblxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOlNjZW5lLCB4Om51bWJlciwgeTpudW1iZXIsIHByb2dyZXNzOiBQcm9ncmVzcyl7XG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgICAgICB0aGlzLnggPSB4XG4gICAgICAgIHRoaXMueSA9IHlcbiAgICAgICAgdGhpcy5wcm9ncmVzcyA9IHByb2dyZXNzXG5cbiAgICAgICAgdGhpcy5jb250YWluZXIgPSB0aGlzLnNjZW5lLmFkZC5jb250YWluZXIoeCx5KTtcblxuICAgICAgICB0aGlzLmJ1dHRvbiA9IG5ldyBCYXNpY0J1dHRvbih0aGlzLnNjZW5lLDAsMCxwcm9ncmVzcy5uYW1lLnpoLCdtZCcpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5idXR0b24pO1xuICAgIH1cbn0iXSwibmFtZXMiOlsiQmFzaWNCdXR0b24iLCJQcm9ncmVzcyIsIlByb2dyZXNzUmVuZGVyZXIiLCJjb25zdHJ1Y3RvciIsInNjZW5lIiwieCIsInkiLCJwcm9ncmVzcyIsImlzT3BlbiIsImNvbnRhaW5lciIsImFkZCIsImJ1dHRvbiIsIm5hbWUiLCJ6aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/learn/components/ProgressRenderer.ts\n"));

/***/ })

});