"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppAdventure_tsx",{

/***/ "./src/adventure/components/Map/FixedMapObject.ts":
/*!********************************************************!*\
  !*** ./src/adventure/components/Map/FixedMapObject.ts ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapObjectPlacement: function() { return /* binding */ MapObjectPlacement; },\n/* harmony export */   \"default\": function() { return /* binding */ FixedMapObject; }\n/* harmony export */ });\n/* harmony import */ var _lib_repos_MapObjectRepo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/repos/MapObjectRepo */ \"./src/lib/repos/MapObjectRepo.ts\");\n\nclass MapObjectPlacement {\n    constructor(){\n        this.showCollision = false;\n    }\n}\nclass FixedMapObject {\n    // Sidescrolling Map\n    static preload(scene) {\n        //\n        _lib_repos_MapObjectRepo__WEBPACK_IMPORTED_MODULE_0__.MapObjectRepo.preload(scene);\n    }\n    checkCollision(position) {\n        let collided = [];\n        this.objectList.forEach((object)=>{\n            if (object.collisionRange > 0) {\n                let collisionStartX = object.x - object.collisionRange / 2;\n                let collisionEndX = object.x + object.collisionRange / 2;\n                if (position > collisionStartX && position < collisionEndX) {\n                    collided.push(object.mapObjectKey);\n                    if (object.glowContainer) {\n                        object.glowContainer.setVisible(true);\n                    }\n                    if (object.titleContainer) {\n                        object.titleContainer.setVisible(true);\n                    }\n                } else {\n                    if (object.glowContainer) {\n                        object.glowContainer.setVisible(false);\n                    }\n                    if (object.titleContainer) {\n                        object.titleContainer.setVisible(false);\n                    }\n                }\n            }\n        });\n        this.collided = collided;\n    }\n    constructor(scene){\n        this.offsetY = -120;\n        this.scene = scene;\n        this.container = this.scene.add.container(0, 0);\n        // Layer Main\n        this.objectList = [\n            {\n                mapObjectKey: \"baricade\",\n                x: 450,\n                y: -100,\n                collisionRange: 0\n            },\n            {\n                mapObjectKey: \"baricade\",\n                x: 450,\n                y: 0,\n                collisionRange: 0\n            },\n            {\n                mapObjectKey: \"signboardNext\",\n                x: 2000,\n                y: -200,\n                collisionRange: 0\n            },\n            {\n                mapObjectKey: \"gateBack\",\n                x: 3000,\n                y: 0,\n                collisionRange: 0\n            },\n            {\n                mapObjectKey: \"gateFront\",\n                x: 3000,\n                y: 0,\n                collisionRange: 0\n            },\n            {\n                mapObjectKey: \"buildingMushroom\",\n                x: 5000,\n                y: -200,\n                collisionRange: 300,\n                showCollision: true,\n                title: \"MUSHROOM HOUSE\"\n            }\n        ];\n        // Render Map Objects\n        this.objectList.forEach((object)=>{\n            // Prepare Glow Container\n            let glowContainer = this.scene.add.container(object.x, object.y + this.offsetY);\n            this.container.add(glowContainer);\n            // Add Glow Image to Glow Container\n            let glow = this.scene.add.sprite(0, 0, object.mapObjectKey).setOrigin(0.5, 1).setTintFill(0xFFFFFF);\n            glowContainer.add(glow);\n            // Prepare Object Container\n            let objectContainer = this.scene.add.container(object.x, object.y + this.offsetY);\n            this.container.add(objectContainer);\n            // Add Object Image to Object Container\n            let item = this.scene.add.sprite(0, 0, object.mapObjectKey).setOrigin(0.5, 1);\n            objectContainer.add(item);\n            object.objectContainer = objectContainer;\n            object.glowContainer = glowContainer;\n            // Resize Glow\n            let glowSize = 20;\n            glow.setDisplaySize(item.displayWidth + glowSize, item.displayHeight + glowSize);\n            glow.y += glowSize / 2;\n            glowContainer.setVisible(false);\n            if (object.title) {\n                let titleContainer = this.scene.add.container(0, item.y - 350);\n                objectContainer.add(titleContainer);\n                let titlePanel = this.scene.add.nineslice(0, 0, \"panelWhite\", 0, 400, 100, 50, 50, 50, 50);\n                titleContainer.add(titlePanel);\n                let titleText = this.scene.add.text(0, 0, object.title, {\n                    fontSize: \"32px\",\n                    fontFamily: \"Arial\",\n                    color: \"#000000\",\n                    align: \"center\",\n                    wordWrap: {\n                        width: 300,\n                        useAdvancedWrap: true\n                    }\n                }).setOrigin(0.5);\n                titleContainer.add(titleText);\n                titleContainer.setVisible(false);\n                object.titleContainer = titleContainer;\n            }\n            // Render Collision Debug\n            if (object.showCollision && object.collisionRange > 0) {\n                let rect = this.scene.add.rectangle(object.x, this.offsetY, object.collisionRange, 200, 0x0000ff, 0.3).setOrigin(0.5, 1);\n                this.container.add(rect);\n            }\n        });\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/adventure/components/Map/FixedMapObject.ts\n"));

/***/ })

});