"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts":
/*!********************************************************************!*\
  !*** ./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VocabCardConfig: function() { return /* binding */ VocabCardConfig; },\n/* harmony export */   \"default\": function() { return /* binding */ VocabCard; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _VocabAudioPlayer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../VocabAudioPlayer */ \"./src/game/components/CardMaker/VocabAudioPlayer.ts\");\n\n\nclass VocabCardConfig {\n    constructor(){\n        this.withForgeCondition = false;\n    }\n}\nclass VocabCard {\n    static preload(scene) {\n    //\n    }\n    setInteractive() {\n        this.cardBase.setInteractive();\n        this.cardBase.on(\"pointerdown\", ()=>{\n            if (this.onPressCallback && this.canSelect) {\n                this.onPressCallback();\n            }\n        }, this);\n        this.cardBase.on(\"pointerover\", ()=>{\n            this.cardSelect.setVisible(true);\n        }, this);\n        this.cardBase.on(\"pointerout\", ()=>{\n            this.cardSelect.setVisible(false);\n        }, this);\n    }\n    setStatus(status) {\n        var // Reset Hide Icons\n        _this_cardIconOwned, _this_cardIconForge, _this_tweenPulse, _this_tweenPulse1;\n        this.status = status;\n        // Reset Clear Grayscale\n        this.containerCard.postFX.clear();\n        this.containerCard.setAlpha(1);\n        (_this_cardIconOwned = this.cardIconOwned) === null || _this_cardIconOwned === void 0 ? void 0 : _this_cardIconOwned.setVisible(false);\n        (_this_cardIconForge = this.cardIconForge) === null || _this_cardIconForge === void 0 ? void 0 : _this_cardIconForge.setVisible(false);\n        (_this_tweenPulse = this.tweenPulse) === null || _this_tweenPulse === void 0 ? void 0 : _this_tweenPulse.pause();\n        (_this_tweenPulse1 = this.tweenPulse) === null || _this_tweenPulse1 === void 0 ? void 0 : _this_tweenPulse1.reset();\n        switch(status){\n            case \"owned\":\n                var _this_cardIconOwned1, _this_cardIconOwned2;\n                this.cardBase.setTexture(\"vocabCardBase\");\n                this.vocabSprite.setVisible(true);\n                this.vocabText.setVisible(true);\n                this.cardCrack.setVisible(false);\n                (_this_cardIconOwned1 = this.cardIconOwned) === null || _this_cardIconOwned1 === void 0 ? void 0 : _this_cardIconOwned1.setVisible(true);\n                (_this_cardIconOwned2 = this.cardIconOwned) === null || _this_cardIconOwned2 === void 0 ? void 0 : _this_cardIconOwned2.setAlpha(0.6);\n                this.containerCard.setAlpha(0.6);\n                this.canSelect = false;\n                break;\n            case \"broken\":\n                var _this_cardIconForge1;\n                this.cardBase.setTexture(\"vocabCardBase\");\n                this.vocabText.setVisible(true);\n                this.vocabSprite.setVisible(true);\n                this.cardCrack.setVisible(true);\n                var effect = this.containerCard.postFX.addColorMatrix();\n                effect.grayscale(1, true);\n                (_this_cardIconForge1 = this.cardIconForge) === null || _this_cardIconForge1 === void 0 ? void 0 : _this_cardIconForge1.setVisible(true);\n                this.canSelect = true;\n                break;\n            default:\n                // none\n                this.cardBase.setTexture(\"vocabCardBaseBack\");\n                this.vocabSprite.setVisible(false);\n                this.vocabText.setVisible(false);\n                this.cardCrack.setVisible(false);\n                this.status = \"none\";\n                this.containerCard.setAlpha(0.6);\n                this.canSelect = false;\n                break;\n        }\n        if (this.canSelect) {\n            var _this_tweenPulse2;\n            (_this_tweenPulse2 = this.tweenPulse) === null || _this_tweenPulse2 === void 0 ? void 0 : _this_tweenPulse2.play();\n        }\n    }\n    clean() {\n        this.container.destroy();\n    }\n    static calculateHeight(width) {\n        return 1360 / 980 * width;\n    }\n    //\n    constructor(scene, x, y, width, height, vocab, config = new VocabCardConfig()){\n        //\n        this.canSelect = false;\n        this.scene = scene;\n        this.width = width;\n        this.height = height;\n        this.vocab = vocab;\n        this.container = scene.add.container(x, y);\n        this.containerCard = scene.add.container(0, 0);\n        const selectSize = width * 0.1;\n        this.cardSelect = this.scene.add.rectangle(0, 0, width + selectSize, this.height + selectSize, 0x98dbfa);\n        this.cardSelect.setVisible(false);\n        // BOC: Render Card\n        this.cardBase = this.scene.add.sprite(0, 0, \"vocabCardBase\");\n        this.cardBase.setDisplaySize(width, this.height);\n        this.vocabSprite = this.scene.add.sprite(0, -this.height * 0.1, vocab.textureKey);\n        this.vocabSprite.setDisplaySize(width * 0.6, width * 0.6);\n        this.vocabText = this.scene.add.text(0, this.height * 0.25, vocab.name, {\n            color: \"black\",\n            fontSize: 32,\n            fontFamily: \"Arial\",\n            wordWrap: {\n                width: width,\n                useAdvancedWrap: true\n            },\n            align: \"center\"\n        }).setOrigin(0.5, 0.5);\n        this.cardCrack = this.scene.add.sprite(0, 0, \"vocabCardCrack\");\n        this.cardCrack.setDisplaySize(width, this.height);\n        this.cardCrack.blendMode = Phaser.BlendModes.ADD;\n        this.cardCrack.setVisible(false);\n        this.containerCard.add(this.cardBase);\n        this.containerCard.add(this.vocabSprite);\n        this.containerCard.add(this.vocabText);\n        // EOC\n        this.container.add(this.cardSelect);\n        this.container.add(this.containerCard);\n        this.container.add(this.cardCrack);\n        if (config.withForgeCondition) {\n            const iconSize = width * 0.35;\n            // Icon Owned\n            this.cardIconOwned = this.scene.add.container(width * 0.4, this.height * 0.4);\n            let ownedCircle = this.scene.add.circle(0, 0, iconSize / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorSuccess);\n            let ownedIcon = this.scene.add.sprite(0, 0, \"iconTick\");\n            ownedIcon.setDisplaySize(iconSize / 2, iconSize / 2);\n            this.cardIconOwned.add(ownedCircle);\n            this.cardIconOwned.add(ownedIcon);\n            this.cardIconOwned.setVisible(false);\n            // Icon Forge\n            this.cardIconForge = this.scene.add.container(width * 0.4, this.height * 0.4);\n            let forgeCircle = this.scene.add.circle(0, 0, iconSize / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorYellow);\n            let forgeIcon = this.scene.add.sprite(0, 0, \"hammer\");\n            forgeIcon.setDisplaySize(iconSize * 0.8, iconSize * 0.8);\n            this.cardIconForge.add(forgeCircle);\n            this.cardIconForge.add(forgeIcon);\n            this.cardIconForge.setVisible(false);\n            this.container.add(this.cardIconOwned);\n            this.container.add(this.cardIconForge);\n            // Forge Tweens\n            this.tweenPulse = this.scene.tweens.add({\n                targets: this.container,\n                scale: 1.05,\n                ease: \"Linear\",\n                duration: 500,\n                repeat: -1,\n                yoyo: true\n            }).pause();\n        } else {\n            this.audioPlayer = new _VocabAudioPlayer__WEBPACK_IMPORTED_MODULE_1__[\"default\"](scene, width / 2, height * 0.4, 100, vocab);\n            this.container.add(this.audioPlayer.container);\n        }\n        this.setStatus(\"broken\");\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvVm9jYWJDYXJkLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDbUM7QUFHZTtBQUUzQyxNQUFNRTs7YUFDVEMscUJBQThCOztBQUNsQztBQUVlLE1BQU1DO0lBRWpCLE9BQU9DLFFBQVNDLEtBQW1CLEVBQUU7SUFDakMsRUFBRTtJQUVOO0lBa0hBQyxpQkFBZ0I7UUFDWixJQUFJLENBQUNDLFFBQVEsQ0FBQ0QsY0FBYztRQUM1QixJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsRUFBRSxDQUFDLGVBQWM7WUFDM0IsSUFBSSxJQUFJLENBQUNDLGVBQWUsSUFBSSxJQUFJLENBQUNDLFNBQVMsRUFBRTtnQkFDeEMsSUFBSSxDQUFDRCxlQUFlO1lBQ3hCO1FBQ0osR0FBRSxJQUFJO1FBRU4sSUFBSSxDQUFDRixRQUFRLENBQUNDLEVBQUUsQ0FBQyxlQUFjO1lBQzNCLElBQUksQ0FBQ0csVUFBVSxDQUFDQyxVQUFVLENBQUM7UUFDL0IsR0FBRSxJQUFJO1FBRU4sSUFBSSxDQUFDTCxRQUFRLENBQUNDLEVBQUUsQ0FBQyxjQUFhO1lBQzFCLElBQUksQ0FBQ0csVUFBVSxDQUFDQyxVQUFVLENBQUM7UUFDL0IsR0FBRSxJQUFJO0lBQ1Y7SUFFQUMsVUFBV0MsTUFBYyxFQUFFO1lBT3ZCLG1CQUFtQjtRQUNuQixxQkFDQSxxQkFFQSxrQkFDQTtRQVhBLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUVkLHdCQUF3QjtRQUN4QixJQUFJLENBQUNDLGFBQWEsQ0FBQ0MsTUFBTSxDQUFDQyxLQUFLO1FBQy9CLElBQUksQ0FBQ0YsYUFBYSxDQUFDRyxRQUFRLENBQUM7U0FHNUIsMEJBQUksQ0FBQ0MsYUFBYSxjQUFsQiw4REFBb0JQLFVBQVUsQ0FBQztTQUMvQiwwQkFBSSxDQUFDUSxhQUFhLGNBQWxCLDhEQUFvQlIsVUFBVSxDQUFDO1NBRS9CLHVCQUFJLENBQUNTLFVBQVUsY0FBZix3REFBaUJDLEtBQUs7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QUNxQixNQUFNLENBQUMsR0FBRSxHQUFFRixXQUFTLEdBQUUvRCxnRUFBbUI7WUFDMUYsSUFBSXNFLFlBQStCLElBQUksQ0FBQ2hFLEtBQUssQ0FBQ3NDLEdBQUcsQ0FBQ0csTUFBTSxDQUFDLEdBQUUsR0FBRTtZQUM3RHVCLFVBQVV0QixjQUFjLENBQUNlLFdBQVMsS0FBSUEsV0FBUztZQUMvQyxJQUFJLENBQUMxQyxhQUFhLENBQUN1QixHQUFHLENBQUN3QjtZQUN2QixJQUFJLENBQUMvQyxhQUFhLENBQUN1QixHQUFHLENBQUMwQjtZQUN2QixJQUFJLENBQUNqRCxhQUFhLENBQUNSLFVBQVUsQ0FBQztZQUU5QixJQUFJLENBQUNxQixTQUFTLENBQUNVLEdBQUcsQ0FBQyxJQUFJLENBQUN4QixhQUFhO1lBQ3JDLElBQUksQ0FBQ2MsU0FBUyxDQUFDVSxHQUFHLENBQUMsSUFBSSxDQUFDdkIsYUFBYTtZQUVyQyxlQUFlO1lBQ2YsSUFBSSxDQUFDQyxVQUFVLEdBQUcsSUFBSSxDQUFDaEIsS0FBSyxDQUFDaUUsTUFBTSxDQUFDM0IsR0FBRyxDQUFDO2dCQUNwQzRCLFNBQVEsSUFBSSxDQUFDdEMsU0FBUztnQkFDdEJ1QyxPQUFPO2dCQUNQQyxNQUFNO2dCQUNOQyxVQUFVO2dCQUNWQyxRQUFRLENBQUM7Z0JBQ1RDLE1BQU07WUFDVixHQUFHdEQsS0FBSztRQUNaLE9BQUs7WUFDRCxJQUFJLENBQUN1RCxXQUFXLEdBQUcsSUFBSTdFLHlEQUFnQkEsQ0FBQ0ssT0FBTStCLFFBQU0sR0FBRUksU0FBTyxLQUFJLEtBQUlDO1lBQ3JFLElBQUksQ0FBQ1IsU0FBUyxDQUFDVSxHQUFHLENBQUMsSUFBSSxDQUFDa0MsV0FBVyxDQUFDNUMsU0FBUztRQUNqRDtRQUVBLElBQUksQ0FBQ3BCLFNBQVMsQ0FBQztJQUNuQjtBQWtGSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2NvbXBvbmVudHMvQ2FyZE1ha2VyL1BhbmVsU2VsZWN0Q2FyZC9Wb2NhYkNhcmQudHM/ZGE5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ByaXRlQnV0dG9uIGZyb20gXCJAL2xpYi9jb21wb25lbnRzL1Nwcml0ZUJ1dHRvblwiXG5pbXBvcnQgR2FtZUxpYiBmcm9tIFwiQC9saWIvR2FtZUxpYlwiXG5pbXBvcnQgeyBWb2NhYiB9IGZyb20gXCJAL2xpYi9yZXBvcy9EZWNrUmVwb1wiXG5pbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUsIFR3ZWVucywgVHlwZXMgfSBmcm9tIFwicGhhc2VyXCJcbmltcG9ydCBWb2NhYkF1ZGlvUGxheWVyIGZyb20gXCIuLi9Wb2NhYkF1ZGlvUGxheWVyXCJcblxuZXhwb3J0IGNsYXNzIFZvY2FiQ2FyZENvbmZpZ3tcbiAgICB3aXRoRm9yZ2VDb25kaXRpb246IGJvb2xlYW4gPSBmYWxzZVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWb2NhYkNhcmR7XG5cbiAgICBzdGF0aWMgcHJlbG9hZCggc2NlbmU6IFBoYXNlci5TY2VuZSApe1xuICAgICAgICAvL1xuXG4gICAgfVxuXG4gICAgc2NlbmU6IFNjZW5lXG4gICAgd2lkdGg6IG51bWJlclxuICAgIGhlaWdodDogbnVtYmVyXG4gICAgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBjb250YWluZXJDYXJkOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBjYXJkQmFzZTogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgdm9jYWJTcHJpdGU6IEdhbWVPYmplY3RzLlNwcml0ZVxuICAgIHZvY2FiVGV4dDogR2FtZU9iamVjdHMuVGV4dFxuICAgIGNhcmRTZWxlY3Q6IEdhbWVPYmplY3RzLlJlY3RhbmdsZVxuICAgIGNhcmRDcmFjazogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgLy9cbiAgICBjYXJkSWNvbk93bmVkOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBjYXJkSWNvbkZvcmdlOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICAvL1xuICAgIG9uUHJlc3NDYWxsYmFjazogRnVuY3Rpb24gfCBudWxsXG4gICAgLy9cbiAgICB2b2NhYjogVm9jYWJcbiAgICBidXR0b25TdGF0ZTogc3RyaW5nIC8vIGRlZmF1bHQsIHNlbGVjdGVkLCBkaXNhYmxlZFxuICAgIHN0YXR1czogc3RyaW5nIC8vIG93bmVkLCBicm9rZW4sIG5vbmVcbiAgICAvL1xuICAgIGNhblNlbGVjdDogYm9vbGVhbiA9IGZhbHNlXG4gICAgdHdlZW5QdWxzZTogVHdlZW5zLlR3ZWVuXG4gICAgLy9cbiAgICBhdWRpb0J1dHRvbjogU3ByaXRlQnV0dG9uXG4gICAgYXVkaW9QbGF5ZXI6IFZvY2FiQXVkaW9QbGF5ZXJcbiAgICAvL1xuICAgIGNvbnN0cnVjdG9yKCBzY2VuZTpTY2VuZSwgeDpudW1iZXIsIHk6bnVtYmVyLCB3aWR0aDpudW1iZXIsIGhlaWdodDpudW1iZXIsIHZvY2FiOlZvY2FiLCBjb25maWc6IFZvY2FiQ2FyZENvbmZpZyA9IG5ldyBWb2NhYkNhcmRDb25maWcoKSApe1xuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aFxuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodFxuICAgICAgICB0aGlzLnZvY2FiID0gdm9jYWI7XG5cbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBzY2VuZS5hZGQuY29udGFpbmVyKHgseSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyQ2FyZCA9IHNjZW5lLmFkZC5jb250YWluZXIoMCwwKTtcblxuICAgICAgICBjb25zdCBzZWxlY3RTaXplOm51bWJlciA9IHdpZHRoKjAuMTtcbiAgICAgICAgdGhpcy5jYXJkU2VsZWN0ID0gdGhpcy5zY2VuZS5hZGQucmVjdGFuZ2xlKDAsMCx3aWR0aCtzZWxlY3RTaXplLHRoaXMuaGVpZ2h0K3NlbGVjdFNpemUsMHg5OGRiZmEpO1xuICAgICAgICB0aGlzLmNhcmRTZWxlY3Quc2V0VmlzaWJsZShmYWxzZSk7XG5cbiAgICAgICAgLy8gQk9DOiBSZW5kZXIgQ2FyZFxuICAgICAgICB0aGlzLmNhcmRCYXNlID0gdGhpcy5zY2VuZS5hZGQuc3ByaXRlKDAsMCwndm9jYWJDYXJkQmFzZScpO1xuICAgICAgICB0aGlzLmNhcmRCYXNlLnNldERpc3BsYXlTaXplKHdpZHRoLHRoaXMuaGVpZ2h0KTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudm9jYWJTcHJpdGUgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoMCwtdGhpcy5oZWlnaHQqMC4xLHZvY2FiLnRleHR1cmVLZXkpO1xuICAgICAgICB0aGlzLnZvY2FiU3ByaXRlLnNldERpc3BsYXlTaXplKHdpZHRoKjAuNiwgd2lkdGgqMC42KTtcblxuICAgICAgICB0aGlzLnZvY2FiVGV4dCA9IHRoaXMuc2NlbmUuYWRkLnRleHQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhlaWdodCowLjI1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZvY2FiLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjonYmxhY2snLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTozMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTonQXJpYWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b3JkV3JhcDogeyB3aWR0aDogd2lkdGgsIHVzZUFkdmFuY2VkV3JhcDogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbjonY2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLnNldE9yaWdpbigwLjUsMC41KVxuICAgICAgICBcbiAgICAgICAgdGhpcy5jYXJkQ3JhY2sgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoMCwwLCd2b2NhYkNhcmRDcmFjaycpO1xuICAgICAgICB0aGlzLmNhcmRDcmFjay5zZXREaXNwbGF5U2l6ZSh3aWR0aCx0aGlzLmhlaWdodCk7XG4gICAgICAgIHRoaXMuY2FyZENyYWNrLmJsZW5kTW9kZSA9IFBoYXNlci5CbGVuZE1vZGVzLkFERDtcbiAgICAgICAgdGhpcy5jYXJkQ3JhY2suc2V0VmlzaWJsZShmYWxzZSk7XG5cbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLmFkZCh0aGlzLmNhcmRCYXNlKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLmFkZCh0aGlzLnZvY2FiU3ByaXRlKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLmFkZCh0aGlzLnZvY2FiVGV4dCk7XG4gICAgICAgIC8vIEVPQ1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmNhcmRTZWxlY3QpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5jb250YWluZXJDYXJkKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuY2FyZENyYWNrKTsgXG4gICAgICAgIFxuICAgICAgICBpZiggY29uZmlnLndpdGhGb3JnZUNvbmRpdGlvbiApe1xuICAgICAgICAgICAgY29uc3QgaWNvblNpemUgPSB3aWR0aCowLjM1O1xuICAgICAgICAgICAgLy8gSWNvbiBPd25lZFxuICAgICAgICAgICAgdGhpcy5jYXJkSWNvbk93bmVkID0gdGhpcy5zY2VuZS5hZGQuY29udGFpbmVyKHdpZHRoKjAuNCx0aGlzLmhlaWdodCowLjQpO1xuICAgICAgICAgICAgbGV0IG93bmVkQ2lyY2xlOkdhbWVPYmplY3RzLkFyYyA9IHRoaXMuc2NlbmUuYWRkLmNpcmNsZSgwLDAsaWNvblNpemUvMixHYW1lTGliLmNvbG9yU3VjY2Vzcyk7XG4gICAgICAgICAgICBsZXQgb3duZWRJY29uOkdhbWVPYmplY3RzLlNwcml0ZSA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZSgwLDAsJ2ljb25UaWNrJyk7XG4gICAgICAgICAgICBvd25lZEljb24uc2V0RGlzcGxheVNpemUoaWNvblNpemUvMixpY29uU2l6ZS8yKTtcbiAgICAgICAgICAgIHRoaXMuY2FyZEljb25Pd25lZC5hZGQob3duZWRDaXJjbGUpO1xuICAgICAgICAgICAgdGhpcy5jYXJkSWNvbk93bmVkLmFkZChvd25lZEljb24pO1xuICAgICAgICAgICAgdGhpcy5jYXJkSWNvbk93bmVkLnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEljb24gRm9yZ2VcbiAgICAgICAgICAgIHRoaXMuY2FyZEljb25Gb3JnZSA9IHRoaXMuc2NlbmUuYWRkLmNvbnRhaW5lcih3aWR0aCowLjQsdGhpcy5oZWlnaHQqMC40KTtcbiAgICAgICAgICAgIGxldCBmb3JnZUNpcmNsZTpHYW1lT2JqZWN0cy5BcmMgPSB0aGlzLnNjZW5lLmFkZC5jaXJjbGUoMCwwLGljb25TaXplLzIsR2FtZUxpYi5jb2xvclllbGxvdyk7XG4gICAgICAgICAgICBsZXQgZm9yZ2VJY29uOkdhbWVPYmplY3RzLlNwcml0ZSA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZSgwLDAsJ2hhbW1lcicpO1xuICAgICAgICAgICAgZm9yZ2VJY29uLnNldERpc3BsYXlTaXplKGljb25TaXplKjAuOCxpY29uU2l6ZSowLjgpO1xuICAgICAgICAgICAgdGhpcy5jYXJkSWNvbkZvcmdlLmFkZChmb3JnZUNpcmNsZSk7XG4gICAgICAgICAgICB0aGlzLmNhcmRJY29uRm9yZ2UuYWRkKGZvcmdlSWNvbik7XG4gICAgICAgICAgICB0aGlzLmNhcmRJY29uRm9yZ2Uuc2V0VmlzaWJsZShmYWxzZSk7XG5cbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmNhcmRJY29uT3duZWQpO1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuY2FyZEljb25Gb3JnZSk7XG5cbiAgICAgICAgICAgIC8vIEZvcmdlIFR3ZWVuc1xuICAgICAgICAgICAgdGhpcy50d2VlblB1bHNlID0gdGhpcy5zY2VuZS50d2VlbnMuYWRkKHtcbiAgICAgICAgICAgICAgICB0YXJnZXRzOnRoaXMuY29udGFpbmVyLCAgXG4gICAgICAgICAgICAgICAgc2NhbGU6IDEuMDUsIFxuICAgICAgICAgICAgICAgIGVhc2U6ICdMaW5lYXInLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsXG4gICAgICAgICAgICAgICAgcmVwZWF0OiAtMSxcbiAgICAgICAgICAgICAgICB5b3lvOiB0cnVlLFxuICAgICAgICAgICAgfSkucGF1c2UoKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyID0gbmV3IFZvY2FiQXVkaW9QbGF5ZXIoc2NlbmUsd2lkdGgvMixoZWlnaHQqMC40LDEwMCx2b2NhYik7XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5hdWRpb1BsYXllci5jb250YWluZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0dXMoJ2Jyb2tlbicpO1xuICAgIH1cblxuICAgIHNldEludGVyYWN0aXZlKCl7XG4gICAgICAgIHRoaXMuY2FyZEJhc2Uuc2V0SW50ZXJhY3RpdmUoKTtcbiAgICAgICAgdGhpcy5jYXJkQmFzZS5vbigncG9pbnRlcmRvd24nLCgpPT57XG4gICAgICAgICAgICBpZiggdGhpcy5vblByZXNzQ2FsbGJhY2sgJiYgdGhpcy5jYW5TZWxlY3QgKXtcbiAgICAgICAgICAgICAgICB0aGlzLm9uUHJlc3NDYWxsYmFjaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LHRoaXMpO1xuXG4gICAgICAgIHRoaXMuY2FyZEJhc2Uub24oJ3BvaW50ZXJvdmVyJywoKT0+e1xuICAgICAgICAgICAgdGhpcy5jYXJkU2VsZWN0LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgIH0sdGhpcyk7XG5cbiAgICAgICAgdGhpcy5jYXJkQmFzZS5vbigncG9pbnRlcm91dCcsKCk9PntcbiAgICAgICAgICAgIHRoaXMuY2FyZFNlbGVjdC5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgfSx0aGlzKTtcbiAgICB9XG5cbiAgICBzZXRTdGF0dXMoIHN0YXR1czogc3RyaW5nICl7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuXG4gICAgICAgIC8vIFJlc2V0IENsZWFyIEdyYXlzY2FsZVxuICAgICAgICB0aGlzLmNvbnRhaW5lckNhcmQucG9zdEZYLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyQ2FyZC5zZXRBbHBoYSgxKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlc2V0IEhpZGUgSWNvbnNcbiAgICAgICAgdGhpcy5jYXJkSWNvbk93bmVkPy5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgdGhpcy5jYXJkSWNvbkZvcmdlPy5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudHdlZW5QdWxzZT8ucGF1c2UoKTtcbiAgICAgICAgdGhpcy50d2VlblB1bHNlPy5yZXNldCgpO1xuXG4gICAgICAgIHN3aXRjaCAoc3RhdHVzKSB7XG4gICAgICAgICAgICBjYXNlICdvd25lZCc6XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkQmFzZS5zZXRUZXh0dXJlKCd2b2NhYkNhcmRCYXNlJyk7XG4gICAgICAgICAgICAgICAgdGhpcy52b2NhYlNwcml0ZS5zZXRWaXNpYmxlKHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMudm9jYWJUZXh0LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkQ3JhY2suc2V0VmlzaWJsZShmYWxzZSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNhcmRJY29uT3duZWQ/LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkSWNvbk93bmVkPy5zZXRBbHBoYSgwLjYpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyQ2FyZC5zZXRBbHBoYSgwLjYpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FuU2VsZWN0ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicm9rZW4nOlxuICAgICAgICAgICAgICAgIHRoaXMuY2FyZEJhc2Uuc2V0VGV4dHVyZSgndm9jYWJDYXJkQmFzZScpO1xuICAgICAgICAgICAgICAgIHRoaXMudm9jYWJUZXh0LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy52b2NhYlNwcml0ZS5zZXRWaXNpYmxlKHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FyZENyYWNrLnNldFZpc2libGUodHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICB2YXIgZWZmZWN0ID0gdGhpcy5jb250YWluZXJDYXJkLnBvc3RGWC5hZGRDb2xvck1hdHJpeCgpO1xuICAgICAgICAgICAgICAgIGVmZmVjdC5ncmF5c2NhbGUoMSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNhcmRJY29uRm9yZ2U/LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW5TZWxlY3QgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAvLyBub25lXG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkQmFzZS5zZXRUZXh0dXJlKCd2b2NhYkNhcmRCYXNlQmFjaycpO1xuICAgICAgICAgICAgICAgIHRoaXMudm9jYWJTcHJpdGUuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy52b2NhYlRleHQuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkQ3JhY2suc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLnNldEFscGhhKDAuNik7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW5TZWxlY3QgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCB0aGlzLmNhblNlbGVjdCApe1xuICAgICAgICAgICAgdGhpcy50d2VlblB1bHNlPy5wbGF5KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjbGVhbigpe1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgc3RhdGljIGNhbGN1bGF0ZUhlaWdodCggd2lkdGg6bnVtYmVyICk6bnVtYmVye1xuICAgICAgICByZXR1cm4gMTM2MC85ODAqd2lkdGg7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJHYW1lTGliIiwiVm9jYWJBdWRpb1BsYXllciIsIlZvY2FiQ2FyZENvbmZpZyIsIndpdGhGb3JnZUNvbmRpdGlvbiIsIlZvY2FiQ2FyZCIsInByZWxvYWQiLCJzY2VuZSIsInNldEludGVyYWN0aXZlIiwiY2FyZEJhc2UiLCJvbiIsIm9uUHJlc3NDYWxsYmFjayIsImNhblNlbGVjdCIsImNhcmRTZWxlY3QiLCJzZXRWaXNpYmxlIiwic2V0U3RhdHVzIiwic3RhdHVzIiwiY29udGFpbmVyQ2FyZCIsInBvc3RGWCIsImNsZWFyIiwic2V0QWxwaGEiLCJjYXJkSWNvbk93bmVkIiwiY2FyZEljb25Gb3JnZSIsInR3ZWVuUHVsc2UiLCJwYXVzZSIsInJlc2V0Iiwic2V0VGV4dHVyZSIsInZvY2FiU3ByaXRlIiwidm9jYWJUZXh0IiwiY2FyZENyYWNrIiwiZWZmZWN0IiwiYWRkQ29sb3JNYXRyaXgiLCJncmF5c2NhbGUiLCJwbGF5IiwiY2xlYW4iLCJjb250YWluZXIiLCJkZXN0cm95IiwiY2FsY3VsYXRlSGVpZ2h0Iiwid2lkdGgiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwiaGVpZ2h0Iiwidm9jYWIiLCJjb25maWciLCJhZGQiLCJzZWxlY3RTaXplIiwicmVjdGFuZ2xlIiwic3ByaXRlIiwic2V0RGlzcGxheVNpemUiLCJ0ZXh0dXJlS2V5IiwidGV4dCIsIm5hbWUiLCJjb2xvciIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsIndvcmRXcmFwIiwidXNlQWR2YW5jZWRXcmFwIiwiYWxpZ24iLCJzZXRPcmlnaW4iLCJibGVuZE1vZGUiLCJQaGFzZXIiLCJCbGVuZE1vZGVzIiwiQUREIiwiaWNvblNpemUiLCJvd25lZENpcmNsZSIsImNpcmNsZSIsImNvbG9yU3VjY2VzcyIsIm93bmVkSWNvbiIsImZvcmdlQ2lyY2xlIiwiY29sb3JZZWxsb3ciLCJmb3JnZUljb24iLCJ0d2VlbnMiLCJ0YXJnZXRzIiwic2NhbGUiLCJlYXNlIiwiZHVyYXRpb24iLCJyZXBlYXQiLCJ5b3lvIiwiYXVkaW9QbGF5ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts\n"));

/***/ })

});