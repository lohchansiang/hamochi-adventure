"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/PanelSelectCard/PanelSelectCard.ts":
/*!**************************************************************************!*\
  !*** ./src/game/components/CardMaker/PanelSelectCard/PanelSelectCard.ts ***!
  \**************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ panelSelectedCard; }\n/* harmony export */ });\n/* harmony import */ var _lib_components_CloseButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/components/CloseButton */ \"./src/lib/components/CloseButton.ts\");\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/repos/DeckRepo */ \"./src/lib/repos/DeckRepo.ts\");\n/* harmony import */ var _TabButtonDeck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TabButtonDeck */ \"./src/game/components/CardMaker/PanelSelectCard/TabButtonDeck.ts\");\n/* harmony import */ var _VocabCard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./VocabCard */ \"./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts\");\n\n\n\n\n\nclass panelSelectedCard {\n    static preload(scene) {}\n    renderDeckTabs(decks) {\n        // Once Only\n        const topLeftPos = this.panel.getTopLeft();\n        //\n        const rowY = topLeftPos.y + this.deckButtonSectionDiffY + this.deckButtonGap / 2;\n        const startX = topLeftPos.x + this.panelPadding + this.deckButtonGap / 2;\n        decks.forEach((deck, index)=>{\n            let row = Phaser.Math.FloorTo(index / this.deckButtonPerRow); // Row 0 , 1\n            let remainder = index % this.deckButtonPerRow;\n            let posX = startX + this.deckButtonGap * remainder;\n            let posY = rowY + this.deckButtonGap * row;\n            let tabButton = new _TabButtonDeck__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.scene, posX, posY, this.tabButtonSize, deck);\n            tabButton.onPressCallback = ()=>{\n                this.selectDeckTab(deck.key);\n            };\n            this.container.add(tabButton.container);\n            this.tabButtons.push(tabButton);\n        });\n    }\n    updateDeckTabs() {\n        this.tabButtons.forEach((tab)=>{\n            if (tab.deck && tab.deck.key == this.selectedDeckKey) {\n                tab.setStatus(\"selected\");\n            } else {\n                tab.setStatus(\"default\");\n            }\n        });\n    }\n    selectDeckTab(deckKey) {\n        if (this.selectedDeckKey != deckKey) {\n            this.selectedDeckKey = deckKey;\n            this.updateDeckTabs(); // Rerender Deck Tabs State\n            this.renderVocabs(); // Render new deck vocabs\n        }\n    }\n    renderVocabs() {\n        // Clear\n        let children = this.innerContainer.getAll();\n        children.forEach((child)=>{\n            child.destroy();\n        });\n        // Render Deck\n        const deck = _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_2__.DeckRepo.getDeck(this.selectedDeckKey);\n        if (deck != undefined) {\n            // Calculate with consider to add into inner container\n            const startX = -(this.vocabGapX * (this.vocabPerRow - 1) / 2);\n            const startY = -(this.innerPanelHeight / 2 - this.panelPadding - this.vocabSizeHeight / 2);\n            deck.vocabs.forEach((vocab, index)=>{\n                let row = Phaser.Math.FloorTo(index / this.vocabPerRow); // Row 0 , 1\n                let remainder = index % this.vocabPerRow;\n                let posX = startX + this.vocabGapX * remainder;\n                let posY = startY + this.vocabGapY * row;\n                let vocabCard = new _VocabCard__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.scene, posX, posY, this.vocabSizeWidth, this.vocabSizeHeight, vocab, {\n                    withForgeCondition: true\n                });\n                vocabCard.setInteractive();\n                vocabCard.onPressCallback = ()=>{\n                    if (this.onCardSelected) {\n                        this.onCardSelected(this.selectedDeckKey, vocab.key);\n                    }\n                    this.close();\n                };\n                // Set vocab card status\n                vocabCard.setStatus(this.manager.getVocabStatus(vocab.key));\n                this.vocabCards.push(vocabCard);\n                this.innerContainer.add(vocabCard.container);\n            });\n        // // Set initial selected card\n        // if( !this.selectedVocabKey && !this.selectedVocabIndex){\n        //     if( deck.vocabs[0] != undefined ){\n        //         this.selectVocabCard(deck.vocabs[0].key,0);\n        //     }\n        // }else{\n        //     // Remain same selected position when change tab but update selected card\n        //     if( deck.vocabs[this.selectedVocabIndex] != undefined ){\n        //         this.selectVocabCard(deck.vocabs[this.selectedVocabIndex].key,this.selectedVocabIndex);\n        //     }else{\n        //         this.selectedVocabKey = '';\n        //         this.bottomButtonConfirm.setDisabled( true );\n        //     }\n        // }\n        }\n    }\n    open() {\n        this.container.setVisible(true);\n        if (this.onPanelOpen) this.onPanelOpen();\n    }\n    close() {\n        this.container.setVisible(false);\n        if (this.onPanelClose) this.onPanelClose();\n    }\n    constructor(scene, manager, x, y){\n        // Panel\n        this.panelWidth = _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].screenWidth - 100;\n        this.panelPadding = 50;\n        // Close Button\n        this.closeButtonSize = 120;\n        this.deckButtonPerRow = 6;\n        this.vocabSizeWidth = 180;\n        this.vocabSizeHeight = _VocabCard__WEBPACK_IMPORTED_MODULE_4__[\"default\"].calculateHeight(180);\n        this.vocabPerRow = 4;\n        this.vocabRow = 3;\n        //\n        this.tabButtonSize = 120;\n        this.tabButtons = [];\n        //\n        this.vocabCards = [];\n        this.scene = scene;\n        this.manager = manager;\n        this.container = scene.add.container(_lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].screenHeight / 2).setDepth(100);\n        this.backdrop = scene.add.rectangle(0, 0, _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].screenWidth, _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].screenHeight, 0x000000, 0.5);\n        this.container.add(this.backdrop);\n        // Initial Selected Deck Key\n        const decks = _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_2__.DeckRepo.getDecks();\n        this.deckButtonGap = (this.panelWidth - this.panelPadding * 2) / this.deckButtonPerRow;\n        this.deckButtonRow = Phaser.Math.FloorTo(decks.length / this.deckButtonPerRow) + 1;\n        // Calculate Total Panel Height Based on Content\n        // Padding Top\n        let totalHeight = 0;\n        totalHeight += this.panelPadding; // Top Padding\n        totalHeight += this.closeButtonSize; // Close Button\n        totalHeight += this.panelPadding / 2; // Padding Sm\n        //\n        this.deckButtonSectionDiffY = totalHeight;\n        //\n        totalHeight += this.deckButtonRow * this.deckButtonGap; // Deck Tab Buttons\n        totalHeight += this.panelPadding / 2; // Padding Sm\n        //\n        this.vocabSectionDiffY = totalHeight;\n        //\n        let innerPanelHeight = 0;\n        innerPanelHeight += this.panelPadding; // Inner Top Padding\n        innerPanelHeight += (this.vocabSizeHeight + this.panelPadding) * this.vocabRow;\n        this.innerPanelHeight = innerPanelHeight;\n        totalHeight += innerPanelHeight;\n        totalHeight += this.panelPadding; // Bottom Padding\n        this.panelHeight = totalHeight;\n        // Render Panel\n        this.panel = scene.add.rectangle(0, 0, this.panelWidth, this.panelHeight, _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colorPanelBg);\n        this.container.add(this.panel);\n        const topRightPos = this.panel.getTopRight();\n        // Render Close Button\n        const closeButtonX = topRightPos.x - this.panelPadding - this.closeButtonSize / 2;\n        const closeButtonY = topRightPos.y + this.panelPadding + this.closeButtonSize / 2;\n        this.closeButton = new _lib_components_CloseButton__WEBPACK_IMPORTED_MODULE_0__[\"default\"](scene, closeButtonX, closeButtonY);\n        this.closeButton.buttonSprite.displayHeight = this.closeButtonSize;\n        this.closeButton.buttonSprite.displayWidth = this.closeButtonSize;\n        this.closeButton.onPressed(()=>{\n            this.close();\n        });\n        this.container.add(this.closeButton);\n        // Render Inner Panel\n        const relativeInnerPanelY = topRightPos.y + this.vocabSectionDiffY + this.innerPanelHeight / 2;\n        this.innerPanelWidth = this.panelWidth - this.panelPadding * 2;\n        this.innerPanel = scene.add.rectangle(0, relativeInnerPanelY, this.innerPanelWidth, this.innerPanelHeight, _lib_GameLib__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colorPanelBgDark);\n        this.container.add(this.innerPanel);\n        this.innerContainer = scene.add.container(0, relativeInnerPanelY);\n        this.container.add(this.innerContainer);\n        // Calculate vocab dimension\n        this.vocabGapX = (this.innerPanelWidth - this.panelPadding) / this.vocabPerRow;\n        this.vocabGapY = this.vocabSizeHeight + this.panelPadding;\n        this.renderDeckTabs(decks);\n        this.selectDeckTab(decks[0].key);\n        this.container.setVisible(false);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvUGFuZWxTZWxlY3RDYXJkLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRDtBQUNuQjtBQUN5QjtBQUVqQjtBQUNSO0FBSXBCLE1BQU1LO0lBRWpCLE9BQU9DLFFBQVNDLEtBQW1CLEVBQUUsQ0FFckM7SUFzSEFDLGVBQWdCQyxLQUFZLEVBQUU7UUFDMUIsWUFBWTtRQUNaLE1BQU1DLGFBQTJDLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxVQUFVO1FBQ3RFLEVBQUU7UUFDRixNQUFNQyxPQUFlSCxXQUFXSSxDQUFDLEdBQUcsSUFBSSxDQUFDQyxzQkFBc0IsR0FBSSxJQUFJLENBQUNDLGFBQWEsR0FBQztRQUN0RixNQUFNQyxTQUFpQlAsV0FBV1EsQ0FBQyxHQUFHLElBQUksQ0FBQ0MsWUFBWSxHQUFJLElBQUksQ0FBQ0gsYUFBYSxHQUFDO1FBRTlFUCxNQUFNVyxPQUFPLENBQUMsQ0FBRUMsTUFBTUM7WUFDbEIsSUFBSUMsTUFBTUMsT0FBT0MsSUFBSSxDQUFDQyxPQUFPLENBQUNKLFFBQU0sSUFBSSxDQUFDSyxnQkFBZ0IsR0FBRyxZQUFZO1lBQ3hFLElBQUlDLFlBQVlOLFFBQU0sSUFBSSxDQUFDSyxnQkFBZ0I7WUFFM0MsSUFBSUUsT0FBZVosU0FBUSxJQUFJLENBQUNELGFBQWEsR0FBQ1k7WUFDOUMsSUFBSUUsT0FBZWpCLE9BQVEsSUFBSSxDQUFDRyxhQUFhLEdBQUNPO1lBRTlDLElBQUlRLFlBQTBCLElBQUk1QixzREFBYUEsQ0FBQyxJQUFJLENBQUNJLEtBQUssRUFBQ3NCLE1BQUtDLE1BQUssSUFBSSxDQUFDRSxhQUFhLEVBQUNYO1lBQ3hGVSxVQUFVRSxlQUFlLEdBQUc7Z0JBQ3hCLElBQUksQ0FBQ0MsYUFBYSxDQUFDYixLQUFLYyxHQUFHO1lBQy9CO1lBRUEsSUFBSSxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQ04sVUFBVUssU0FBUztZQUN0QyxJQUFJLENB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SUFBSSxDQUFDbUMsU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDaUUsVUFBVTtRQUVsQyxJQUFJLENBQUN2RCxjQUFjLEdBQUd4QyxNQUFNOEIsR0FBRyxDQUFDRCxTQUFTLENBQUMsR0FBRWdFO1FBQzVDLElBQUksQ0FBQ2hFLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ1UsY0FBYztRQUV0Qyw0QkFBNEI7UUFDNUIsSUFBSSxDQUFDTSxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUNnRCxlQUFlLEdBQUksSUFBSSxDQUFDbEYsWUFBWSxJQUFNLElBQUksQ0FBQ21DLFdBQVc7UUFDakYsSUFBSSxDQUFDTSxTQUFTLEdBQUcsSUFBSSxDQUFDSCxlQUFlLEdBQUMsSUFBSSxDQUFDdEMsWUFBWTtRQUV2RCxJQUFJLENBQUNYLGNBQWMsQ0FBQ0M7UUFDcEIsSUFBSSxDQUFDeUIsYUFBYSxDQUFFekIsS0FBSyxDQUFDLEVBQUUsQ0FBQzBCLEdBQUc7UUFFaEMsSUFBSSxDQUFDQyxTQUFTLENBQUNtQyxVQUFVLENBQUM7SUFDOUI7QUFtSEo7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvUGFuZWxTZWxlY3RDYXJkLnRzP2JhNGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENsb3NlQnV0dG9uIGZyb20gXCJAL2xpYi9jb21wb25lbnRzL0Nsb3NlQnV0dG9uXCJcbmltcG9ydCBHYW1lTGliIGZyb20gXCJAL2xpYi9HYW1lTGliXCJcbmltcG9ydCB7IERlY2ssIERlY2tSZXBvLCBWb2NhYiB9IGZyb20gXCJAL2xpYi9yZXBvcy9EZWNrUmVwb1wiXG5pbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUsIFR5cGVzIH0gZnJvbSBcInBoYXNlclwiXG5pbXBvcnQgVGFiQnV0dG9uRGVjayBmcm9tIFwiLi9UYWJCdXR0b25EZWNrXCJcbmltcG9ydCBWb2NhYkNhcmQgZnJvbSBcIi4vVm9jYWJDYXJkXCJcbmltcG9ydCBCYXNpY0J1dHRvbiBmcm9tIFwiQC9saWIvY29tcG9uZW50cy9CYXNpY0J1dHRvblwiXG5pbXBvcnQgQ2FyZE1ha2VyTWFuYWdlciBmcm9tIFwiLi4vQ2FyZE1ha2VyTWFuYWdlclwiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHBhbmVsU2VsZWN0ZWRDYXJke1xuXG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBQaGFzZXIuU2NlbmUgKXtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgc2NlbmU6IFNjZW5lXG4gICAgbWFuYWdlcjogQ2FyZE1ha2VyTWFuYWdlclxuICAgIGJhY2tkcm9wOiBHYW1lT2JqZWN0cy5SZWN0YW5nbGVcbiAgICBjb250YWluZXI6IEdhbWVPYmplY3RzLkNvbnRhaW5lclxuICAgIHBhbmVsOiBHYW1lT2JqZWN0cy5SZWN0YW5nbGVcbiAgICBpbm5lclBhbmVsOiBHYW1lT2JqZWN0cy5SZWN0YW5nbGVcbiAgICBpbm5lckNvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgY2xvc2VCdXR0b246IENsb3NlQnV0dG9uXG4gICAgLy9cbiAgICBzZWxlY3RlZERlY2tLZXk6IHN0cmluZ1xuICAgIC8vIFBhbmVsXG4gICAgcGFuZWxXaWR0aDogbnVtYmVyID0gR2FtZUxpYi5zY3JlZW5XaWR0aC0xMDBcbiAgICBwYW5lbEhlaWdodDogbnVtYmVyXG4gICAgcGFuZWxQYWRkaW5nOiBudW1iZXIgPSA1MFxuICAgIC8vIENsb3NlIEJ1dHRvblxuICAgIGNsb3NlQnV0dG9uU2l6ZTogbnVtYmVyID0gMTIwIFxuICAgIC8vIFRhYiBEZWNrc1xuICAgIGRlY2tCdXR0b25TZWN0aW9uRGlmZlk6IG51bWJlclxuICAgIGRlY2tCdXR0b25QZXJSb3c6IG51bWJlciA9IDZcbiAgICBkZWNrQnV0dG9uR2FwOiBudW1iZXJcbiAgICBkZWNrQnV0dG9uUm93OiBudW1iZXJcbiAgICAvL1xuICAgIGlubmVyUGFuZWxIZWlnaHQ6IG51bWJlclxuICAgIGlubmVyUGFuZWxXaWR0aDogbnVtYmVyXG4gICAgdm9jYWJTZWN0aW9uRGlmZlk6IG51bWJlclxuICAgIHZvY2FiU2l6ZVdpZHRoOiBudW1iZXIgPSAxODBcbiAgICB2b2NhYlNpemVIZWlnaHQ6IG51bWJlciA9IFZvY2FiQ2FyZC5jYWxjdWxhdGVIZWlnaHQoMTgwKVxuICAgIHZvY2FiUGVyUm93OiBudW1iZXIgPSA0XG4gICAgdm9jYWJSb3c6IG51bWJlciA9IDNcbiAgICB2b2NhYkdhcFg6IG51bWJlclxuICAgIHZvY2FiR2FwWTogbnVtYmVyXG4gICAgLy9cbiAgICB0YWJCdXR0b25TaXplOiBudW1iZXIgPSAxMjBcbiAgICB0YWJCdXR0b25zOiBUYWJCdXR0b25EZWNrW10gPSBbXVxuICAgIC8vXG4gICAgdm9jYWJDYXJkczogVm9jYWJDYXJkW10gPSBbXVxuICAgIC8vXG4gICAgb25DYXJkU2VsZWN0ZWQ6IEZ1bmN0aW9uIHwgbnVsbFxuICAgIG9uUGFuZWxPcGVuOiBGdW5jdGlvbiB8IG51bGxcbiAgICBvblBhbmVsQ2xvc2U6IEZ1bmN0aW9uIHwgbnVsbFxuXG4gICAgY29uc3RydWN0b3IoIHNjZW5lOlNjZW5lLCBtYW5hZ2VyOiBDYXJkTWFrZXJNYW5hZ2VyLCB4Om51bWJlciwgeTpudW1iZXIgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMubWFuYWdlciA9IG1hbmFnZXJcblxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IHNjZW5lLmFkZC5jb250YWluZXIoR2FtZUxpYi5zY3JlZW5XaWR0aC8yLEdhbWVMaWIuc2NyZWVuSGVpZ2h0LzIpLnNldERlcHRoKDEwMCk7XG5cbiAgICAgICAgdGhpcy5iYWNrZHJvcCA9IHNjZW5lLmFkZC5yZWN0YW5nbGUoMCwwLEdhbWVMaWIuc2NyZWVuV2lkdGgsR2FtZUxpYi5zY3JlZW5IZWlnaHQsMHgwMDAwMDAsMC41KTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuYmFja2Ryb3ApO1xuXG4gICAgICAgIC8vIEluaXRpYWwgU2VsZWN0ZWQgRGVjayBLZXlcbiAgICAgICAgY29uc3QgZGVja3M6RGVja1tdID0gRGVja1JlcG8uZ2V0RGVja3MoKTtcblxuICAgICAgICB0aGlzLmRlY2tCdXR0b25HYXAgPSAodGhpcy5wYW5lbFdpZHRoLSB0aGlzLnBhbmVsUGFkZGluZyoyKSAvIHRoaXMuZGVja0J1dHRvblBlclJvdztcbiAgICAgICAgdGhpcy5kZWNrQnV0dG9uUm93ID0gUGhhc2VyLk1hdGguRmxvb3JUbyhkZWNrcy5sZW5ndGgvdGhpcy5kZWNrQnV0dG9uUGVyUm93KSArIDE7XG4gICAgICAgIC8vIENhbGN1bGF0ZSBUb3RhbCBQYW5lbCBIZWlnaHQgQmFzZWQgb24gQ29udGVudFxuICAgICAgICAvLyBQYWRkaW5nIFRvcFxuICAgICAgICBsZXQgdG90YWxIZWlnaHQ6bnVtYmVyID0gMDtcbiAgICAgICAgdG90YWxIZWlnaHQgKz0gdGhpcy5wYW5lbFBhZGRpbmc7IC8vIFRvcCBQYWRkaW5nXG4gICAgICAgIHRvdGFsSGVpZ2h0ICs9IHRoaXMuY2xvc2VCdXR0b25TaXplOyAvLyBDbG9zZSBCdXR0b25cbiAgICAgICAgdG90YWxIZWlnaHQgKz0gdGhpcy5wYW5lbFBhZGRpbmcvMjsgLy8gUGFkZGluZyBTbVxuICAgICAgICAvL1xuICAgICAgICB0aGlzLmRlY2tCdXR0b25TZWN0aW9uRGlmZlkgPSB0b3RhbEhlaWdodDtcbiAgICAgICAgLy9cbiAgICAgICAgdG90YWxIZWlnaHQgKz0gdGhpcy5kZWNrQnV0dG9uUm93KnRoaXMuZGVja0J1dHRvbkdhcDsgLy8gRGVjayBUYWIgQnV0dG9uc1xuICAgICAgICB0b3RhbEhlaWdodCArPSB0aGlzLnBhbmVsUGFkZGluZy8yOyAvLyBQYWRkaW5nIFNtXG4gICAgICAgIC8vXG4gICAgICAgIHRoaXMudm9jYWJTZWN0aW9uRGlmZlkgPSB0b3RhbEhlaWdodDtcbiAgICAgICAgLy9cbiAgICAgICAgbGV0IGlubmVyUGFuZWxIZWlnaHQ6IG51bWJlciA9IDA7XG4gICAgICAgIGlubmVyUGFuZWxIZWlnaHQgKz0gdGhpcy5wYW5lbFBhZGRpbmc7IC8vIElubmVyIFRvcCBQYWRkaW5nXG4gICAgICAgIGlubmVyUGFuZWxIZWlnaHQgKz0gKHRoaXMudm9jYWJTaXplSGVpZ2h0K3RoaXMucGFuZWxQYWRkaW5nKSp0aGlzLnZvY2FiUm93O1xuICAgICAgICB0aGlzLmlubmVyUGFuZWxIZWlnaHQgPSBpbm5lclBhbmVsSGVpZ2h0O1xuXG4gICAgICAgIHRvdGFsSGVpZ2h0ICs9IGlubmVyUGFuZWxIZWlnaHQ7XG4gICAgICAgIHRvdGFsSGVpZ2h0ICs9IHRoaXMucGFuZWxQYWRkaW5nOyAvLyBCb3R0b20gUGFkZGluZ1xuICAgICAgICBcbiAgICAgICAgdGhpcy5wYW5lbEhlaWdodCA9IHRvdGFsSGVpZ2h0O1xuICAgICAgICBcbiAgICAgICAgLy8gUmVuZGVyIFBhbmVsXG4gICAgICAgIHRoaXMucGFuZWwgPSBzY2VuZS5hZGQucmVjdGFuZ2xlKDAsMCx0aGlzLnBhbmVsV2lkdGgsdGhpcy5wYW5lbEhlaWdodCxHYW1lTGliLmNvbG9yUGFuZWxCZyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnBhbmVsKTtcblxuICAgICAgICBjb25zdCB0b3BSaWdodFBvczpQaGFzZXIuVHlwZXMuTWF0aC5WZWN0b3IyTGlrZSA9IHRoaXMucGFuZWwuZ2V0VG9wUmlnaHQoKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlbmRlciBDbG9zZSBCdXR0b25cbiAgICAgICAgY29uc3QgY2xvc2VCdXR0b25YOiBudW1iZXIgPSB0b3BSaWdodFBvcy54IC0gdGhpcy5wYW5lbFBhZGRpbmcgLSAodGhpcy5jbG9zZUJ1dHRvblNpemUvMik7XG4gICAgICAgIGNvbnN0IGNsb3NlQnV0dG9uWTogbnVtYmVyID0gdG9wUmlnaHRQb3MueSArIHRoaXMucGFuZWxQYWRkaW5nICsgKHRoaXMuY2xvc2VCdXR0b25TaXplLzIpO1xuICAgICAgICB0aGlzLmNsb3NlQnV0dG9uID0gbmV3IENsb3NlQnV0dG9uKHNjZW5lLGNsb3NlQnV0dG9uWCxjbG9zZUJ1dHRvblkpO1xuICAgICAgICB0aGlzLmNsb3NlQnV0dG9uLmJ1dHRvblNwcml0ZS5kaXNwbGF5SGVpZ2h0ID0gdGhpcy5jbG9zZUJ1dHRvblNpemU7XG4gICAgICAgIHRoaXMuY2xvc2VCdXR0b24uYnV0dG9uU3ByaXRlLmRpc3BsYXlXaWR0aCA9IHRoaXMuY2xvc2VCdXR0b25TaXplO1xuICAgICAgICB0aGlzLmNsb3NlQnV0dG9uLm9uUHJlc3NlZCgoKT0+e1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuY2xvc2VCdXR0b24pO1xuICAgICAgICBcbiAgICAgICAgLy8gUmVuZGVyIElubmVyIFBhbmVsXG4gICAgICAgIGNvbnN0IHJlbGF0aXZlSW5uZXJQYW5lbFk6IG51bWJlciA9IHRvcFJpZ2h0UG9zLnkgKyB0aGlzLnZvY2FiU2VjdGlvbkRpZmZZICsgKHRoaXMuaW5uZXJQYW5lbEhlaWdodC8yKTtcbiAgICAgICAgdGhpcy5pbm5lclBhbmVsV2lkdGggPSB0aGlzLnBhbmVsV2lkdGggLSAodGhpcy5wYW5lbFBhZGRpbmcqMik7XG5cbiAgICAgICAgdGhpcy5pbm5lclBhbmVsID0gc2NlbmUuYWRkLnJlY3RhbmdsZSgwLHJlbGF0aXZlSW5uZXJQYW5lbFksdGhpcy5pbm5lclBhbmVsV2lkdGgsdGhpcy5pbm5lclBhbmVsSGVpZ2h0LEdhbWVMaWIuY29sb3JQYW5lbEJnRGFyayk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmlubmVyUGFuZWwpO1xuXG4gICAgICAgIHRoaXMuaW5uZXJDb250YWluZXIgPSBzY2VuZS5hZGQuY29udGFpbmVyKDAscmVsYXRpdmVJbm5lclBhbmVsWSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmlubmVyQ29udGFpbmVyKTtcblxuICAgICAgICAvLyBDYWxjdWxhdGUgdm9jYWIgZGltZW5zaW9uXG4gICAgICAgIHRoaXMudm9jYWJHYXBYID0gKHRoaXMuaW5uZXJQYW5lbFdpZHRoIC0gKHRoaXMucGFuZWxQYWRkaW5nKSkgLyAodGhpcy52b2NhYlBlclJvdyk7XG4gICAgICAgIHRoaXMudm9jYWJHYXBZID0gdGhpcy52b2NhYlNpemVIZWlnaHQrdGhpcy5wYW5lbFBhZGRpbmc7XG5cbiAgICAgICAgdGhpcy5yZW5kZXJEZWNrVGFicyhkZWNrcyk7XG4gICAgICAgIHRoaXMuc2VsZWN0RGVja1RhYiggZGVja3NbMF0ua2V5ICk7XG5cbiAgICAgICAgdGhpcy5jb250YWluZXIuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyRGVja1RhYnMoIGRlY2tzOkRlY2tbXSApe1xuICAgICAgICAvLyBPbmNlIE9ubHlcbiAgICAgICAgY29uc3QgdG9wTGVmdFBvczpQaGFzZXIuVHlwZXMuTWF0aC5WZWN0b3IyTGlrZSA9IHRoaXMucGFuZWwuZ2V0VG9wTGVmdCgpO1xuICAgICAgICAvL1xuICAgICAgICBjb25zdCByb3dZOiBudW1iZXIgPSB0b3BMZWZ0UG9zLnkgKyB0aGlzLmRlY2tCdXR0b25TZWN0aW9uRGlmZlkgKyAodGhpcy5kZWNrQnV0dG9uR2FwLzIpO1xuICAgICAgICBjb25zdCBzdGFydFg6IG51bWJlciA9IHRvcExlZnRQb3MueCArIHRoaXMucGFuZWxQYWRkaW5nICsgKHRoaXMuZGVja0J1dHRvbkdhcC8yKVxuICAgICAgICBcbiAgICAgICAgZGVja3MuZm9yRWFjaCgoIGRlY2ssIGluZGV4KT0+e1xuICAgICAgICAgICAgbGV0IHJvdyA9IFBoYXNlci5NYXRoLkZsb29yVG8oaW5kZXgvdGhpcy5kZWNrQnV0dG9uUGVyUm93KTsgLy8gUm93IDAgLCAxXG4gICAgICAgICAgICBsZXQgcmVtYWluZGVyID0gaW5kZXgldGhpcy5kZWNrQnV0dG9uUGVyUm93O1xuXG4gICAgICAgICAgICBsZXQgcG9zWDogbnVtYmVyID0gc3RhcnRYKyh0aGlzLmRlY2tCdXR0b25HYXAqcmVtYWluZGVyKTtcbiAgICAgICAgICAgIGxldCBwb3NZOiBudW1iZXIgPSByb3dZICsgKHRoaXMuZGVja0J1dHRvbkdhcCpyb3cpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsZXQgdGFiQnV0dG9uOlRhYkJ1dHRvbkRlY2sgPSBuZXcgVGFiQnV0dG9uRGVjayh0aGlzLnNjZW5lLHBvc1gscG9zWSx0aGlzLnRhYkJ1dHRvblNpemUsZGVjayk7XG4gICAgICAgICAgICB0YWJCdXR0b24ub25QcmVzc0NhbGxiYWNrID0gKCk9PntcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdERlY2tUYWIoZGVjay5rZXkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGFiQnV0dG9uLmNvbnRhaW5lcik7XG4gICAgICAgICAgICB0aGlzLnRhYkJ1dHRvbnMucHVzaCh0YWJCdXR0b24pO1xuICAgICAgICB9KVxuICAgIH0gICBcblxuICAgIHVwZGF0ZURlY2tUYWJzKCl7XG4gICAgICAgIHRoaXMudGFiQnV0dG9ucy5mb3JFYWNoKCh0YWIpPT57XG4gICAgICAgICAgICBpZiggdGFiLmRlY2sgJiYgdGFiLmRlY2sua2V5ID09IHRoaXMuc2VsZWN0ZWREZWNrS2V5ICl7XG4gICAgICAgICAgICAgICAgdGFiLnNldFN0YXR1cygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIHRhYi5zZXRTdGF0dXMoJ2RlZmF1bHQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBzZWxlY3REZWNrVGFiKCBkZWNrS2V5OnN0cmluZyApe1xuICAgICAgICBpZiggdGhpcy5zZWxlY3RlZERlY2tLZXkgIT0gZGVja0tleSApe1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZERlY2tLZXkgPSBkZWNrS2V5O1xuXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZURlY2tUYWJzKCk7IC8vIFJlcmVuZGVyIERlY2sgVGFicyBTdGF0ZVxuICAgICAgICAgICAgdGhpcy5yZW5kZXJWb2NhYnMoKTsgLy8gUmVuZGVyIG5ldyBkZWNrIHZvY2Fic1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyVm9jYWJzKCl7XG4gICAgICAgIC8vIENsZWFyXG4gICAgICAgIGxldCBjaGlsZHJlbiA9IHRoaXMuaW5uZXJDb250YWluZXIuZ2V0QWxsKCk7XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goIChjaGlsZCk9PntcbiAgICAgICAgICAgIGNoaWxkLmRlc3Ryb3koKTtcbiAgICAgICAgfSlcbiAgICAgICAgLy8gUmVuZGVyIERlY2tcbiAgICAgICAgY29uc3QgZGVjazpEZWNrIHwgdW5kZWZpbmVkID0gRGVja1JlcG8uZ2V0RGVjayh0aGlzLnNlbGVjdGVkRGVja0tleSk7XG4gICAgICAgIFxuICAgICAgICBpZiggZGVjayAhPSB1bmRlZmluZWQgKXtcbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB3aXRoIGNvbnNpZGVyIHRvIGFkZCBpbnRvIGlubmVyIGNvbnRhaW5lclxuICAgICAgICAgICAgY29uc3Qgc3RhcnRYOiBudW1iZXIgPSAtKHRoaXMudm9jYWJHYXBYKih0aGlzLnZvY2FiUGVyUm93LTEpLzIpO1xuICAgICAgICAgICAgY29uc3Qgc3RhcnRZOiBudW1iZXIgPSAtKHRoaXMuaW5uZXJQYW5lbEhlaWdodC8yIC0gdGhpcy5wYW5lbFBhZGRpbmcgLSAodGhpcy52b2NhYlNpemVIZWlnaHQvMikgKTtcbiAgICAgICAgICAgIGRlY2sudm9jYWJzLmZvckVhY2goKHZvY2FiLGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHJvdyA9IFBoYXNlci5NYXRoLkZsb29yVG8oaW5kZXgvdGhpcy52b2NhYlBlclJvdyk7IC8vIFJvdyAwICwgMVxuICAgICAgICAgICAgICAgIGxldCByZW1haW5kZXIgPSBpbmRleCV0aGlzLnZvY2FiUGVyUm93O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxldCBwb3NYOiBudW1iZXIgPSBzdGFydFggKyAodGhpcy52b2NhYkdhcFgqcmVtYWluZGVyKTtcbiAgICAgICAgICAgICAgICBsZXQgcG9zWTogbnVtYmVyID0gc3RhcnRZICsgKHRoaXMudm9jYWJHYXBZKnJvdyk7XG5cbiAgICAgICAgICAgICAgICBsZXQgdm9jYWJDYXJkOlZvY2FiQ2FyZCA9IG5ldyBWb2NhYkNhcmQoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2NlbmUsXG4gICAgICAgICAgICAgICAgICAgIHBvc1gsXG4gICAgICAgICAgICAgICAgICAgIHBvc1ksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudm9jYWJTaXplV2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudm9jYWJTaXplSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICB2b2NhYixcbiAgICAgICAgICAgICAgICAgICAge3dpdGhGb3JnZUNvbmRpdGlvbjp0cnVlfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgdm9jYWJDYXJkLnNldEludGVyYWN0aXZlKCk7XG4gICAgICAgICAgICAgICAgdm9jYWJDYXJkLm9uUHJlc3NDYWxsYmFjayA9ICgpPT57XG4gICAgICAgICAgICAgICAgICAgIGlmKCB0aGlzLm9uQ2FyZFNlbGVjdGVkICl7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ2FyZFNlbGVjdGVkKCB0aGlzLnNlbGVjdGVkRGVja0tleSwgdm9jYWIua2V5IClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gU2V0IHZvY2FiIGNhcmQgc3RhdHVzXG4gICAgICAgICAgICAgICAgdm9jYWJDYXJkLnNldFN0YXR1cyh0aGlzLm1hbmFnZXIuZ2V0Vm9jYWJTdGF0dXModm9jYWIua2V5KSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnZvY2FiQ2FyZHMucHVzaCh2b2NhYkNhcmQpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJDb250YWluZXIuYWRkKHZvY2FiQ2FyZC5jb250YWluZXIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIC8vIFNldCBpbml0aWFsIHNlbGVjdGVkIGNhcmRcbiAgICAgICAgICAgIC8vIGlmKCAhdGhpcy5zZWxlY3RlZFZvY2FiS2V5ICYmICF0aGlzLnNlbGVjdGVkVm9jYWJJbmRleCl7XG4gICAgICAgICAgICAvLyAgICAgaWYoIGRlY2sudm9jYWJzWzBdICE9IHVuZGVmaW5lZCApe1xuICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLnNlbGVjdFZvY2FiQ2FyZChkZWNrLnZvY2Fic1swXS5rZXksMCk7XG4gICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgLy8gfWVsc2V7XG4gICAgICAgICAgICAvLyAgICAgLy8gUmVtYWluIHNhbWUgc2VsZWN0ZWQgcG9zaXRpb24gd2hlbiBjaGFuZ2UgdGFiIGJ1dCB1cGRhdGUgc2VsZWN0ZWQgY2FyZFxuICAgICAgICAgICAgLy8gICAgIGlmKCBkZWNrLnZvY2Fic1t0aGlzLnNlbGVjdGVkVm9jYWJJbmRleF0gIT0gdW5kZWZpbmVkICl7XG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuc2VsZWN0Vm9jYWJDYXJkKGRlY2sudm9jYWJzW3RoaXMuc2VsZWN0ZWRWb2NhYkluZGV4XS5rZXksdGhpcy5zZWxlY3RlZFZvY2FiSW5kZXgpO1xuICAgICAgICAgICAgLy8gICAgIH1lbHNle1xuICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLnNlbGVjdGVkVm9jYWJLZXkgPSAnJztcbiAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5ib3R0b21CdXR0b25Db25maXJtLnNldERpc2FibGVkKCB0cnVlICk7XG4gICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgLy8gfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb3Blbigpe1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRWaXNpYmxlKHRydWUpO1xuICAgICAgICBpZiggdGhpcy5vblBhbmVsT3BlbiApIHRoaXMub25QYW5lbE9wZW4oKTtcbiAgICB9XG5cbiAgICBjbG9zZSgpe1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgaWYoIHRoaXMub25QYW5lbENsb3NlICkgdGhpcy5vblBhbmVsQ2xvc2UoKTtcbiAgICB9XG59Il0sIm5hbWVzIjpbIkNsb3NlQnV0dG9uIiwiR2FtZUxpYiIsIkRlY2tSZXBvIiwiVGFiQnV0dG9uRGVjayIsIlZvY2FiQ2FyZCIsInBhbmVsU2VsZWN0ZWRDYXJkIiwicHJlbG9hZCIsInNjZW5lIiwicmVuZGVyRGVja1RhYnMiLCJkZWNrcyIsInRvcExlZnRQb3MiLCJwYW5lbCIsImdldFRvcExlZnQiLCJyb3dZIiwieSIsImRlY2tCdXR0b25TZWN0aW9uRGlmZlkiLCJkZWNrQnV0dG9uR2FwIiwic3RhcnRYIiwieCIsInBhbmVsUGFkZGluZyIsImZvckVhY2giLCJkZWNrIiwiaW5kZXgiLCJyb3ciLCJQaGFzZXIiLCJNYXRoIiwiRmxvb3JUbyIsImRlY2tCdXR0b25QZXJSb3ciLCJyZW1haW5kZXIiLCJwb3NYIiwicG9zWSIsInRhYkJ1dHRvbiIsInRhYkJ1dHRvblNpemUiLCJvblByZXNzQ2FsbGJhY2siLCJzZWxlY3REZWNrVGFiIiwia2V5IiwiY29udGFpbmVyIiwiYWRkIiwidGFiQnV0dG9ucyIsInB1c2giLCJ1cGRhdGVEZWNrVGFicyIsInRhYiIsInNlbGVjdGVkRGVja0tleSIsInNldFN0YXR1cyIsImRlY2tLZXkiLCJyZW5kZXJWb2NhYnMiLCJjaGlsZHJlbiIsImlubmVyQ29udGFpbmVyIiwiZ2V0QWxsIiwiY2hpbGQiLCJkZXN0cm95IiwiZ2V0RGVjayIsInVuZGVmaW5lZCIsInZvY2FiR2FwWCIsInZvY2FiUGVyUm93Iiwic3RhcnRZIiwiaW5uZXJQYW5lbEhlaWdodCIsInZvY2FiU2l6ZUhlaWdodCIsInZvY2FicyIsInZvY2FiIiwidm9jYWJHYXBZIiwidm9jYWJDYXJkIiwidm9jYWJTaXplV2lkdGgiLCJ3aXRoRm9yZ2VDb25kaXRpb24iLCJzZXRJbnRlcmFjdGl2ZSIsIm9uQ2FyZFNlbGVjdGVkIiwiY2xvc2UiLCJtYW5hZ2VyIiwiZ2V0Vm9jYWJTdGF0dXMiLCJ2b2NhYkNhcmRzIiwib3BlbiIsInNldFZpc2libGUiLCJvblBhbmVsT3BlbiIsIm9uUGFuZWxDbG9zZSIsImNvbnN0cnVjdG9yIiwicGFuZWxXaWR0aCIsInNjcmVlbldpZHRoIiwiY2xvc2VCdXR0b25TaXplIiwiY2FsY3VsYXRlSGVpZ2h0Iiwidm9jYWJSb3ciLCJzY3JlZW5IZWlnaHQiLCJzZXREZXB0aCIsImJhY2tkcm9wIiwicmVjdGFuZ2xlIiwiZ2V0RGVja3MiLCJkZWNrQnV0dG9uUm93IiwibGVuZ3RoIiwidG90YWxIZWlnaHQiLCJ2b2NhYlNlY3Rpb25EaWZmWSIsInBhbmVsSGVpZ2h0IiwiY29sb3JQYW5lbEJnIiwidG9wUmlnaHRQb3MiLCJnZXRUb3BSaWdodCIsImNsb3NlQnV0dG9uWCIsImNsb3NlQnV0dG9uWSIsImNsb3NlQnV0dG9uIiwiYnV0dG9uU3ByaXRlIiwiZGlzcGxheUhlaWdodCIsImRpc3BsYXlXaWR0aCIsIm9uUHJlc3NlZCIsInJlbGF0aXZlSW5uZXJQYW5lbFkiLCJpbm5lclBhbmVsV2lkdGgiLCJpbm5lclBhbmVsIiwiY29sb3JQYW5lbEJnRGFyayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/PanelSelectCard/PanelSelectCard.ts\n"));

/***/ }),

/***/ "./src/game/components/CardMaker/PanelSelectCard/TabButtonDeck.ts":
/*!************************************************************************!*\
  !*** ./src/game/components/CardMaker/PanelSelectCard/TabButtonDeck.ts ***!
  \************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TabButtonDeck; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n\nclass TabButtonDeck {\n    static preload(scene) {}\n    setStatus(status) {\n        this.status = status;\n        switch(status){\n            case \"default\":\n                this.rect.fillColor = _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelButtonDark;\n                this.icon.setTint(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelButtonTextDark);\n                this.text.setColor(Phaser.Display.Color.IntegerToColor(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelButtonTextDark).rgba);\n                this.container.setScale(1);\n                break;\n            case \"selected\":\n                this.rect.fillColor = _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelButtonLight;\n                this.icon.setTint(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelButtonTextLight);\n                this.text.setColor(Phaser.Display.Color.IntegerToColor(_lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorPanelButtonTextLight).rgba);\n                this.container.setScale(1.1);\n                break;\n            case \"disabled\":\n                this.rect.fillColor = 0xCCCCCC;\n                this.icon.setTint(0xEEEEEE);\n                this.text.setColor(\"#EEEEEE\");\n                this.container.setScale(1);\n                break;\n            default:\n                break;\n        }\n    }\n    constructor(scene, x, y, size, deck){\n        //\n        this.isDisabled = false;\n        this.scene = scene;\n        this.deck = deck;\n        this.container = scene.add.container(x, y);\n        this.rect = this.scene.add.rectangle(0, 0, size, size, 0xfca600);\n        this.icon = this.scene.add.sprite(0, -20, deck.textureKey);\n        this.icon.setDisplaySize(size - 40, size - 40);\n        this.text = this.scene.add.text(0, 40, deck.name, {\n            fontSize: 30,\n            fontFamily: \"Arial\",\n            color: \"black\",\n            align: \"center\"\n        }).setOrigin(0.5, 0.5);\n        this.rect.setInteractive();\n        this.rect.on(\"pointerdown\", ()=>{\n            if (!this.isDisabled && this.onPressCallback) {\n                this.onPressCallback();\n            }\n        }, this);\n        this.container.add(this.rect);\n        this.container.add(this.icon);\n        this.container.add(this.text);\n        this.setStatus(\"default\");\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvVGFiQnV0dG9uRGVjay50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtQztBQUlwQixNQUFNQztJQUVqQixPQUFPQyxRQUFTQyxLQUFtQixFQUFFLENBRXJDO0lBd0RBQyxVQUFXQyxNQUFjLEVBQUM7UUFDdEIsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO1FBRWQsT0FBUUE7WUFDSixLQUFLO2dCQUNELElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLEdBQUdQLHlFQUE0QjtnQkFDbEQsSUFBSSxDQUFDUyxJQUFJLENBQUNDLE9BQU8sQ0FBQ1YsNkVBQWdDO2dCQUNsRCxJQUFJLENBQUNZLElBQUksQ0FBQ0MsUUFBUSxDQUFFQyxPQUFPQyxPQUFPLENBQUNDLEtBQUssQ0FBQ0MsY0FBYyxDQUFDakIsNkVBQWdDLEVBQUVrQixJQUFJO2dCQUM5RixJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDO2dCQUN4QjtZQUNKLEtBQUs7Z0JBQ0QsSUFBSSxDQUFDZCxJQUFJLENBQUNDLFNBQVMsR0FBR1AsMEVBQTZCO2dCQUNuRCxJQUFJLENBQUNTLElBQUksQ0FBQ0MsT0FBTyxDQUFDViw4RUFBaUM7Z0JBQ25ELElBQUksQ0FBQ1ksSUFBSSxDQUFDQyxRQUFRLENBQUVDLE9BQU9DLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxjQUFjLENBQUNqQiw4RUFBaUMsRUFBRWtCLElBQUk7Z0JBQy9GLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxRQUFRLENBQUM7Z0JBQ3hCO1lBQ0osS0FBSztnQkFDRCxJQUFJLENBQUNkLElBQUksQ0FBQ0MsU0FBUyxHQUFHO2dCQUN0QixJQUFJLENBQUNFLElBQUksQ0FBQ0MsT0FBTyxDQUFDO2dCQUNsQixJQUFJLENBQUNFLElBQUksQ0FBQ0MsUUFBUSxDQUFDO2dCQUNuQixJQUFJLENBQUNNLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDO2dCQUN4QjtZQUNKO2dCQUNJO1FBQ1I7SUFDSjtJQW5FQUcsWUFBYXBCLEtBQVcsRUFBRXFCLENBQVEsRUFBRUMsQ0FBUSxFQUFFQyxJQUFXLEVBQUdDLElBQVMsQ0FBRTtRQVB2RSxFQUFFO2FBQ0ZDLGFBQXNCO1FBT2xCLElBQUksQ0FBQ3pCLEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUN3QixJQUFJLEdBQUdBO1FBRVosSUFBSSxDQUFDUixTQUFTLEdBQUdoQixNQUFNMEIsR0FBRyxDQUFDVixTQUFTLENBQUNLLEdBQUVDO1FBRXZDLElBQUksQ0FBQ25CLElBQUksR0FBRyxJQUFJLENBQUNILEtBQUssQ0FBQzBCLEdBQUcsQ0FBQ0MsU0FBUyxDQUNKLEdBQ0EsR0FDQUosTUFDQUEsTUFDQTtRQUdoQyxJQUFJLENBQUNqQixJQUFJLEdBQUcsSUFBSSxDQUFDTixLQUFLLENBQUMwQixHQUFHLENBQUNFLE1BQU0sQ0FDRCxHQUNBLENBQUMsSUFDREosS0FBS0ssVUFBVTtRQUUvQyxJQUFJLENBQUN2QixJQUFJLENBQUN3QixjQUFjLENBQUNQLE9BQUssSUFBR0EsT0FBSztRQUV0QyxJQUFJLENBQUNkLElBQUksR0FBRyxJQUFJLENBQUNULEtBQUssQ0FBQzBCLEdBQUcsQ0FBQ2pCLElBQUksQ0FBQyxHQUFFLElBQUdlLEtBQUtPLElBQUksRUFBQztZQUMzQ0MsVUFBUztZQUNUQyxZQUFZO1lBQ1pDLE9BQU87WUFDUEMsT0FBTztRQUNYLEdBQUdDLFNBQVMsQ0FBQyxLQUFJO1FBRWpCLElBQUksQ0FBQ2pDLElBQUksQ0FBQ2tDLGNBQWM7UUFDeEIsSUFBSSxDQUFDbEMsSUFBSSxDQUFDbUMsRUFBRSxDQUFDLGVBQWM7WUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQ2IsVUFBVSxJQUFJLElBQUksQ0FBQ2MsZUFBZSxFQUFFO2dCQUMxQyxJQUFJLENBQUNBLGVBQWU7WUFDeEI7UUFDSixHQUFFLElBQUk7UUFFTixJQUFJLENBQUN2QixTQUFTLENBQUNVLEdBQUcsQ0FBQyxJQUFJLENBQUN2QixJQUFJO1FBQzVCLElBQUksQ0FBQ2EsU0FBUyxDQUFDVSxHQUFHLENBQUMsSUFBSSxDQUFDcEIsSUFBSTtRQUM1QixJQUFJLENBQUNVLFNBQVMsQ0FBQ1UsR0FBRyxDQUFDLElBQUksQ0FBQ2pCLElBQUk7UUFFNUIsSUFBSSxDQUFDUixTQUFTLENBQUM7SUFDbkI7QUE2Qko7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvVGFiQnV0dG9uRGVjay50cz9lZDUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lTGliIGZyb20gXCJAL2xpYi9HYW1lTGliXCJcbmltcG9ydCB7IERlY2sgfSBmcm9tIFwiQC9saWIvcmVwb3MvRGVja1JlcG9cIlxuaW1wb3J0IHsgR2FtZU9iamVjdHMsIFNjZW5lLCBUeXBlcyB9IGZyb20gXCJwaGFzZXJcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYWJCdXR0b25EZWNre1xuXG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBQaGFzZXIuU2NlbmUgKXtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgc2NlbmU6IFNjZW5lXG4gICAgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICByZWN0OiBHYW1lT2JqZWN0cy5SZWN0YW5nbGVcbiAgICBpY29uOiBHYW1lT2JqZWN0cy5TcHJpdGVcbiAgICB0ZXh0OiBHYW1lT2JqZWN0cy5UZXh0XG4gICAgLy9cbiAgICBpc0Rpc2FibGVkOiBib29sZWFuID0gZmFsc2VcbiAgICBvblByZXNzQ2FsbGJhY2s6IEZ1bmN0aW9uIHwgbnVsbFxuICAgIC8vXG4gICAgZGVjazogRGVja1xuICAgIHN0YXR1czogc3RyaW5nXG5cbiAgICBjb25zdHJ1Y3Rvciggc2NlbmU6U2NlbmUsIHg6bnVtYmVyLCB5Om51bWJlciwgc2l6ZTpudW1iZXIgLCBkZWNrOkRlY2sgKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgICAgICB0aGlzLmRlY2sgPSBkZWNrO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuXG4gICAgICAgIHRoaXMucmVjdCA9IHRoaXMuc2NlbmUuYWRkLnJlY3RhbmdsZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4ZmNhNjAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgIHRoaXMuaWNvbiA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0yMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWNrLnRleHR1cmVLZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgIHRoaXMuaWNvbi5zZXREaXNwbGF5U2l6ZShzaXplLTQwLHNpemUtNDApO1xuICAgICAgICBcbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy5zY2VuZS5hZGQudGV4dCgwLDQwLGRlY2submFtZSx7XG4gICAgICAgICAgICBmb250U2l6ZTozMCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdBcmlhbCcsXG4gICAgICAgICAgICBjb2xvcjogJ2JsYWNrJyxcbiAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgfSkuc2V0T3JpZ2luKDAuNSwwLjUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgIHRoaXMucmVjdC5zZXRJbnRlcmFjdGl2ZSgpO1xuICAgICAgICB0aGlzLnJlY3Qub24oJ3BvaW50ZXJkb3duJywoKT0+e1xuICAgICAgICAgICAgaWYoICF0aGlzLmlzRGlzYWJsZWQgJiYgdGhpcy5vblByZXNzQ2FsbGJhY2sgKXtcbiAgICAgICAgICAgICAgICB0aGlzLm9uUHJlc3NDYWxsYmFjaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LHRoaXMpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnJlY3QpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5pY29uKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMudGV4dCk7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0dXMoJ2RlZmF1bHQnKTtcbiAgICB9XG5cbiAgICBzZXRTdGF0dXMoIHN0YXR1czogc3RyaW5nKXtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG5cbiAgICAgICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgJ2RlZmF1bHQnOlxuICAgICAgICAgICAgICAgIHRoaXMucmVjdC5maWxsQ29sb3IgPSBHYW1lTGliLmNvbG9yUGFuZWxCdXR0b25EYXJrO1xuICAgICAgICAgICAgICAgIHRoaXMuaWNvbi5zZXRUaW50KEdhbWVMaWIuY29sb3JQYW5lbEJ1dHRvblRleHREYXJrKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRleHQuc2V0Q29sb3IoIFBoYXNlci5EaXNwbGF5LkNvbG9yLkludGVnZXJUb0NvbG9yKEdhbWVMaWIuY29sb3JQYW5lbEJ1dHRvblRleHREYXJrKS5yZ2JhICk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuc2V0U2NhbGUoMSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzZWxlY3RlZCc6XG4gICAgICAgICAgICAgICAgdGhpcy5yZWN0LmZpbGxDb2xvciA9IEdhbWVMaWIuY29sb3JQYW5lbEJ1dHRvbkxpZ2h0O1xuICAgICAgICAgICAgICAgIHRoaXMuaWNvbi5zZXRUaW50KEdhbWVMaWIuY29sb3JQYW5lbEJ1dHRvblRleHRMaWdodCk7XG4gICAgICAgICAgICAgICAgdGhpcy50ZXh0LnNldENvbG9yKCBQaGFzZXIuRGlzcGxheS5Db2xvci5JbnRlZ2VyVG9Db2xvcihHYW1lTGliLmNvbG9yUGFuZWxCdXR0b25UZXh0TGlnaHQpLnJnYmEgKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRTY2FsZSgxLjEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGlzYWJsZWQnOlxuICAgICAgICAgICAgICAgIHRoaXMucmVjdC5maWxsQ29sb3IgPSAweENDQ0NDQztcbiAgICAgICAgICAgICAgICB0aGlzLmljb24uc2V0VGludCgweEVFRUVFRSk7XG4gICAgICAgICAgICAgICAgdGhpcy50ZXh0LnNldENvbG9yKCcjRUVFRUVFJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuc2V0U2NhbGUoMSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufSJdLCJuYW1lcyI6WyJHYW1lTGliIiwiVGFiQnV0dG9uRGVjayIsInByZWxvYWQiLCJzY2VuZSIsInNldFN0YXR1cyIsInN0YXR1cyIsInJlY3QiLCJmaWxsQ29sb3IiLCJjb2xvclBhbmVsQnV0dG9uRGFyayIsImljb24iLCJzZXRUaW50IiwiY29sb3JQYW5lbEJ1dHRvblRleHREYXJrIiwidGV4dCIsInNldENvbG9yIiwiUGhhc2VyIiwiRGlzcGxheSIsIkNvbG9yIiwiSW50ZWdlclRvQ29sb3IiLCJyZ2JhIiwiY29udGFpbmVyIiwic2V0U2NhbGUiLCJjb2xvclBhbmVsQnV0dG9uTGlnaHQiLCJjb2xvclBhbmVsQnV0dG9uVGV4dExpZ2h0IiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInNpemUiLCJkZWNrIiwiaXNEaXNhYmxlZCIsImFkZCIsInJlY3RhbmdsZSIsInNwcml0ZSIsInRleHR1cmVLZXkiLCJzZXREaXNwbGF5U2l6ZSIsIm5hbWUiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiLCJjb2xvciIsImFsaWduIiwic2V0T3JpZ2luIiwic2V0SW50ZXJhY3RpdmUiLCJvbiIsIm9uUHJlc3NDYWxsYmFjayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/PanelSelectCard/TabButtonDeck.ts\n"));

/***/ }),

/***/ "./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts":
/*!********************************************************************!*\
  !*** ./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VocabCardConfig: function() { return /* binding */ VocabCardConfig; },\n/* harmony export */   \"default\": function() { return /* binding */ VocabCard; }\n/* harmony export */ });\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n\nclass VocabCardConfig {\n    constructor(){\n        this.withForgeCondition = false;\n    }\n}\nclass VocabCard {\n    static preload(scene) {}\n    setInteractive() {\n        this.cardBase.setInteractive();\n        this.cardBase.on(\"pointerdown\", ()=>{\n            if (this.onPressCallback && this.canSelect) {\n                this.onPressCallback();\n            }\n        }, this);\n        this.cardBase.on(\"pointerover\", ()=>{\n            this.cardSelect.setVisible(true);\n        }, this);\n        this.cardBase.on(\"pointerout\", ()=>{\n            this.cardSelect.setVisible(false);\n        }, this);\n    }\n    setStatus(status) {\n        var // Reset Hide Icons\n        _this_cardIconOwned, _this_cardIconForge, _this_tweenPulse, _this_tweenPulse1;\n        this.status = status;\n        // Reset Clear Grayscale\n        this.containerCard.postFX.clear();\n        this.containerCard.setAlpha(1);\n        (_this_cardIconOwned = this.cardIconOwned) === null || _this_cardIconOwned === void 0 ? void 0 : _this_cardIconOwned.setVisible(false);\n        (_this_cardIconForge = this.cardIconForge) === null || _this_cardIconForge === void 0 ? void 0 : _this_cardIconForge.setVisible(false);\n        (_this_tweenPulse = this.tweenPulse) === null || _this_tweenPulse === void 0 ? void 0 : _this_tweenPulse.pause();\n        (_this_tweenPulse1 = this.tweenPulse) === null || _this_tweenPulse1 === void 0 ? void 0 : _this_tweenPulse1.reset();\n        switch(status){\n            case \"owned\":\n                var _this_cardIconOwned1, _this_cardIconOwned2;\n                this.cardBase.setTexture(\"vocabCardBase\");\n                this.vocabSprite.setVisible(true);\n                (_this_cardIconOwned1 = this.cardIconOwned) === null || _this_cardIconOwned1 === void 0 ? void 0 : _this_cardIconOwned1.setVisible(true);\n                (_this_cardIconOwned2 = this.cardIconOwned) === null || _this_cardIconOwned2 === void 0 ? void 0 : _this_cardIconOwned2.setAlpha(0.6);\n                this.containerCard.setAlpha(0.6);\n                this.canSelect = false;\n                break;\n            case \"broken\":\n                var _this_cardIconForge1;\n                this.cardBase.setTexture(\"vocabCardBase\");\n                this.vocabSprite.setVisible(true);\n                var effect = this.containerCard.postFX.addColorMatrix();\n                effect.grayscale(1, true);\n                (_this_cardIconForge1 = this.cardIconForge) === null || _this_cardIconForge1 === void 0 ? void 0 : _this_cardIconForge1.setVisible(true);\n                this.canSelect = true;\n                break;\n            default:\n                // none\n                this.cardBase.setTexture(\"vocabCardBaseBack\");\n                this.vocabSprite.setVisible(false);\n                this.vocabText.setVisible(false);\n                this.status = \"none\";\n                this.containerCard.setAlpha(0.6);\n                this.canSelect = false;\n                break;\n        }\n        if (this.canSelect) {\n            var _this_tweenPulse2;\n            (_this_tweenPulse2 = this.tweenPulse) === null || _this_tweenPulse2 === void 0 ? void 0 : _this_tweenPulse2.play();\n        }\n    }\n    clean() {\n        this.container.destroy();\n    }\n    static calculateHeight(width) {\n        return 1360 / 980 * width;\n    }\n    constructor(scene, x, y, width, height, vocab, config = new VocabCardConfig()){\n        //\n        this.canSelect = false;\n        this.scene = scene;\n        this.width = width;\n        this.height = height;\n        this.vocab = vocab;\n        this.container = scene.add.container(x, y);\n        this.containerCard = scene.add.container(0, 0);\n        const selectSize = width * 0.1;\n        this.cardSelect = this.scene.add.rectangle(0, 0, width + selectSize, this.height + selectSize, 0x98dbfa);\n        this.cardSelect.setVisible(false);\n        // BOC: Render Card\n        this.cardBase = this.scene.add.sprite(0, 0, \"vocabCardBase\");\n        this.cardBase.setDisplaySize(width, this.height);\n        this.vocabSprite = this.scene.add.sprite(0, -this.height * 0.1, vocab.textureKey);\n        this.vocabSprite.setDisplaySize(width * 0.6, width * 0.6);\n        this.vocabText = this.scene.add.text(0, this.height * 0.25, vocab.name, {\n            color: \"black\",\n            fontSize: 32,\n            fontFamily: \"Arial\",\n            wordWrap: {\n                width: width,\n                useAdvancedWrap: true\n            },\n            align: \"center\"\n        }).setOrigin(0.5, 0.5);\n        this.containerCard.add(this.cardBase);\n        this.containerCard.add(this.vocabSprite);\n        this.containerCard.add(this.vocabText);\n        // EOC\n        this.container.add(this.cardSelect);\n        this.container.add(this.containerCard);\n        if (config.withForgeCondition) {\n            const iconSize = width * 0.3;\n            // Icon Owned\n            this.cardIconOwned = this.scene.add.container(width * 0.4, this.height * 0.4);\n            let ownedCircle = this.scene.add.circle(0, 0, iconSize / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorSuccess);\n            let ownedIcon = this.scene.add.sprite(0, 0, \"iconTick\");\n            ownedIcon.setDisplaySize(iconSize / 2, iconSize / 2);\n            this.cardIconOwned.add(ownedCircle);\n            this.cardIconOwned.add(ownedIcon);\n            this.cardIconOwned.setVisible(false);\n            // Icon Forge\n            this.cardIconForge = this.scene.add.container(width * 0.4, this.height * 0.4);\n            let forgeCircle = this.scene.add.circle(0, 0, iconSize / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorYellow);\n            let forgeIcon = this.scene.add.sprite(0, 0, \"hammer\");\n            forgeIcon.setDisplaySize(iconSize * 0.8, iconSize * 0.8);\n            this.cardIconForge.add(forgeCircle);\n            this.cardIconForge.add(forgeIcon);\n            this.cardIconForge.setVisible(false);\n            this.container.add(this.cardIconOwned);\n            this.container.add(this.cardIconForge);\n            // Forge Tweens\n            this.tweenPulse = this.scene.tweens.add({\n                targets: this.container,\n                scale: 1.05,\n                ease: \"Linear\",\n                duration: 500,\n                repeat: -1,\n                yoyo: true\n            }).pause();\n        }\n        this.setStatus(\"broken\");\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvVm9jYWJDYXJkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtQztBQUk1QixNQUFNQzs7YUFDVEMscUJBQThCOztBQUNsQztBQUVlLE1BQU1DO0lBRWpCLE9BQU9DLFFBQVNDLEtBQW1CLEVBQUUsQ0FFckM7SUFxR0FDLGlCQUFnQjtRQUNaLElBQUksQ0FBQ0MsUUFBUSxDQUFDRCxjQUFjO1FBQzVCLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxFQUFFLENBQUMsZUFBYztZQUMzQixJQUFJLElBQUksQ0FBQ0MsZUFBZSxJQUFJLElBQUksQ0FBQ0MsU0FBUyxFQUFFO2dCQUN4QyxJQUFJLENBQUNELGVBQWU7WUFDeEI7UUFDSixHQUFFLElBQUk7UUFFTixJQUFJLENBQUNGLFFBQVEsQ0FBQ0MsRUFBRSxDQUFDLGVBQWM7WUFDM0IsSUFBSSxDQUFDRyxVQUFVLENBQUNDLFVBQVUsQ0FBQztRQUMvQixHQUFFLElBQUk7UUFFTixJQUFJLENBQUNMLFFBQVEsQ0FBQ0MsRUFBRSxDQUFDLGNBQWE7WUFDMUIsSUFBSSxDQUFDRyxVQUFVLENBQUNDLFVBQVUsQ0FBQztRQUMvQixHQUFFLElBQUk7SUFDVjtJQUVBQyxVQUFXQyxNQUFjLEVBQUU7WUFPdkIsbUJBQW1CO1FBQ25CLHFCQUNBLHFCQUVBLGtCQUNBO1FBWEEsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO1FBRWQsd0JBQXdCO1FBQ3hCLElBQUksQ0FBQ0MsYUFBYSxDQUFDQyxNQUFNLENBQUNDLEtBQUs7UUFDL0IsSUFBSSxDQUFDRixhQUFhLENBQUNHLFFBQVEsQ0FBQztTQUc1QiwwQkFBSSxDQUFDQyxhQUFhLGNBQWxCLDhEQUFvQlAsVUFBVSxDQUFDO1NBQy9CLDBCQUFJLENBQUNRLGFBQWEsY0FBbEIsOERBQW9CUixVQUFVLENBQUM7U0FFL0IsdUJBQUksQ0FBQ1MsVUFBVSxjQUFmLHdEQUFpQkMsS0FBSztTQUN0Qix3QkFBSSxDQUFD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O2dCQUNQQyxNQUFNO2dCQUNOQyxVQUFVO2dCQUNWQyxRQUFRLENBQUM7Z0JBQ1RDLE1BQU07WUFDVixHQUFHakQsS0FBSztRQUNaO1FBRUEsSUFBSSxDQUFDVCxTQUFTLENBQUM7SUFDbkI7QUEyRUo7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvVm9jYWJDYXJkLnRzP2RhOWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVMaWIgZnJvbSBcIkAvbGliL0dhbWVMaWJcIlxuaW1wb3J0IHsgVm9jYWIgfSBmcm9tIFwiQC9saWIvcmVwb3MvRGVja1JlcG9cIlxuaW1wb3J0IHsgR2FtZU9iamVjdHMsIFNjZW5lLCBUd2VlbnMsIFR5cGVzIH0gZnJvbSBcInBoYXNlclwiXG5cbmV4cG9ydCBjbGFzcyBWb2NhYkNhcmRDb25maWd7XG4gICAgd2l0aEZvcmdlQ29uZGl0aW9uOiBib29sZWFuID0gZmFsc2Vcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVm9jYWJDYXJke1xuXG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBQaGFzZXIuU2NlbmUgKXtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgc2NlbmU6IFNjZW5lXG4gICAgd2lkdGg6IG51bWJlclxuICAgIGhlaWdodDogbnVtYmVyXG4gICAgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBjb250YWluZXJDYXJkOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBjYXJkQmFzZTogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgdm9jYWJTcHJpdGU6IEdhbWVPYmplY3RzLlNwcml0ZVxuICAgIHZvY2FiVGV4dDogR2FtZU9iamVjdHMuVGV4dFxuICAgIGNhcmRTZWxlY3Q6IEdhbWVPYmplY3RzLlJlY3RhbmdsZVxuICAgIC8vXG4gICAgY2FyZEljb25Pd25lZDogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgY2FyZEljb25Gb3JnZTogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgLy9cbiAgICBvblByZXNzQ2FsbGJhY2s6IEZ1bmN0aW9uIHwgbnVsbFxuICAgIC8vXG4gICAgdm9jYWI6IFZvY2FiXG4gICAgYnV0dG9uU3RhdGU6IHN0cmluZyAvLyBkZWZhdWx0LCBzZWxlY3RlZCwgZGlzYWJsZWRcbiAgICBzdGF0dXM6IHN0cmluZyAvLyBvd25lZCwgYnJva2VuLCBub25lXG4gICAgLy9cbiAgICBjYW5TZWxlY3Q6IGJvb2xlYW4gPSBmYWxzZVxuICAgIHR3ZWVuUHVsc2U6IFR3ZWVucy5Ud2VlblxuXG4gICAgY29uc3RydWN0b3IoIHNjZW5lOlNjZW5lLCB4Om51bWJlciwgeTpudW1iZXIsIHdpZHRoOm51bWJlciwgaGVpZ2h0Om51bWJlciwgdm9jYWI6Vm9jYWIsIGNvbmZpZzogVm9jYWJDYXJkQ29uZmlnID0gbmV3IFZvY2FiQ2FyZENvbmZpZygpICl7XG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZTtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0XG4gICAgICAgIHRoaXMudm9jYWIgPSB2b2NhYjtcblxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IHNjZW5lLmFkZC5jb250YWluZXIoeCx5KTtcbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkID0gc2NlbmUuYWRkLmNvbnRhaW5lcigwLDApO1xuXG4gICAgICAgIGNvbnN0IHNlbGVjdFNpemU6bnVtYmVyID0gd2lkdGgqMC4xO1xuICAgICAgICB0aGlzLmNhcmRTZWxlY3QgPSB0aGlzLnNjZW5lLmFkZC5yZWN0YW5nbGUoMCwwLHdpZHRoK3NlbGVjdFNpemUsdGhpcy5oZWlnaHQrc2VsZWN0U2l6ZSwweDk4ZGJmYSk7XG4gICAgICAgIHRoaXMuY2FyZFNlbGVjdC5zZXRWaXNpYmxlKGZhbHNlKTtcblxuICAgICAgICAvLyBCT0M6IFJlbmRlciBDYXJkXG4gICAgICAgIHRoaXMuY2FyZEJhc2UgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoMCwwLCd2b2NhYkNhcmRCYXNlJyk7XG4gICAgICAgIHRoaXMuY2FyZEJhc2Uuc2V0RGlzcGxheVNpemUod2lkdGgsdGhpcy5oZWlnaHQpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy52b2NhYlNwcml0ZSA9IHRoaXMuc2NlbmUuYWRkLnNwcml0ZSgwLC10aGlzLmhlaWdodCowLjEsdm9jYWIudGV4dHVyZUtleSk7XG4gICAgICAgIHRoaXMudm9jYWJTcHJpdGUuc2V0RGlzcGxheVNpemUod2lkdGgqMC42LCB3aWR0aCowLjYpO1xuXG4gICAgICAgIHRoaXMudm9jYWJUZXh0ID0gdGhpcy5zY2VuZS5hZGQudGV4dChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGVpZ2h0KjAuMjUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9jYWIubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOidibGFjaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOjMyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250RmFtaWx5OidBcmlhbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmRXcmFwOiB7IHdpZHRoOiB3aWR0aCwgdXNlQWR2YW5jZWRXcmFwOiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduOidjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkuc2V0T3JpZ2luKDAuNSwwLjUpXG5cbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLmFkZCh0aGlzLmNhcmRCYXNlKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLmFkZCh0aGlzLnZvY2FiU3ByaXRlKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLmFkZCh0aGlzLnZvY2FiVGV4dCk7XG4gICAgICAgIC8vIEVPQ1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmNhcmRTZWxlY3QpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5jb250YWluZXJDYXJkKTtcbiAgICAgICAgXG4gICAgICAgIGlmKCBjb25maWcud2l0aEZvcmdlQ29uZGl0aW9uICl7XG4gICAgICAgICAgICBjb25zdCBpY29uU2l6ZSA9IHdpZHRoKjAuMztcbiAgICAgICAgICAgIC8vIEljb24gT3duZWRcbiAgICAgICAgICAgIHRoaXMuY2FyZEljb25Pd25lZCA9IHRoaXMuc2NlbmUuYWRkLmNvbnRhaW5lcih3aWR0aCowLjQsdGhpcy5oZWlnaHQqMC40KTtcbiAgICAgICAgICAgIGxldCBvd25lZENpcmNsZTpHYW1lT2JqZWN0cy5BcmMgPSB0aGlzLnNjZW5lLmFkZC5jaXJjbGUoMCwwLGljb25TaXplLzIsR2FtZUxpYi5jb2xvclN1Y2Nlc3MpO1xuICAgICAgICAgICAgbGV0IG93bmVkSWNvbjpHYW1lT2JqZWN0cy5TcHJpdGUgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoMCwwLCdpY29uVGljaycpO1xuICAgICAgICAgICAgb3duZWRJY29uLnNldERpc3BsYXlTaXplKGljb25TaXplLzIsaWNvblNpemUvMik7XG4gICAgICAgICAgICB0aGlzLmNhcmRJY29uT3duZWQuYWRkKG93bmVkQ2lyY2xlKTtcbiAgICAgICAgICAgIHRoaXMuY2FyZEljb25Pd25lZC5hZGQob3duZWRJY29uKTtcbiAgICAgICAgICAgIHRoaXMuY2FyZEljb25Pd25lZC5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBJY29uIEZvcmdlXG4gICAgICAgICAgICB0aGlzLmNhcmRJY29uRm9yZ2UgPSB0aGlzLnNjZW5lLmFkZC5jb250YWluZXIod2lkdGgqMC40LHRoaXMuaGVpZ2h0KjAuNCk7XG4gICAgICAgICAgICBsZXQgZm9yZ2VDaXJjbGU6R2FtZU9iamVjdHMuQXJjID0gdGhpcy5zY2VuZS5hZGQuY2lyY2xlKDAsMCxpY29uU2l6ZS8yLEdhbWVMaWIuY29sb3JZZWxsb3cpO1xuICAgICAgICAgICAgbGV0IGZvcmdlSWNvbjpHYW1lT2JqZWN0cy5TcHJpdGUgPSB0aGlzLnNjZW5lLmFkZC5zcHJpdGUoMCwwLCdoYW1tZXInKTtcbiAgICAgICAgICAgIGZvcmdlSWNvbi5zZXREaXNwbGF5U2l6ZShpY29uU2l6ZSowLjgsaWNvblNpemUqMC44KTtcbiAgICAgICAgICAgIHRoaXMuY2FyZEljb25Gb3JnZS5hZGQoZm9yZ2VDaXJjbGUpO1xuICAgICAgICAgICAgdGhpcy5jYXJkSWNvbkZvcmdlLmFkZChmb3JnZUljb24pO1xuICAgICAgICAgICAgdGhpcy5jYXJkSWNvbkZvcmdlLnNldFZpc2libGUoZmFsc2UpO1xuXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5jYXJkSWNvbk93bmVkKTtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmNhcmRJY29uRm9yZ2UpO1xuXG4gICAgICAgICAgICAvLyBGb3JnZSBUd2VlbnNcbiAgICAgICAgICAgIHRoaXMudHdlZW5QdWxzZSA9IHRoaXMuc2NlbmUudHdlZW5zLmFkZCh7XG4gICAgICAgICAgICAgICAgdGFyZ2V0czp0aGlzLmNvbnRhaW5lciwgIFxuICAgICAgICAgICAgICAgIHNjYWxlOiAxLjA1LCBcbiAgICAgICAgICAgICAgICBlYXNlOiAnTGluZWFyJyxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogNTAwLFxuICAgICAgICAgICAgICAgIHJlcGVhdDogLTEsXG4gICAgICAgICAgICAgICAgeW95bzogdHJ1ZSxcbiAgICAgICAgICAgIH0pLnBhdXNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldFN0YXR1cygnYnJva2VuJyk7XG4gICAgfVxuXG4gICAgc2V0SW50ZXJhY3RpdmUoKXtcbiAgICAgICAgdGhpcy5jYXJkQmFzZS5zZXRJbnRlcmFjdGl2ZSgpO1xuICAgICAgICB0aGlzLmNhcmRCYXNlLm9uKCdwb2ludGVyZG93bicsKCk9PntcbiAgICAgICAgICAgIGlmKCB0aGlzLm9uUHJlc3NDYWxsYmFjayAmJiB0aGlzLmNhblNlbGVjdCApe1xuICAgICAgICAgICAgICAgIHRoaXMub25QcmVzc0NhbGxiYWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sdGhpcyk7XG5cbiAgICAgICAgdGhpcy5jYXJkQmFzZS5vbigncG9pbnRlcm92ZXInLCgpPT57XG4gICAgICAgICAgICB0aGlzLmNhcmRTZWxlY3Quc2V0VmlzaWJsZSh0cnVlKTtcbiAgICAgICAgfSx0aGlzKTtcblxuICAgICAgICB0aGlzLmNhcmRCYXNlLm9uKCdwb2ludGVyb3V0JywoKT0+e1xuICAgICAgICAgICAgdGhpcy5jYXJkU2VsZWN0LnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICB9LHRoaXMpO1xuICAgIH1cblxuICAgIHNldFN0YXR1cyggc3RhdHVzOiBzdHJpbmcgKXtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG5cbiAgICAgICAgLy8gUmVzZXQgQ2xlYXIgR3JheXNjYWxlXG4gICAgICAgIHRoaXMuY29udGFpbmVyQ2FyZC5wb3N0RlguY2xlYXIoKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLnNldEFscGhhKDEpO1xuICAgICAgICBcbiAgICAgICAgLy8gUmVzZXQgSGlkZSBJY29uc1xuICAgICAgICB0aGlzLmNhcmRJY29uT3duZWQ/LnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICB0aGlzLmNhcmRJY29uRm9yZ2U/LnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy50d2VlblB1bHNlPy5wYXVzZSgpO1xuICAgICAgICB0aGlzLnR3ZWVuUHVsc2U/LnJlc2V0KCk7XG5cbiAgICAgICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgJ293bmVkJzpcbiAgICAgICAgICAgICAgICB0aGlzLmNhcmRCYXNlLnNldFRleHR1cmUoJ3ZvY2FiQ2FyZEJhc2UnKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZvY2FiU3ByaXRlLnNldFZpc2libGUodHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNhcmRJY29uT3duZWQ/LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkSWNvbk93bmVkPy5zZXRBbHBoYSgwLjYpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyQ2FyZC5zZXRBbHBoYSgwLjYpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FuU2VsZWN0ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicm9rZW4nOlxuICAgICAgICAgICAgICAgIHRoaXMuY2FyZEJhc2Uuc2V0VGV4dHVyZSgndm9jYWJDYXJkQmFzZScpO1xuICAgICAgICAgICAgICAgIHRoaXMudm9jYWJTcHJpdGUuc2V0VmlzaWJsZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB2YXIgZWZmZWN0ID0gdGhpcy5jb250YWluZXJDYXJkLnBvc3RGWC5hZGRDb2xvck1hdHJpeCgpO1xuICAgICAgICAgICAgICAgIGVmZmVjdC5ncmF5c2NhbGUoMSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNhcmRJY29uRm9yZ2U/LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW5TZWxlY3QgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAvLyBub25lXG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkQmFzZS5zZXRUZXh0dXJlKCd2b2NhYkNhcmRCYXNlQmFjaycpO1xuICAgICAgICAgICAgICAgIHRoaXMudm9jYWJTcHJpdGUuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy52b2NhYlRleHQuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXJDYXJkLnNldEFscGhhKDAuNik7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW5TZWxlY3QgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCB0aGlzLmNhblNlbGVjdCApe1xuICAgICAgICAgICAgdGhpcy50d2VlblB1bHNlPy5wbGF5KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjbGVhbigpe1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgc3RhdGljIGNhbGN1bGF0ZUhlaWdodCggd2lkdGg6bnVtYmVyICk6bnVtYmVye1xuICAgICAgICByZXR1cm4gMTM2MC85ODAqd2lkdGg7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJHYW1lTGliIiwiVm9jYWJDYXJkQ29uZmlnIiwid2l0aEZvcmdlQ29uZGl0aW9uIiwiVm9jYWJDYXJkIiwicHJlbG9hZCIsInNjZW5lIiwic2V0SW50ZXJhY3RpdmUiLCJjYXJkQmFzZSIsIm9uIiwib25QcmVzc0NhbGxiYWNrIiwiY2FuU2VsZWN0IiwiY2FyZFNlbGVjdCIsInNldFZpc2libGUiLCJzZXRTdGF0dXMiLCJzdGF0dXMiLCJjb250YWluZXJDYXJkIiwicG9zdEZYIiwiY2xlYXIiLCJzZXRBbHBoYSIsImNhcmRJY29uT3duZWQiLCJjYXJkSWNvbkZvcmdlIiwidHdlZW5QdWxzZSIsInBhdXNlIiwicmVzZXQiLCJzZXRUZXh0dXJlIiwidm9jYWJTcHJpdGUiLCJlZmZlY3QiLCJhZGRDb2xvck1hdHJpeCIsImdyYXlzY2FsZSIsInZvY2FiVGV4dCIsInBsYXkiLCJjbGVhbiIsImNvbnRhaW5lciIsImRlc3Ryb3kiLCJjYWxjdWxhdGVIZWlnaHQiLCJ3aWR0aCIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJoZWlnaHQiLCJ2b2NhYiIsImNvbmZpZyIsImFkZCIsInNlbGVjdFNpemUiLCJyZWN0YW5nbGUiLCJzcHJpdGUiLCJzZXREaXNwbGF5U2l6ZSIsInRleHR1cmVLZXkiLCJ0ZXh0IiwibmFtZSIsImNvbG9yIiwiZm9udFNpemUiLCJmb250RmFtaWx5Iiwid29yZFdyYXAiLCJ1c2VBZHZhbmNlZFdyYXAiLCJhbGlnbiIsInNldE9yaWdpbiIsImljb25TaXplIiwib3duZWRDaXJjbGUiLCJjaXJjbGUiLCJjb2xvclN1Y2Nlc3MiLCJvd25lZEljb24iLCJmb3JnZUNpcmNsZSIsImNvbG9yWWVsbG93IiwiZm9yZ2VJY29uIiwidHdlZW5zIiwidGFyZ2V0cyIsInNjYWxlIiwiZWFzZSIsImR1cmF0aW9uIiwicmVwZWF0IiwieW95byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts\n"));

/***/ }),

/***/ "./src/game/scenes/CardMaker.ts":
/*!**************************************!*\
  !*** ./src/game/scenes/CardMaker.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardMaker: function() { return /* binding */ CardMaker; }\n/* harmony export */ });\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! phaser */ \"./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/GameLib */ \"./src/lib/GameLib.ts\");\n/* harmony import */ var _lib_components_CloseButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/components/CloseButton */ \"./src/lib/components/CloseButton.ts\");\n/* harmony import */ var _components_HammerBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/HammerBar */ \"./src/game/components/HammerBar.ts\");\n/* harmony import */ var _lib_components_SpriteButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/components/SpriteButton */ \"./src/lib/components/SpriteButton.ts\");\n/* harmony import */ var _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/repos/DeckRepo */ \"./src/lib/repos/DeckRepo.ts\");\n/* harmony import */ var _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/components/BasicButton */ \"./src/lib/components/BasicButton.ts\");\n/* harmony import */ var _components_ForgeBar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/ForgeBar */ \"./src/game/components/ForgeBar.ts\");\n/* harmony import */ var _components_CardMakerManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/CardMakerManager */ \"./src/game/components/CardMakerManager.ts\");\n/* harmony import */ var _components_CardMaker_PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/CardMaker/PanelSelectCard/VocabCard */ \"./src/game/components/CardMaker/PanelSelectCard/VocabCard.ts\");\n/* harmony import */ var _components_CardMaker_PanelSelectCard_PanelSelectCard__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/CardMaker/PanelSelectCard/PanelSelectCard */ \"./src/game/components/CardMaker/PanelSelectCard/PanelSelectCard.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass CardMaker extends phaser__WEBPACK_IMPORTED_MODULE_1__.Scene {\n    preload() {\n        _components_HammerBar__WEBPACK_IMPORTED_MODULE_4__[\"default\"].preload(this);\n        //\n        this.load.image(\"buttonAdd\", \"assets/adventure/cardmaker/buttonAdd.png\");\n        this.load.image(\"vocabCardBase\", \"assets/adventure/decks/vocabCardBase.png\");\n        this.load.image(\"vocabCardBaseBack\", \"assets/adventure/decks/vocabCardBaseBack.png\");\n    }\n    create() {\n        // Reset Data\n        this.statusResult = \"forging\";\n        this.selectedDeckKey = \"\";\n        this.selectedVocabKey = \"\";\n        this.cardMakerManager = new _components_CardMakerManager__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this);\n        const bg = this.add.rectangle(_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight, 0xeeeeee);\n        const backButton = new _lib_components_CloseButton__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth - 100, 100).setScale(0.5);\n        backButton.onPressedCallback = ()=>{\n            this.scene.start(\"MainMenu\");\n        };\n        // Main Circle\n        const startY = _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight / 3 * 1;\n        this.mainCircle = this.add.circle(_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, startY, 250, 0xffffff);\n        this.mainCircle.setStrokeStyle(10, 0x000000);\n        this.noCardDisplay = this.add.text(this.mainCircle.x, this.mainCircle.y, \"?\", {\n            fontSize: \"300px\",\n            fontFamily: \"Arial\",\n            color: \"#c0c0c0\"\n        }).setOrigin(0.5, 0.5).setVisible(false);\n        // Select Card\n        this.panelSelectCard = new _components_CardMaker_PanelSelectCard_PanelSelectCard__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this, this.cardMakerManager, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight / 2);\n        this.panelSelectCard.onPanelOpen = ()=>{\n            this.canInput = false;\n        };\n        this.panelSelectCard.onPanelClose = ()=>{\n            this.canInput = true;\n        };\n        this.panelSelectCard.onCardSelected = (deckKey, vocabKey)=>{\n            this.selectedDeckKey = deckKey;\n            this.selectedVocabKey = vocabKey;\n            this.renderSelectedCard();\n        };\n        this.buttonSelectCard = new _lib_components_SpriteButton__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.mainCircle.x + this.mainCircle.radius, this.mainCircle.y, \"buttonAdd\");\n        this.buttonSelectCard.onPressedCallback = ()=>{\n            if (this.currentForgeState == \"prepare\") {\n                if (!this.canInput) return;\n                this.panelSelectCard.open();\n            }\n        };\n        // this.hammerBar = new HammerBar(this,GameLib.screenWidth/2,startY-300);\n        // this.hammerBar.renderHammer(this.currentHammer, this.maxHammer);\n        this.forgeBar = new _components_ForgeBar__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, 320);\n        this.buttonStartForge = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight / 2 + 100, \"Forge\", \"md\");\n        this.buttonStartForge.onPressedCallback = ()=>{\n            if (!this.canInput) return;\n            this.setForgeState(\"forge\");\n        };\n        this.buttonCancelForge = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight / 2, \"Cancel\", \"md\");\n        this.buttonCancelForge.onPressedCallback = ()=>{\n            if (!this.canInput) return;\n            this.setForgeState(\"prepare\");\n        };\n        this.renderSelectedCard();\n        this.renderButtonForge();\n        this.setForgeState(\"prepare\");\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"current-scene-ready\", this);\n    }\n    renderSelectedCard() {\n        // clear\n        if (this.selectedVocab) {\n            this.selectedVocab.clean();\n            this.selectedVocab = null;\n        }\n        let canForge = false;\n        this.noCardDisplay.setVisible(true);\n        if (this.selectedDeckKey && this.selectedVocabKey) {\n            const vocab = _lib_repos_DeckRepo__WEBPACK_IMPORTED_MODULE_6__.DeckRepo.getVocab(this.selectedDeckKey, this.selectedVocabKey);\n            if (vocab != undefined) {\n                //\n                this.noCardDisplay.setVisible(false);\n                this.selectedVocab = new _components_CardMaker_PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this, this.mainCircle.x, this.mainCircle.y, 250, _components_CardMaker_PanelSelectCard_VocabCard__WEBPACK_IMPORTED_MODULE_10__[\"default\"].calculateHeight(250), vocab);\n                canForge = true;\n            }\n        }\n        if (canForge) {\n            this.buttonStartForge.setDisabled(false);\n        } else {\n            this.buttonStartForge.setDisabled(true);\n        }\n    }\n    renderButtonForge() {\n        this.buttonActionForge = this.add.container(_lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenWidth / 2, _lib_GameLib__WEBPACK_IMPORTED_MODULE_2__[\"default\"].screenHeight * 0.75);\n        let spriteBase = this.add.sprite(0, 0, \"buttonCircleAction\");\n        let spriteHammer = this.add.sprite(0, 0, \"hammer\").setRotation(Phaser.Math.DegToRad(45));\n        this.buttonActionForge.add(spriteBase);\n        this.buttonActionForge.add(spriteHammer);\n        spriteBase.setInteractive();\n        spriteBase.on(\"pointerdown\", ()=>{\n            this.buttonActionForge.setScale(1);\n            if (!this.canInput) return;\n            this.setForgeState(\"forge\");\n        }, this);\n        spriteBase.on(\"pointerover\", ()=>{\n            this.buttonActionForge.setScale(1.05);\n        }, this);\n        spriteBase.on(\"pointerout\", ()=>{\n            this.buttonActionForge.setScale(1);\n        }, this);\n    }\n    // renderDebug(){\n    //     this.debugContainer = this.add.container(GameLib.screenWidth/2,GameLib.screenHeight/4*3);\n    //     this.debugButtonSuccess = new DebugButton( this, -GameLib.screenWidth/4, 0, 'Success');\n    //     this.debugButtonSuccess.onPressedCallback = ()=>{\n    //         this.forgeSuccess();\n    //     }\n    //     this.debugButtonFailed = new DebugButton( this, GameLib.screenWidth/4, 0, 'Failed');\n    //     this.debugButtonFailed.onPressedCallback = ()=>{\n    //         this.forgeFailed();\n    //     }\n    //     this.debugForgeText = this.add.text(0,300,'Forge Text',{fontSize:'40px',color:'black'}).setOrigin(0.5,0.5);\n    //     this.debugContainer.add(this.debugButtonSuccess);\n    //     this.debugContainer.add(this.debugButtonFailed);\n    //     this.debugContainer.add(this.debugForgeText);\n    //     this.debugContainer.setVisible(false);\n    // }\n    setForgeState(forgeState) {\n        if (!this.forgeStates.includes(forgeState)) return;\n        this.currentForgeState = forgeState;\n        switch(forgeState){\n            case \"prepare\":\n                this.startPrepare();\n                break;\n            case \"forge\":\n                break;\n            case \"result\":\n                break;\n            default:\n                break;\n        }\n    }\n    startPrepare() {\n        this.buttonSelectCard.setVisible(true);\n        this.buttonStartForge.setVisible(true);\n        this.buttonCancelForge.setVisible(false);\n    // this.hammerBar.container.setVisible(false);\n    // this.debugContainer.setVisible(false);\n    }\n    constructor(){\n        super(\"CardMaker\");\n        this.forgeStates = [\n            \"prepare\",\n            \"forge\",\n            \"result\"\n        ];\n        //\n        this.canInput = true;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QztJQUM3QztJQTlMQTBDLGFBQ0E7UUFDSSxLQUFLLENBQUM7YUF2Q1ZILGNBQXdCO1lBQUM7WUFBVTtZQUFTO1NBQVM7UUF5QnJELEVBQUU7YUFDRnBDLFdBQW9CO0lBY3BCO0FBa1FKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL3NjZW5lcy9DYXJkTWFrZXIudHM/NTZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJy4uL0V2ZW50QnVzJztcbmltcG9ydCB7IFNjZW5lLCBHYW1lT2JqZWN0cywgR2FtZSB9IGZyb20gJ3BoYXNlcic7XG5pbXBvcnQgR2FtZUxpYiBmcm9tICdAL2xpYi9HYW1lTGliJztcbmltcG9ydCBDbG9zZUJ1dHRvbiBmcm9tICdAL2xpYi9jb21wb25lbnRzL0Nsb3NlQnV0dG9uJztcbmltcG9ydCBIYW1tZXJCYXIgZnJvbSAnLi4vY29tcG9uZW50cy9IYW1tZXJCYXInO1xuaW1wb3J0IFNwcml0ZUJ1dHRvbiBmcm9tICdAL2xpYi9jb21wb25lbnRzL1Nwcml0ZUJ1dHRvbic7XG5pbXBvcnQgeyBEZWNrUmVwbywgVm9jYWIgfSBmcm9tICdAL2xpYi9yZXBvcy9EZWNrUmVwbyc7XG5pbXBvcnQgRGVidWdCdXR0b24gZnJvbSAnQC9saWIvY29tcG9uZW50cy9EZWJ1Z0J1dHRvbic7XG5pbXBvcnQgQmFzaWNCdXR0b24gZnJvbSAnQC9saWIvY29tcG9uZW50cy9CYXNpY0J1dHRvbic7XG5pbXBvcnQgRm9yZ2VCYXIgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JnZUJhcic7XG5pbXBvcnQgQ2FyZE1ha2VyTWFuYWdlciBmcm9tICcuLi9jb21wb25lbnRzL0NhcmRNYWtlck1hbmFnZXInO1xuaW1wb3J0IFZvY2FiQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmRNYWtlci9QYW5lbFNlbGVjdENhcmQvVm9jYWJDYXJkJztcbmltcG9ydCBQYW5lbFNlbGVjdENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkTWFrZXIvUGFuZWxTZWxlY3RDYXJkL1BhbmVsU2VsZWN0Q2FyZCc7XG5cbmV4cG9ydCBjbGFzcyBDYXJkTWFrZXIgZXh0ZW5kcyBTY2VuZVxue1xuICAgIGNhcmRNYWtlck1hbmFnZXI6IENhcmRNYWtlck1hbmFnZXJcbiAgICBmb3JnZVN0YXRlczogc3RyaW5nW10gPSBbJ3ByZXBhcmUnLCdmb3JnZScsICdyZXN1bHQnXVxuICAgIGN1cnJlbnRGb3JnZVN0YXRlOiBzdHJpbmdcbiAgICBzdGF0dXNSZXN1bHQ6IHN0cmluZ1xuICAgIC8vIFNlbGVjdGVkIFZvY2FiXG4gICAgc2VsZWN0ZWREZWNrS2V5OiBzdHJpbmdcbiAgICBzZWxlY3RlZFZvY2FiS2V5OiBzdHJpbmdcbiAgICAvLyBcbiAgICAvLyBHYW1lT2JqZWN0c1xuICAgIG1haW5DaXJjbGU6IEdhbWVPYmplY3RzLkFyY1xuICAgIG5vQ2FyZERpc3BsYXk6IEdhbWVPYmplY3RzLlRleHRcbiAgICBzZWxlY3RlZFZvY2FiOiBWb2NhYkNhcmQgfCBudWxsXG4gICAgaGFtbWVyQmFyOiBIYW1tZXJCYXJcbiAgICBmb3JnZUJhcjogRm9yZ2VCYXJcbiAgICBidXR0b25TZWxlY3RDYXJkOiBTcHJpdGVCdXR0b25cbiAgICBidXR0b25TdGFydEZvcmdlOiBCYXNpY0J1dHRvblxuICAgIGJ1dHRvbkNhbmNlbEZvcmdlOiBCYXNpY0J1dHRvblxuICAgIC8vXG4gICAgYnV0dG9uQWN0aW9uRm9yZ2U6IEdhbWVPYmplY3RzLkNvbnRhaW5lclxuICAgIC8vIFBhbmVsIFNlbGVjdCBDYXJkc1xuICAgIHBhbmVsU2VsZWN0Q2FyZDogUGFuZWxTZWxlY3RDYXJkXG4gICAgLy9cbiAgICBkZWJ1Z0NvbnRhaW5lcjogR2FtZU9iamVjdHMuQ29udGFpbmVyXG4gICAgZGVidWdCdXR0b25TdWNjZXNzOiBEZWJ1Z0J1dHRvblxuICAgIGRlYnVnQnV0dG9uRmFpbGVkOiBEZWJ1Z0J1dHRvblxuICAgIGRlYnVnRm9yZ2VUZXh0OiBHYW1lT2JqZWN0cy5UZXh0XG4gICAgLy9cbiAgICBjYW5JbnB1dDogYm9vbGVhbiA9IHRydWVcblxuICAgIHByZWxvYWQgKClcbiAgICB7XG4gICAgICAgIEhhbW1lckJhci5wcmVsb2FkKHRoaXMpO1xuICAgICAgICAvL1xuICAgICAgICB0aGlzLmxvYWQuaW1hZ2UoJ2J1dHRvbkFkZCcsJ2Fzc2V0cy9hZHZlbnR1cmUvY2FyZG1ha2VyL2J1dHRvbkFkZC5wbmcnKTtcbiAgICAgICAgdGhpcy5sb2FkLmltYWdlKCd2b2NhYkNhcmRCYXNlJywnYXNzZXRzL2FkdmVudHVyZS9kZWNrcy92b2NhYkNhcmRCYXNlLnBuZycpO1xuICAgICAgICB0aGlzLmxvYWQuaW1hZ2UoJ3ZvY2FiQ2FyZEJhc2VCYWNrJywnYXNzZXRzL2FkdmVudHVyZS9kZWNrcy92b2NhYkNhcmRCYXNlQmFjay5wbmcnKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvciAoKVxuICAgIHtcbiAgICAgICAgc3VwZXIoJ0NhcmRNYWtlcicpO1xuICAgIH1cbiAgICBcbiAgICBjcmVhdGUgKClcbiAgICB7XG4gICAgICAgIC8vIFJlc2V0IERhdGFcbiAgICAgICAgdGhpcy5zdGF0dXNSZXN1bHQgPSBcImZvcmdpbmdcIjtcbiAgICAgICAgdGhpcy5zZWxlY3RlZERlY2tLZXkgPSBcIlwiO1xuICAgICAgICB0aGlzLnNlbGVjdGVkVm9jYWJLZXkgPSBcIlwiO1xuXG4gICAgICAgIHRoaXMuY2FyZE1ha2VyTWFuYWdlciA9IG5ldyBDYXJkTWFrZXJNYW5hZ2VyKHRoaXMpO1xuXG4gICAgICAgIGNvbnN0IGJnID0gdGhpcy5hZGQucmVjdGFuZ2xlKEdhbWVMaWIuc2NyZWVuV2lkdGgvMiwgR2FtZUxpYi5zY3JlZW5IZWlnaHQvMiwgR2FtZUxpYi5zY3JlZW5XaWR0aCwgR2FtZUxpYi5zY3JlZW5IZWlnaHQsIDB4ZWVlZWVlKTtcblxuICAgICAgICBjb25zdCBiYWNrQnV0dG9uID0gbmV3IENsb3NlQnV0dG9uKHRoaXMsR2FtZUxpYi5zY3JlZW5XaWR0aCAtIDEwMCwgMTAwKS5zZXRTY2FsZSgwLjUpO1xuICAgICAgICBiYWNrQnV0dG9uLm9uUHJlc3NlZENhbGxiYWNrID0gKCk9PntcbiAgICAgICAgICAgIHRoaXMuc2NlbmUuc3RhcnQoJ01haW5NZW51Jyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBNYWluIENpcmNsZVxuICAgICAgICBjb25zdCBzdGFydFkgPSBHYW1lTGliLnNjcmVlbkhlaWdodC8zKjE7XG4gICAgICAgIHRoaXMubWFpbkNpcmNsZSA9IHRoaXMuYWRkLmNpcmNsZShHYW1lTGliLnNjcmVlbldpZHRoLzIsIHN0YXJ0WSwgMjUwLCAweGZmZmZmZik7XG4gICAgICAgIHRoaXMubWFpbkNpcmNsZS5zZXRTdHJva2VTdHlsZSgxMCwgMHgwMDAwMDApO1xuXG4gICAgICAgIHRoaXMubm9DYXJkRGlzcGxheSA9IHRoaXMuYWRkLnRleHQodGhpcy5tYWluQ2lyY2xlLngsdGhpcy5tYWluQ2lyY2xlLnksJz8nLHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAnMzAwcHgnLFxuICAgICAgICAgICAgZm9udEZhbWlseTogJ0FyaWFsJyxcbiAgICAgICAgICAgIGNvbG9yOiAnI2MwYzBjMCcsXG4gICAgICAgIH0pLnNldE9yaWdpbigwLjUsMC41KS5zZXRWaXNpYmxlKGZhbHNlKTtcblxuICAgICAgICAvLyBTZWxlY3QgQ2FyZFxuICAgICAgICB0aGlzLnBhbmVsU2VsZWN0Q2FyZCA9IG5ldyBQYW5lbFNlbGVjdENhcmQodGhpcyx0aGlzLmNhcmRNYWtlck1hbmFnZXIsR2FtZUxpYi5zY3JlZW5XaWR0aC8yLEdhbWVMaWIuc2NyZWVuSGVpZ2h0LzIpO1xuICAgICAgICB0aGlzLnBhbmVsU2VsZWN0Q2FyZC5vblBhbmVsT3BlbiA9ICgpPT57XG4gICAgICAgICAgICB0aGlzLmNhbklucHV0ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYW5lbFNlbGVjdENhcmQub25QYW5lbENsb3NlID0gKCk9PntcbiAgICAgICAgICAgIHRoaXMuY2FuSW5wdXQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFuZWxTZWxlY3RDYXJkLm9uQ2FyZFNlbGVjdGVkID0gKCBkZWNrS2V5OnN0cmluZywgdm9jYWJLZXk6c3RyaW5nKT0+e1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZERlY2tLZXkgPSBkZWNrS2V5O1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFZvY2FiS2V5ID0gdm9jYWJLZXk7XG5cbiAgICAgICAgICAgIHRoaXMucmVuZGVyU2VsZWN0ZWRDYXJkKCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmJ1dHRvblNlbGVjdENhcmQgPSBuZXcgU3ByaXRlQnV0dG9uKCBcbiAgICAgICAgICAgIHRoaXMsIFxuICAgICAgICAgICAgdGhpcy5tYWluQ2lyY2xlLnggKyB0aGlzLm1haW5DaXJjbGUucmFkaXVzLCBcbiAgICAgICAgICAgIHRoaXMubWFpbkNpcmNsZS55LCBcbiAgICAgICAgICAgICdidXR0b25BZGQnIFxuICAgICAgICApO1xuICAgICAgICB0aGlzLmJ1dHRvblNlbGVjdENhcmQub25QcmVzc2VkQ2FsbGJhY2sgPSAoKT0+e1xuICAgICAgICAgICAgaWYoIHRoaXMuY3VycmVudEZvcmdlU3RhdGUgPT0gJ3ByZXBhcmUnICl7XG4gICAgICAgICAgICAgICAgaWYoICF0aGlzLmNhbklucHV0ICkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5wYW5lbFNlbGVjdENhcmQub3BlbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyB0aGlzLmhhbW1lckJhciA9IG5ldyBIYW1tZXJCYXIodGhpcyxHYW1lTGliLnNjcmVlbldpZHRoLzIsc3RhcnRZLTMwMCk7XG4gICAgICAgIC8vIHRoaXMuaGFtbWVyQmFyLnJlbmRlckhhbW1lcih0aGlzLmN1cnJlbnRIYW1tZXIsIHRoaXMubWF4SGFtbWVyKTtcblxuICAgICAgICB0aGlzLmZvcmdlQmFyID0gbmV3IEZvcmdlQmFyKHRoaXMsR2FtZUxpYi5zY3JlZW5XaWR0aC8yLDMyMCk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLmJ1dHRvblN0YXJ0Rm9yZ2UgPSBuZXcgQmFzaWNCdXR0b24odGhpcyxHYW1lTGliLnNjcmVlbldpZHRoLzIsR2FtZUxpYi5zY3JlZW5IZWlnaHQvMisxMDAsJ0ZvcmdlJywnbWQnKTtcbiAgICAgICAgdGhpcy5idXR0b25TdGFydEZvcmdlLm9uUHJlc3NlZENhbGxiYWNrID0gKCk9PntcbiAgICAgICAgICAgIGlmKCAhdGhpcy5jYW5JbnB1dCApIHJldHVybjtcblxuICAgICAgICAgICAgdGhpcy5zZXRGb3JnZVN0YXRlKCdmb3JnZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5idXR0b25DYW5jZWxGb3JnZSA9IG5ldyBCYXNpY0J1dHRvbih0aGlzLEdhbWVMaWIuc2NyZWVuV2lkdGgvMixHYW1lTGliLnNjcmVlbkhlaWdodC8yLCdDYW5jZWwnLCdtZCcpO1xuICAgICAgICB0aGlzLmJ1dHRvbkNhbmNlbEZvcmdlLm9uUHJlc3NlZENhbGxiYWNrID0gKCk9PntcbiAgICAgICAgICAgIGlmKCAhdGhpcy5jYW5JbnB1dCApIHJldHVybjtcblxuICAgICAgICAgICAgdGhpcy5zZXRGb3JnZVN0YXRlKCdwcmVwYXJlJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnJlbmRlclNlbGVjdGVkQ2FyZCgpO1xuICAgICAgICB0aGlzLnJlbmRlckJ1dHRvbkZvcmdlKCk7XG5cbiAgICAgICAgdGhpcy5zZXRGb3JnZVN0YXRlKCdwcmVwYXJlJyk7XG5cbiAgICAgICAgRXZlbnRCdXMuZW1pdCgnY3VycmVudC1zY2VuZS1yZWFkeScsIHRoaXMpO1xuICAgIH1cbiAgICBcbiAgICByZW5kZXJTZWxlY3RlZENhcmQoKXtcbiAgICAgICAgLy8gY2xlYXJcbiAgICAgICAgaWYoIHRoaXMuc2VsZWN0ZWRWb2NhYiApe1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFZvY2FiLmNsZWFuKCk7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkVm9jYWIgPSBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBsZXQgY2FuRm9yZ2U6Ym9vbGVhbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLm5vQ2FyZERpc3BsYXkuc2V0VmlzaWJsZSh0cnVlKTtcbiAgICAgICAgXG4gICAgICAgIGlmKCB0aGlzLnNlbGVjdGVkRGVja0tleSAmJiB0aGlzLnNlbGVjdGVkVm9jYWJLZXkgKXtcbiAgICAgICAgICAgIGNvbnN0IHZvY2FiOlZvY2FiIHwgdW5kZWZpbmVkID0gRGVja1JlcG8uZ2V0Vm9jYWIodGhpcy5zZWxlY3RlZERlY2tLZXksdGhpcy5zZWxlY3RlZFZvY2FiS2V5KTtcbiAgICAgICAgICAgIGlmKCB2b2NhYiAhPSB1bmRlZmluZWQgKXtcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIHRoaXMubm9DYXJkRGlzcGxheS5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVm9jYWIgPSBuZXcgVm9jYWJDYXJkKHRoaXMsdGhpcy5tYWluQ2lyY2xlLngsdGhpcy5tYWluQ2lyY2xlLnksMjUwLFZvY2FiQ2FyZC5jYWxjdWxhdGVIZWlnaHQoMjUwKSx2b2NhYik7XG5cbiAgICAgICAgICAgICAgICBjYW5Gb3JnZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiggY2FuRm9yZ2UgKXtcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhcnRGb3JnZS5zZXREaXNhYmxlZChmYWxzZSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgdGhpcy5idXR0b25TdGFydEZvcmdlLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyQnV0dG9uRm9yZ2UoKXtcblxuICAgICAgICB0aGlzLmJ1dHRvbkFjdGlvbkZvcmdlID0gdGhpcy5hZGQuY29udGFpbmVyKEdhbWVMaWIuc2NyZWVuV2lkdGgvMixHYW1lTGliLnNjcmVlbkhlaWdodCowLjc1KTtcbiAgICAgICAgXG4gICAgICAgIGxldCBzcHJpdGVCYXNlOiBHYW1lT2JqZWN0cy5TcHJpdGUgPSB0aGlzLmFkZC5zcHJpdGUoMCwwLCdidXR0b25DaXJjbGVBY3Rpb24nKTtcbiAgICAgICAgbGV0IHNwcml0ZUhhbW1lcjogR2FtZU9iamVjdHMuU3ByaXRlID0gdGhpcy5hZGQuc3ByaXRlKDAsMCwnaGFtbWVyJykuc2V0Um90YXRpb24oUGhhc2VyLk1hdGguRGVnVG9SYWQoNDUpKTtcblxuICAgICAgICB0aGlzLmJ1dHRvbkFjdGlvbkZvcmdlLmFkZChzcHJpdGVCYXNlKTtcbiAgICAgICAgdGhpcy5idXR0b25BY3Rpb25Gb3JnZS5hZGQoc3ByaXRlSGFtbWVyKTtcbiAgICAgICAgXG4gICAgICAgIHNwcml0ZUJhc2Uuc2V0SW50ZXJhY3RpdmUoKTtcbiAgICAgICAgc3ByaXRlQmFzZS5vbigncG9pbnRlcmRvd24nLCgpPT57XG4gICAgICAgICAgICB0aGlzLmJ1dHRvbkFjdGlvbkZvcmdlLnNldFNjYWxlKDEpO1xuXG4gICAgICAgICAgICBpZiggIXRoaXMuY2FuSW5wdXQgKSByZXR1cm47XG4gICAgICAgICAgICB0aGlzLnNldEZvcmdlU3RhdGUoJ2ZvcmdlJyk7XG5cbiAgICAgICAgfSx0aGlzKTtcbiAgICAgICAgc3ByaXRlQmFzZS5vbigncG9pbnRlcm92ZXInLCgpPT57XG4gICAgICAgICAgICB0aGlzLmJ1dHRvbkFjdGlvbkZvcmdlLnNldFNjYWxlKDEuMDUpO1xuICAgICAgICB9LHRoaXMpO1xuICAgICAgICBzcHJpdGVCYXNlLm9uKCdwb2ludGVyb3V0JywoKT0+e1xuICAgICAgICAgICAgdGhpcy5idXR0b25BY3Rpb25Gb3JnZS5zZXRTY2FsZSgxKTtcbiAgICAgICAgfSx0aGlzKTtcbiAgICB9XG5cbiAgICAvLyByZW5kZXJEZWJ1Zygpe1xuICAgIC8vICAgICB0aGlzLmRlYnVnQ29udGFpbmVyID0gdGhpcy5hZGQuY29udGFpbmVyKEdhbWVMaWIuc2NyZWVuV2lkdGgvMixHYW1lTGliLnNjcmVlbkhlaWdodC80KjMpO1xuICAgIC8vICAgICB0aGlzLmRlYnVnQnV0dG9uU3VjY2VzcyA9IG5ldyBEZWJ1Z0J1dHRvbiggdGhpcywgLUdhbWVMaWIuc2NyZWVuV2lkdGgvNCwgMCwgJ1N1Y2Nlc3MnKTtcbiAgICAvLyAgICAgdGhpcy5kZWJ1Z0J1dHRvblN1Y2Nlc3Mub25QcmVzc2VkQ2FsbGJhY2sgPSAoKT0+e1xuICAgIC8vICAgICAgICAgdGhpcy5mb3JnZVN1Y2Nlc3MoKTtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIHRoaXMuZGVidWdCdXR0b25GYWlsZWQgPSBuZXcgRGVidWdCdXR0b24oIHRoaXMsIEdhbWVMaWIuc2NyZWVuV2lkdGgvNCwgMCwgJ0ZhaWxlZCcpO1xuICAgIC8vICAgICB0aGlzLmRlYnVnQnV0dG9uRmFpbGVkLm9uUHJlc3NlZENhbGxiYWNrID0gKCk9PntcbiAgICAvLyAgICAgICAgIHRoaXMuZm9yZ2VGYWlsZWQoKTtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIHRoaXMuZGVidWdGb3JnZVRleHQgPSB0aGlzLmFkZC50ZXh0KDAsMzAwLCdGb3JnZSBUZXh0Jyx7Zm9udFNpemU6JzQwcHgnLGNvbG9yOidibGFjayd9KS5zZXRPcmlnaW4oMC41LDAuNSk7XG5cbiAgICAvLyAgICAgdGhpcy5kZWJ1Z0NvbnRhaW5lci5hZGQodGhpcy5kZWJ1Z0J1dHRvblN1Y2Nlc3MpO1xuICAgIC8vICAgICB0aGlzLmRlYnVnQ29udGFpbmVyLmFkZCh0aGlzLmRlYnVnQnV0dG9uRmFpbGVkKTtcbiAgICAvLyAgICAgdGhpcy5kZWJ1Z0NvbnRhaW5lci5hZGQodGhpcy5kZWJ1Z0ZvcmdlVGV4dCk7XG4gICAgLy8gICAgIHRoaXMuZGVidWdDb250YWluZXIuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgLy8gfVxuXG4gICAgc2V0Rm9yZ2VTdGF0ZSggZm9yZ2VTdGF0ZTpzdHJpbmcgKXtcbiAgICAgICAgaWYoICF0aGlzLmZvcmdlU3RhdGVzLmluY2x1ZGVzKGZvcmdlU3RhdGUpICkgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuY3VycmVudEZvcmdlU3RhdGUgPSBmb3JnZVN0YXRlO1xuXG4gICAgICAgIHN3aXRjaCAoZm9yZ2VTdGF0ZSkge1xuICAgICAgICAgICAgY2FzZSAncHJlcGFyZSc6XG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydFByZXBhcmUoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2ZvcmdlJzpcbiAgICAgICAgICAgICAgICAvLyB0aGlzLnN0YXJ0Rm9yZ2UoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3Jlc3VsdCc6XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhcnRQcmVwYXJlKCl7XG4gICAgICAgIHRoaXMuYnV0dG9uU2VsZWN0Q2FyZC5zZXRWaXNpYmxlKHRydWUpO1xuICAgICAgICB0aGlzLmJ1dHRvblN0YXJ0Rm9yZ2Uuc2V0VmlzaWJsZSh0cnVlKTtcblxuICAgICAgICB0aGlzLmJ1dHRvbkNhbmNlbEZvcmdlLnNldFZpc2libGUoZmFsc2UpO1xuICAgICAgICAvLyB0aGlzLmhhbW1lckJhci5jb250YWluZXIuc2V0VmlzaWJsZShmYWxzZSk7XG5cbiAgICAgICAgLy8gdGhpcy5kZWJ1Z0NvbnRhaW5lci5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICB9XG5cbiAgICAvLyBzdGFydEZvcmdlKCl7XG4gICAgLy8gICAgIC8vIFJlc2V0IEZvcmdlIFZhbHVlXG4gICAgLy8gICAgIHRoaXMuY3VycmVudEhhbW1lciA9IHRoaXMubWF4SGFtbWVyO1xuICAgIC8vICAgICB0aGlzLmN1cnJlbnRJbWFnZSA9IDA7XG4gICAgLy8gICAgIHRoaXMuY3VycmVudFRleHQgPSAwO1xuICAgIC8vICAgICB0aGlzLmN1cnJlbnRBdWRpbyA9IDA7XG4gICAgLy8gICAgIHRoaXMuc3RhdHVzUmVzdWx0ID0gJ2ZvcmdpbmcnO1xuXG4gICAgLy8gICAgIC8vIFNob3cgSGlkZSBFbGVtZW50XG4gICAgLy8gICAgIHRoaXMuYnV0dG9uU2VsZWN0Q2FyZC5zZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAvLyAgICAgdGhpcy5idXR0b25TdGFydEZvcmdlLnNldFZpc2libGUoZmFsc2UpO1xuXG4gICAgLy8gICAgIHRoaXMuYnV0dG9uQ2FuY2VsRm9yZ2Uuc2V0VmlzaWJsZSh0cnVlKTtcbiAgICAvLyAgICAgdGhpcy5oYW1tZXJCYXIuY29udGFpbmVyLnNldFZpc2libGUodHJ1ZSk7XG5cbiAgICAvLyAgICAgdGhpcy5kZWJ1Z0NvbnRhaW5lci5zZXRWaXNpYmxlKHRydWUpO1xuXG4gICAgLy8gICAgIHRoaXMudXBkYXRlRm9yZ2VVSSgpO1xuICAgIC8vIH1cblxuICAgIC8vIGZvcmdlU3VjY2Vzcygpe1xuICAgIC8vICAgICAvLyBhZGQgSW1hZ2UgPiBUZXh0ID4gQXVkaW9cbiAgICAvLyAgICAgaWYoIHRoaXMuY3VycmVudEltYWdlIDwgdGhpcy50YXJnZXRJbWFnZSApe1xuICAgIC8vICAgICAgICAgdGhpcy5jdXJyZW50SW1hZ2UgKz0gMTtcbiAgICAvLyAgICAgfWVsc2UgaWYoIHRoaXMuY3VycmVudFRleHQgPCB0aGlzLnRhcmdldFRleHQgKXtcbiAgICAvLyAgICAgICAgIHRoaXMuY3VycmVudFRleHQgKz0gMTtcbiAgICAvLyAgICAgfWVsc2UgaWYoIHRoaXMuY3VycmVudEF1ZGlvIDwgdGhpcy50YXJnZXRBdWRpbyApe1xuICAgIC8vICAgICAgICAgdGhpcy5jdXJyZW50QXVkaW8gKz0gMTtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIGlmKCB0aGlzLmN1cnJlbnRJbWFnZSA+IHRoaXMudGFyZ2V0SW1hZ2UgKSB0aGlzLmN1cnJlbnRJbWFnZSA9IHRoaXMudGFyZ2V0SW1hZ2VcbiAgICAvLyAgICAgaWYoIHRoaXMuY3VycmVudFRleHQgPiB0aGlzLnRhcmdldFRleHQgKSB0aGlzLmN1cnJlbnRUZXh0ID0gdGhpcy50YXJnZXRUZXh0XG4gICAgLy8gICAgIGlmKCB0aGlzLmN1cnJlbnRBdWRpbyA+IHRoaXMudGFyZ2V0QXVkaW8gKSB0aGlzLmN1cnJlbnRBdWRpbyA9IHRoaXMudGFyZ2V0QXVkaW9cblxuICAgIC8vICAgICBpZiggdGhpcy5jdXJyZW50SW1hZ2UgPT0gdGhpcy50YXJnZXRJbWFnZSBcbiAgICAvLyAgICAgICAgICYmIHRoaXMuY3VycmVudFRleHQgPT0gdGhpcy50YXJnZXRUZXh0XG4gICAgLy8gICAgICAgICAmJiB0aGlzLmN1cnJlbnRBdWRpbyA9PSB0aGlzLnRhcmdldEF1ZGlvXG4gICAgLy8gICAgICl7XG4gICAgLy8gICAgICAgICB0aGlzLnN0YXR1c1Jlc3VsdCA9ICdzdWNjZXNzJztcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIHRoaXMudXBkYXRlRm9yZ2VVSSgpO1xuICAgIC8vIH1cblxuICAgIC8vIGZvcmdlRmFpbGVkKCl7XG4gICAgLy8gICAgIHRoaXMuY3VycmVudEhhbW1lciAtPSAxO1xuXG4gICAgLy8gICAgIGlmKCB0aGlzLmN1cnJlbnRIYW1tZXIgPCAwICkgdGhpcy5jdXJyZW50SGFtbWVyID0gMDtcblxuICAgIC8vICAgICBpZiggdGhpcy5jdXJyZW50SGFtbWVyID09IDAgKXtcbiAgICAvLyAgICAgICAgIHRoaXMuc3RhdHVzUmVzdWx0ID0gJ2ZhaWxlZCc7XG4gICAgLy8gICAgIH1cblxuICAgIC8vICAgICB0aGlzLnVwZGF0ZUZvcmdlVUkoKTtcbiAgICAvLyB9XG5cbiAgICAvLyB1cGRhdGVGb3JnZVVJKCl7XG4gICAgLy8gICAgIHRoaXMuaGFtbWVyQmFyLnJlbmRlckhhbW1lcih0aGlzLmN1cnJlbnRIYW1tZXIsIHRoaXMubWF4SGFtbWVyKTtcblxuICAgIC8vICAgICBpZiggdGhpcy5kZWJ1Z0ZvcmdlVGV4dCApe1xuICAgIC8vICAgICAgICAgbGV0IHRleHQ6c3RyaW5nID0gJyc7XG4gICAgLy8gICAgICAgICB0ZXh0ICs9ICdUYXJnZXQ6ICc7XG4gICAgLy8gICAgICAgICB0ZXh0ICs9IHRoaXMuY3VycmVudEltYWdlICsgJy8nICsgdGhpcy5jdXJyZW50VGV4dCArICcvJyArIHRoaXMuY3VycmVudEF1ZGlvO1xuICAgIC8vICAgICAgICAgdGV4dCArPSAnIC0tLSAnO1xuICAgIC8vICAgICAgICAgdGV4dCArPSAnU3RhdHVzOiAnO1xuICAgIC8vICAgICAgICAgdGV4dCArPSB0aGlzLnN0YXR1c1Jlc3VsdDtcbiAgICAvLyAgICAgICAgIHRoaXMuZGVidWdGb3JnZVRleHQuc2V0VGV4dCh0ZXh0KTtcbiAgICAvLyAgICAgfVxuICAgIC8vIH1cbn1cbiJdLCJuYW1lcyI6WyJFdmVudEJ1cyIsIlNjZW5lIiwiR2FtZUxpYiIsIkNsb3NlQnV0dG9uIiwiSGFtbWVyQmFyIiwiU3ByaXRlQnV0dG9uIiwiRGVja1JlcG8iLCJCYXNpY0J1dHRvbiIsIkZvcmdlQmFyIiwiQ2FyZE1ha2VyTWFuYWdlciIsIlZvY2FiQ2FyZCIsIlBhbmVsU2VsZWN0Q2FyZCIsIkNhcmRNYWtlciIsInByZWxvYWQiLCJsb2FkIiwiaW1hZ2UiLCJjcmVhdGUiLCJzdGF0dXNSZXN1bHQiLCJzZWxlY3RlZERlY2tLZXkiLCJzZWxlY3RlZFZvY2FiS2V5IiwiY2FyZE1ha2VyTWFuYWdlciIsImJnIiwiYWRkIiwicmVjdGFuZ2xlIiwic2NyZWVuV2lkdGgiLCJzY3JlZW5IZWlnaHQiLCJiYWNrQnV0dG9uIiwic2V0U2NhbGUiLCJvblByZXNzZWRDYWxsYmFjayIsInNjZW5lIiwic3RhcnQiLCJzdGFydFkiLCJtYWluQ2lyY2xlIiwiY2lyY2xlIiwic2V0U3Ryb2tlU3R5bGUiLCJub0NhcmREaXNwbGF5IiwidGV4dCIsIngiLCJ5IiwiZm9udFNpemUiLCJmb250RmFtaWx5IiwiY29sb3IiLCJzZXRPcmlnaW4iLCJzZXRWaXNpYmxlIiwicGFuZWxTZWxlY3RDYXJkIiwib25QYW5lbE9wZW4iLCJjYW5JbnB1dCIsIm9uUGFuZWxDbG9zZSIsIm9uQ2FyZFNlbGVjdGVkIiwiZGVja0tleSIsInZvY2FiS2V5IiwicmVuZGVyU2VsZWN0ZWRDYXJkIiwiYnV0dG9uU2VsZWN0Q2FyZCIsInJhZGl1cyIsImN1cnJlbnRGb3JnZVN0YXRlIiwib3BlbiIsImZvcmdlQmFyIiwiYnV0dG9uU3RhcnRGb3JnZSIsInNldEZvcmdlU3RhdGUiLCJidXR0b25DYW5jZWxGb3JnZSIsInJlbmRlckJ1dHRvbkZvcmdlIiwiZW1pdCIsInNlbGVjdGVkVm9jYWIiLCJjbGVhbiIsImNhbkZvcmdlIiwidm9jYWIiLCJnZXRWb2NhYiIsInVuZGVmaW5lZCIsImNhbGN1bGF0ZUhlaWdodCIsInNldERpc2FibGVkIiwiYnV0dG9uQWN0aW9uRm9yZ2UiLCJjb250YWluZXIiLCJzcHJpdGVCYXNlIiwic3ByaXRlIiwic3ByaXRlSGFtbWVyIiwic2V0Um90YXRpb24iLCJQaGFzZXIiLCJNYXRoIiwiRGVnVG9SYWQiLCJzZXRJbnRlcmFjdGl2ZSIsIm9uIiwiZm9yZ2VTdGF0ZSIsImZvcmdlU3RhdGVzIiwiaW5jbHVkZXMiLCJzdGFydFByZXBhcmUiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/scenes/CardMaker.ts\n"));

/***/ })

});