"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeFeedbackSuccess.ts":
/*!***************************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeFeedbackSuccess.ts ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ forgeFeedbackSuccess; }\n/* harmony export */ });\nclass forgeFeedbackSuccess {\n    static preload(scene) {}\n    //\n    constructor(scene, x, y){\n        this.scene = scene;\n        this.oriX = x;\n        this.oriY = y;\n        this.container = scene.add.container(x, y);\n        let size = 50;\n        this.sprite = scene.add.sprite(0, 0, \"forgeFeedbackSuccess\");\n        this.sprite.setDisplaySize(size, size);\n        this.container.add(this.sprite);\n        // Move to Forge Bar\n        this.scene.tweens.chain({\n            targets: this.container,\n            tweens: [\n                {\n                    // x: \"-=100\",\n                    y: \"-=50\",\n                    scale: 2,\n                    duration: 200\n                },\n                {\n                    // x: \"-=50\",\n                    y: \"+=50\",\n                    scale: 3,\n                    duration: 200,\n                    ease: \"Bounce\"\n                },\n                {\n                    x: this.scene.forgeBar.oriX,\n                    y: this.scene.forgeBar.oriY,\n                    duration: 200,\n                    delay: 300\n                }\n            ],\n            onComplete: ()=>{\n                this.scene.events.emit(\"forge-feedback\");\n                this.container.destroy();\n            }\n        });\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZUZlZWRiYWNrU3VjY2Vzcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBR2UsTUFBTUE7SUFFakIsT0FBT0MsUUFBU0MsS0FBWSxFQUFFLENBRTlCO0lBU0EsRUFBRTtJQUVGQyxZQUFhRCxLQUFlLEVBQUVFLENBQVMsRUFBRUMsQ0FBUyxDQUFFO1FBQ2hELElBQUksQ0FBQ0gsS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0ksSUFBSSxHQUFHRjtRQUNaLElBQUksQ0FBQ0csSUFBSSxHQUFHRjtRQUVaLElBQUksQ0FBQ0csU0FBUyxHQUFHTixNQUFNTyxHQUFHLENBQUNELFNBQVMsQ0FBQ0osR0FBRUM7UUFFdkMsSUFBSUssT0FBYztRQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBR1QsTUFBTU8sR0FBRyxDQUFDRSxNQUFNLENBQUMsR0FBRSxHQUFFO1FBQ25DLElBQUksQ0FBQ0EsTUFBTSxDQUFDQyxjQUFjLENBQUNGLE1BQUtBO1FBRWhDLElBQUksQ0FBQ0YsU0FBUyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDRSxNQUFNO1FBRTlCLG9CQUFvQjtRQUNwQixJQUFJLENBQUNULEtBQUssQ0FBQ1csTUFBTSxDQUFDQyxLQUFLLENBQ25CO1lBQ0lDLFNBQVMsSUFBSSxDQUFDUCxTQUFTO1lBQ3ZCSyxRQUFRO2dCQUNKO29CQUNJLGNBQWM7b0JBQ2RSLEdBQUc7b0JBQ0hXLE9BQU87b0JBQ1BDLFVBQVU7Z0JBQ2Q7Z0JBQ0E7b0JBQ0ksYUFBYTtvQkFDYlosR0FBRztvQkFDSFcsT0FBTztvQkFDUEMsVUFBVTtvQkFDVkMsTUFBTTtnQkFDVjtnQkFDQTtvQkFDSWQsR0FBRyxJQUFJLENBQUNGLEtBQUssQ0FBQ2lCLFFBQVEsQ0FBQ2IsSUFBSTtvQkFDM0JELEdBQUcsSUFBSSxDQUFDSCxLQUFLLENBQUNpQixRQUFRLENBQUNaLElBQUk7b0JBQzNCVSxVQUFVO29CQUNWRyxPQUFNO2dCQUNWO2FBQ0g7WUFDREMsWUFBWTtnQkFDUixJQUFJLENBQUNuQixLQUFLLENBQUNvQixNQUFNLENBQUNDLElBQUksQ0FBQztnQkFDdkIsSUFBSSxDQUFDZixTQUFTLENBQUNnQixPQUFPO1lBQzFCO1FBQ0o7SUFFUjtBQUNKO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2dhbWUvY29tcG9uZW50cy9DYXJkTWFrZXIvRm9yZ2VGZWVkYmFja1N1Y2Nlc3MudHM/NjUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXJkTWFrZXIgfSBmcm9tIFwiQC9nYW1lL3NjZW5lcy9DYXJkTWFrZXJcIlxuaW1wb3J0IHsgR2FtZU9iamVjdHMsIFNjZW5lIH0gZnJvbSBcInBoYXNlclwiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGZvcmdlRmVlZGJhY2tTdWNjZXNze1xuXG4gICAgc3RhdGljIHByZWxvYWQoIHNjZW5lOiBTY2VuZSApe1xuXG4gICAgfVxuXG4gICAgc2NlbmU6IENhcmRNYWtlclxuICAgIG9yaVg6IG51bWJlclxuICAgIG9yaVk6IG51bWJlclxuICAgIC8vXG4gICAgaGl0RWZmZWN0OiBHYW1lT2JqZWN0cy5TcHJpdGVcbiAgICBjb250YWluZXI6IEdhbWVPYmplY3RzLkNvbnRhaW5lclxuICAgIHNwcml0ZTogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgLy9cblxuICAgIGNvbnN0cnVjdG9yKCBzY2VuZTpDYXJkTWFrZXIsIHg6IG51bWJlciwgeTogbnVtYmVyICl7XG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgICAgICB0aGlzLm9yaVggPSB4XG4gICAgICAgIHRoaXMub3JpWSA9IHlcblxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IHNjZW5lLmFkZC5jb250YWluZXIoeCx5KTtcbiAgICAgICAgXG4gICAgICAgIGxldCBzaXplOm51bWJlciA9IDUwO1xuICAgICAgICB0aGlzLnNwcml0ZSA9IHNjZW5lLmFkZC5zcHJpdGUoMCwwLCdmb3JnZUZlZWRiYWNrU3VjY2VzcycpO1xuICAgICAgICB0aGlzLnNwcml0ZS5zZXREaXNwbGF5U2l6ZShzaXplLHNpemUpO1xuXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLnNwcml0ZSk7XG5cbiAgICAgICAgLy8gTW92ZSB0byBGb3JnZSBCYXJcbiAgICAgICAgdGhpcy5zY2VuZS50d2VlbnMuY2hhaW4oXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0czogdGhpcy5jb250YWluZXIsXG4gICAgICAgICAgICAgICAgdHdlZW5zOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHg6IFwiLT0xMDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHk6IFwiLT01MFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGU6IDIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwLFxuICAgICAgICAgICAgICAgICAgICB9LCAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHg6IFwiLT01MFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeTogXCIrPTUwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZTogMyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBlYXNlOiAnQm91bmNlJ1xuICAgICAgICAgICAgICAgICAgICB9LCAgIFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiB0aGlzLnNjZW5lLmZvcmdlQmFyLm9yaVgsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiB0aGlzLnNjZW5lLmZvcmdlQmFyLm9yaVksXG4gICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXk6MzAwXG4gICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBvbkNvbXBsZXRlOiAoKT0+e1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNjZW5lLmV2ZW50cy5lbWl0KCdmb3JnZS1mZWVkYmFjaycpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApXG4gICAgfVxufSJdLCJuYW1lcyI6WyJmb3JnZUZlZWRiYWNrU3VjY2VzcyIsInByZWxvYWQiLCJzY2VuZSIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJvcmlYIiwib3JpWSIsImNvbnRhaW5lciIsImFkZCIsInNpemUiLCJzcHJpdGUiLCJzZXREaXNwbGF5U2l6ZSIsInR3ZWVucyIsImNoYWluIiwidGFyZ2V0cyIsInNjYWxlIiwiZHVyYXRpb24iLCJlYXNlIiwiZm9yZ2VCYXIiLCJkZWxheSIsIm9uQ29tcGxldGUiLCJldmVudHMiLCJlbWl0IiwiZGVzdHJveSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeFeedbackSuccess.ts\n"));

/***/ })

});