"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_AppLearn_tsx",{

/***/ "./src/learn/components/ProgressRenderer.ts":
/*!**************************************************!*\
  !*** ./src/learn/components/ProgressRenderer.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Progress: function() { return /* binding */ Progress; },\n/* harmony export */   \"default\": function() { return /* binding */ ProgressRenderer; }\n/* harmony export */ });\n/* harmony import */ var _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/components/BasicButton */ \"./src/lib/components/BasicButton.ts\");\n\nclass Progress {\n}\nclass ProgressRenderer {\n    updateProgress(currentProgress) {\n        let canStart = false;\n        let isDone = false;\n        currentProgress.forEach((current)=>{\n            if (current == this.progress.key) {\n                isDone = true;\n            }\n            if (this.progress.requirement != undefined) {\n                if (current == this.progress.requirement) {\n                    canStart = true;\n                }\n            } else {\n                canStart = true;\n            }\n        });\n        // reset\n        this.button.setDisabled(true);\n        if (canStart) {}\n    }\n    constructor(scene, x, y, progress){\n        this.isOpen = false;\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n        this.progress = progress;\n        this.container = this.scene.add.container(x, y);\n        this.button = new _lib_components_BasicButton__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.scene, 0, 0, progress.name.zh, \"md\");\n        this.container.add(this.button);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGVhcm4vY29tcG9uZW50cy9Qcm9ncmVzc1JlbmRlcmVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUd1RDtBQUdoRCxNQUFNQztBQUtiO0FBRWUsTUFBTUM7SUF5QmpCQyxlQUFnQkMsZUFBOEIsRUFBRTtRQUM1QyxJQUFJQyxXQUFvQjtRQUN4QixJQUFJQyxTQUFrQjtRQUN0QkYsZ0JBQWdCRyxPQUFPLENBQUMsQ0FBQ0M7WUFDckIsSUFBSUEsV0FBVyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsR0FBRyxFQUFFO2dCQUM5QkosU0FBUztZQUNiO1lBRUEsSUFBSSxJQUFJLENBQUNHLFFBQVEsQ0FBQ0UsV0FBVyxJQUFJQyxXQUFXO2dCQUN4QyxJQUFJSixXQUFXLElBQUksQ0FBQ0MsUUFBUSxDQUFDRSxXQUFXLEVBQUU7b0JBQ3RDTixXQUFXO2dCQUNmO1lBQ0osT0FBSztnQkFDREEsV0FBVztZQUNmO1FBQ0o7UUFFQSxRQUFRO1FBQ1IsSUFBSSxDQUFDUSxNQUFNLENBQUNDLFdBQVcsQ0FBQztRQUN4QixJQUFJVCxVQUFVLENBRWQ7SUFDSjtJQWxDQVUsWUFBWUMsS0FBVyxFQUFFQyxDQUFRLEVBQUVDLENBQVEsRUFBRVQsUUFBa0IsQ0FBQzthQUhoRVUsU0FBa0I7UUFJZCxJQUFJLENBQUNILEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNDLENBQUMsR0FBR0E7UUFDVCxJQUFJLENBQUNDLENBQUMsR0FBR0E7UUFDVCxJQUFJLENBQUNULFFBQVEsR0FBR0E7UUFFaEIsSUFBSSxDQUFDVyxTQUFTLEdBQUcsSUFBSSxDQUFDSixLQUFLLENBQUNLLEdBQUcsQ0FBQ0QsU0FBUyxDQUFDSCxHQUFFQztRQUU1QyxJQUFJLENBQUNMLE1BQU0sR0FBRyxJQUFJYixtRUFBV0EsQ0FBQyxJQUFJLENBQUNnQixLQUFLLEVBQUMsR0FBRSxHQUFFUCxTQUFTYSxJQUFJLENBQUNDLEVBQUUsRUFBQztRQUM5RCxJQUFJLENBQUNILFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ1IsTUFBTTtJQUNsQztBQXlCSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9sZWFybi9jb21wb25lbnRzL1Byb2dyZXNzUmVuZGVyZXIudHM/ZTE0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2FtZUxpYiBmcm9tIFwiQC9saWIvR2FtZUxpYlwiO1xuaW1wb3J0IHsgR2FtZU9iamVjdHMsIFNjZW5lLCBUd2VlbnMgfSBmcm9tIFwicGhhc2VyXCJcbmltcG9ydCB7IFRyYW5zbGF0YWJsZSB9IGZyb20gXCIuL1F1ZXN0aW9uR2VuZXJhdG9yXCI7XG5pbXBvcnQgQmFzaWNCdXR0b24gZnJvbSBcIkAvbGliL2NvbXBvbmVudHMvQmFzaWNCdXR0b25cIjtcbmltcG9ydCB7IERpYWxvZ0RhdGEgfSBmcm9tIFwiLi4vcmVwb3MvZGF0YS9EaWFsb2dEYXRhXCI7XG5cbmV4cG9ydCBjbGFzcyBQcm9ncmVzc3tcbiAgICBrZXk6IHN0cmluZ1xuICAgIG5hbWU6IFRyYW5zbGF0YWJsZVxuICAgIGRpYWxvZ0RhdGE6IERpYWxvZ0RhdGFcbiAgICByZXF1aXJlbWVudD86IHN0cmluZyBcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZ3Jlc3NSZW5kZXJlcntcbiAgICBwcml2YXRlIHNjZW5lOiBTY2VuZVxuICAgIHByaXZhdGUgeDogbnVtYmVyXG4gICAgcHJpdmF0ZSB5OiBudW1iZXJcbiAgICBwcml2YXRlIHByb2dyZXNzOiBQcm9ncmVzc1xuICAgIC8vXG4gICAgY29udGFpbmVyOiBHYW1lT2JqZWN0cy5Db250YWluZXJcbiAgICBidXR0b246IEJhc2ljQnV0dG9uIFxuICAgIHN0YXR1czogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgXG4gICAgaXNPcGVuOiBib29sZWFuID0gZmFsc2VcbiAgICBvbk9wZW5DYWxsYmFjazogKCkgPT4gdm9pZFxuXG4gICAgY29uc3RydWN0b3Ioc2NlbmU6U2NlbmUsIHg6bnVtYmVyLCB5Om51bWJlciwgcHJvZ3Jlc3M6IFByb2dyZXNzKXtcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMueCA9IHhcbiAgICAgICAgdGhpcy55ID0geVxuICAgICAgICB0aGlzLnByb2dyZXNzID0gcHJvZ3Jlc3NcblxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IHRoaXMuc2NlbmUuYWRkLmNvbnRhaW5lcih4LHkpO1xuXG4gICAgICAgIHRoaXMuYnV0dG9uID0gbmV3IEJhc2ljQnV0dG9uKHRoaXMuc2NlbmUsMCwwLHByb2dyZXNzLm5hbWUuemgsJ21kJyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmJ1dHRvbik7XG4gICAgfVxuXG4gICAgdXBkYXRlUHJvZ3Jlc3MoIGN1cnJlbnRQcm9ncmVzczogQXJyYXk8c3RyaW5nPiApe1xuICAgICAgICBsZXQgY2FuU3RhcnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgbGV0IGlzRG9uZTogYm9vbGVhbiA9IGZhbHNlO1xuICAgICAgICBjdXJyZW50UHJvZ3Jlc3MuZm9yRWFjaCgoY3VycmVudCk9PntcbiAgICAgICAgICAgIGlmKCBjdXJyZW50ID09IHRoaXMucHJvZ3Jlc3Mua2V5ICl7XG4gICAgICAgICAgICAgICAgaXNEb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYoIHRoaXMucHJvZ3Jlc3MucmVxdWlyZW1lbnQgIT0gdW5kZWZpbmVkICl7XG4gICAgICAgICAgICAgICAgaWYoIGN1cnJlbnQgPT0gdGhpcy5wcm9ncmVzcy5yZXF1aXJlbWVudCApe1xuICAgICAgICAgICAgICAgICAgICBjYW5TdGFydCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgY2FuU3RhcnQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIC8vIHJlc2V0XG4gICAgICAgIHRoaXMuYnV0dG9uLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICBpZiggY2FuU3RhcnQgKXtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6WyJCYXNpY0J1dHRvbiIsIlByb2dyZXNzIiwiUHJvZ3Jlc3NSZW5kZXJlciIsInVwZGF0ZVByb2dyZXNzIiwiY3VycmVudFByb2dyZXNzIiwiY2FuU3RhcnQiLCJpc0RvbmUiLCJmb3JFYWNoIiwiY3VycmVudCIsInByb2dyZXNzIiwia2V5IiwicmVxdWlyZW1lbnQiLCJ1bmRlZmluZWQiLCJidXR0b24iLCJzZXREaXNhYmxlZCIsImNvbnN0cnVjdG9yIiwic2NlbmUiLCJ4IiwieSIsImlzT3BlbiIsImNvbnRhaW5lciIsImFkZCIsIm5hbWUiLCJ6aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/learn/components/ProgressRenderer.ts\n"));

/***/ })

});