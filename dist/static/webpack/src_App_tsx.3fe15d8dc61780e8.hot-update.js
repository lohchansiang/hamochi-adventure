"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_App_tsx",{

/***/ "./src/game/components/CardMaker/ForgeButton.ts":
/*!******************************************************!*\
  !*** ./src/game/components/CardMaker/ForgeButton.ts ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ForgeButton; }\n/* harmony export */ });\nclass ForgeButton extends Phaser.GameObjects.Container {\n    static preload(scene) {\n    //\n    }\n    setDisabled(isDisabled) {\n        this.isDisabled = isDisabled;\n        // Update render\n        if (this) {\n            if (this.isDisabled) {\n                var effect = this.postFX.addColorMatrix();\n                effect.grayscale(1, true);\n            } else {\n                this.postFX.clear();\n            }\n        }\n    }\n    constructor(scene, x = 0, y = 0){\n        super(scene, x, y, []);\n        this.isDisabled = false;\n        this.scene = scene;\n        this.spriteBase = this.scene.add.sprite(0, 0, \"buttonCircleAction\");\n        this.spriteHammer = this.scene.add.sprite(0, 0, \"hammer\").setRotation(Phaser.Math.DegToRad(45));\n        this.add(this.spriteBase);\n        this.add(this.spriteHammer);\n        this.spriteBase.setInteractive();\n        this.spriteBase.on(\"pointerdown\", ()=>{\n            if (this.isDisabled) return;\n            this.setScale(1);\n            if (this.onPressedCallback) this.onPressedCallback();\n        }, this);\n        this.spriteBase.on(\"pointerover\", ()=>{\n            if (this.isDisabled) return;\n            this.setScale(1.05);\n        }, this);\n        this.spriteBase.on(\"pointerout\", ()=>{\n            this.setScale(1);\n        }, this);\n        scene.add.existing(this);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb21wb25lbnRzL0NhcmRNYWtlci9Gb3JnZUJ1dHRvbi50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRWUsTUFBTUEsb0JBQW9CQyxPQUFPQyxXQUFXLENBQUNDLFNBQVM7SUFFakUsT0FBT0MsUUFBU0MsS0FBbUIsRUFBRTtJQUNqQyxFQUFFO0lBQ047SUEyQ0FDLFlBQWFDLFVBQW1CLEVBQUM7UUFDN0IsSUFBSSxDQUFDQSxVQUFVLEdBQUdBO1FBRWxCLGdCQUFnQjtRQUNoQixJQUFHLElBQUksRUFBQztZQUNKLElBQUksSUFBSSxDQUFDQSxVQUFVLEVBQUU7Z0JBQ2pCLElBQUlDLFNBQVMsSUFBSSxDQUFDQyxNQUFNLENBQUNDLGNBQWM7Z0JBQ3ZDRixPQUFPRyxTQUFTLENBQUMsR0FBRztZQUN4QixPQUFLO2dCQUNELElBQUksQ0FBQ0YsTUFBTSxDQUFDRyxLQUFLO1lBQ3JCO1FBQ0o7SUFDSjtJQTdDQUMsWUFBWVIsS0FBWSxFQUFFUyxJQUFXLENBQUMsRUFBRUMsSUFBVyxDQUFDLENBQUc7UUFDbkQsS0FBSyxDQUFDVixPQUFPUyxHQUFHQyxHQUFHLEVBQUU7YUFMekJSLGFBQXNCO1FBT2xCLElBQUksQ0FBQ0YsS0FBSyxHQUFHQTtRQUViLElBQUksQ0FBQ1csVUFBVSxHQUFHLElBQUksQ0FBQ1gsS0FBSyxDQUFDWSxHQUFHLENBQUNDLE1BQU0sQ0FBQyxHQUFFLEdBQUU7UUFDNUMsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSSxDQUFDZCxLQUFLLENBQUNZLEdBQUcsQ0FBQ0MsTUFBTSxDQUFDLEdBQUUsR0FBRSxVQUFVRSxXQUFXLENBQUNuQixPQUFPb0IsSUFBSSxDQUFDQyxRQUFRLENBQUM7UUFFekYsSUFBSSxDQUFDTCxHQUFHLENBQUMsSUFBSSxDQUFDRCxVQUFVO1FBQ3hCLElBQUksQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ0UsWUFBWTtRQUUxQixJQUFJLENBQUNILFVBQVUsQ0FBQ08sY0FBYztRQUM5QixJQUFJLENBQUNQLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLGVBQWM7WUFDN0IsSUFBSSxJQUFJLENBQUNqQixVQUFVLEVBQUc7WUFFdEIsSUFBSSxDQUFDa0IsUUFBUSxDQUFDO1lBRWQsSUFBSSxJQUFJLENBQUNDLGlCQUFpQixFQUFHLElBQUksQ0FBQ0EsaUJBQWlCO1FBQ3ZELEdBQUUsSUFBSTtRQUVOLElBQUksQ0FBQ1YsVUFBVSxDQUFDUSxFQUFFLENBQUMsZUFBYztZQUM3QixJQUFJLElBQUksQ0FBQ2pCLFVBQVUsRUFBRztZQUV0QixJQUFJLENBQUNrQixRQUFRLENBQUM7UUFDbEIsR0FBRSxJQUFJO1FBRU4sSUFBSSxDQUFDVCxVQUFVLENBQUNRLEVBQUUsQ0FBQyxjQUFhO1lBQzVCLElBQUksQ0FBQ0MsUUFBUSxDQUFDO1FBQ2xCLEdBQUUsSUFBSTtRQUVOcEIsTUFBTVksR0FBRyxDQUFDVSxRQUFRLENBQUMsSUFBSTtJQUMzQjtBQWVGO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2dhbWUvY29tcG9uZW50cy9DYXJkTWFrZXIvRm9yZ2VCdXR0b24udHM/ZDBhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lT2JqZWN0cywgU2NlbmUgfSBmcm9tIFwicGhhc2VyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcmdlQnV0dG9uIGV4dGVuZHMgUGhhc2VyLkdhbWVPYmplY3RzLkNvbnRhaW5lcntcbiAgICBcbiAgICBzdGF0aWMgcHJlbG9hZCggc2NlbmU6IFBoYXNlci5TY2VuZSApe1xuICAgICAgICAvL1xuICAgIH1cblxuICAgIHNjZW5lOiBTY2VuZVxuXG4gICAgc3ByaXRlQmFzZTogR2FtZU9iamVjdHMuU3ByaXRlXG4gICAgc3ByaXRlSGFtbWVyOiBHYW1lT2JqZWN0cy5TcHJpdGUgXG4gICAgaXNEaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlXG5cbiAgICBvblByZXNzZWRDYWxsYmFjazogRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBTY2VuZSwgeDpudW1iZXIgPSAwLCB5Om51bWJlciA9IDAgKSB7XG4gICAgICAgIHN1cGVyKHNjZW5lLCB4LCB5LCBbXSk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG5cbiAgICAgICAgdGhpcy5zcHJpdGVCYXNlID0gdGhpcy5zY2VuZS5hZGQuc3ByaXRlKDAsMCwnYnV0dG9uQ2lyY2xlQWN0aW9uJyk7XG4gICAgICAgIHRoaXMuc3ByaXRlSGFtbWVyID0gdGhpcy5zY2VuZS5hZGQuc3ByaXRlKDAsMCwnaGFtbWVyJykuc2V0Um90YXRpb24oUGhhc2VyLk1hdGguRGVnVG9SYWQoNDUpKTtcblxuICAgICAgICB0aGlzLmFkZCh0aGlzLnNwcml0ZUJhc2UpO1xuICAgICAgICB0aGlzLmFkZCh0aGlzLnNwcml0ZUhhbW1lcik7XG4gICAgICAgIFxuICAgICAgICB0aGlzLnNwcml0ZUJhc2Uuc2V0SW50ZXJhY3RpdmUoKTtcbiAgICAgICAgdGhpcy5zcHJpdGVCYXNlLm9uKCdwb2ludGVyZG93bicsKCk9PntcbiAgICAgICAgICAgIGlmKCB0aGlzLmlzRGlzYWJsZWQgKSByZXR1cm47XG5cbiAgICAgICAgICAgIHRoaXMuc2V0U2NhbGUoMSk7XG5cbiAgICAgICAgICAgIGlmKCB0aGlzLm9uUHJlc3NlZENhbGxiYWNrICkgdGhpcy5vblByZXNzZWRDYWxsYmFjaygpO1xuICAgICAgICB9LHRoaXMpO1xuXG4gICAgICAgIHRoaXMuc3ByaXRlQmFzZS5vbigncG9pbnRlcm92ZXInLCgpPT57XG4gICAgICAgICAgICBpZiggdGhpcy5pc0Rpc2FibGVkICkgcmV0dXJuO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB0aGlzLnNldFNjYWxlKDEuMDUpO1xuICAgICAgICB9LHRoaXMpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5zcHJpdGVCYXNlLm9uKCdwb2ludGVyb3V0JywoKT0+e1xuICAgICAgICAgICAgdGhpcy5zZXRTY2FsZSgxKTtcbiAgICAgICAgfSx0aGlzKTtcblxuICAgICAgICBzY2VuZS5hZGQuZXhpc3RpbmcodGhpcyk7XG4gICAgfVxuXG4gICAgc2V0RGlzYWJsZWQoIGlzRGlzYWJsZWQ6IGJvb2xlYW4pe1xuICAgICAgICB0aGlzLmlzRGlzYWJsZWQgPSBpc0Rpc2FibGVkXG5cbiAgICAgICAgLy8gVXBkYXRlIHJlbmRlclxuICAgICAgICBpZih0aGlzKXtcbiAgICAgICAgICAgIGlmKCB0aGlzLmlzRGlzYWJsZWQgKXtcbiAgICAgICAgICAgICAgICB2YXIgZWZmZWN0ID0gdGhpcy5wb3N0RlguYWRkQ29sb3JNYXRyaXgoKTtcbiAgICAgICAgICAgICAgICBlZmZlY3QuZ3JheXNjYWxlKDEsIHRydWUpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3N0RlguY2xlYXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgfSJdLCJuYW1lcyI6WyJGb3JnZUJ1dHRvbiIsIlBoYXNlciIsIkdhbWVPYmplY3RzIiwiQ29udGFpbmVyIiwicHJlbG9hZCIsInNjZW5lIiwic2V0RGlzYWJsZWQiLCJpc0Rpc2FibGVkIiwiZWZmZWN0IiwicG9zdEZYIiwiYWRkQ29sb3JNYXRyaXgiLCJncmF5c2NhbGUiLCJjbGVhciIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJzcHJpdGVCYXNlIiwiYWRkIiwic3ByaXRlIiwic3ByaXRlSGFtbWVyIiwic2V0Um90YXRpb24iLCJNYXRoIiwiRGVnVG9SYWQiLCJzZXRJbnRlcmFjdGl2ZSIsIm9uIiwic2V0U2NhbGUiLCJvblByZXNzZWRDYWxsYmFjayIsImV4aXN0aW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/components/CardMaker/ForgeButton.ts\n"));

/***/ })

});